{"version":3,"sources":["components/Blog/posts/SvgTricks/perspective-transform.js","components/Blog/posts/SvgTricks/DemoCloud.jsx","components/Blog/posts/SvgTricks/DemoMountains.jsx","components/Blog/posts/SvgTricks/DemoToriiGate.jsx","components/Blog/posts/SvgTricks/Demo.jsx","components/Blog/posts/SvgTricks/SvgTricks.jsx","components/_ui/Expandy/Expandy.jsx","components/_ui/Blockquote/Blockquote.jsx","components/_ui/Gauge/Gauge.jsx"],"names":["numeric","getNormalizationCoefficients","srcPts","dstPts","isInverse","tmp","matC","matA","matB","inv","dotMMsmall","transpose","e","console","log","num","matD","matX","dotMV","i","length","Math","round","dim","x","y","_dim","_foreach2","s","k","f","n","ret","Array","cloneV","_n","clone","V","diag","d","i1","j","Ai","A","rep","v","identity","a","Aj","Ii","Ij","abs","m","I","i0","v0","p","q","r","foo","bar","woo","dotVV","A0","A1","Bj","PerspT","window","this","undefined","coeffs","coeffsInv","transform","coordinates","transformInverse","DemoCloud","_ref","Random","_ref$inputs","inputs","_ref$x","_ref$y","_ref$size","size","_ref$color","color","_ref$type","type","puffPositions","useMemo","numberOfCloudPuffs","snapToInterval","gaussian","items","movedItems","Object","toConsumableArray","forceSimulation","force","forceX","strength","forceY","forceCollide","stop","tick","separatePuffs","range","map","angle","chance","PI","_getPointFromAngleAnd","getPointFromAngleAndDistance","_getPointFromAngleAnd2","slicedToArray","max","cloudPuffR","opacity","react_default","createElement","concat","style","filter","mixBlendMode","cloudBlendMode","_ref2","key","cx","cy","fill","DemoMountains","_ref$width","width","_ref$height","height","_ref$backgroundColors","backgroundColors","mountains","colorScale","scaleLinear","domain","numberOfMountains","runningX","points","slice","path","line","curve","curveBasis","clipPath","fieldsYOffset","blendMode","mask","DemoToriiGate","_useMemo","colors","standingY","doorWidth","doorHeight","legXOffset","legWidth","doorwayWidth","legPathL","join","legPathR","svgpath","scale","toString","crossbarY","decorationW","decorationH","decorationsPathL","decorationsPathR","crossbarPath","translate","topbarPath","topbarPath2","middleBarWidth","comboPath","shadowAngle","shadowOffsetPoint","grassPathL","grassPathR","id","stroke","strokeWidth","rawRandom","Demo","svgElement","useRef","hasMounted","_useState","useState","_useState2","noiseString","setNoiseString","_useState3","_useState4","noiseStringLarge","setNoiseStringLarge","currentSeed","parsedParams","params","objectSpread2","name","controlParams","fromPairs","param","values","value","min","_useControls","useControls","_useControls2","setControls","useEffect","current","keys","forEach","localStorage","setItem","seed","getFromLocalStorage","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","getItem","defineProperty","setSeed","apply","arguments","perspective","Persp","skew","yStretch","pickedColors","pick","fieldColors","skyColors","interpolate","interpolateLab","clamp","cloudColorScale","getLightenedColor","clouds","numberOfClouds","noise2D","noiseFreq","noiseAmp","numberOfCloudsMid","numberOfCloudsFore","fieldSize","sqrt","numberOfFields","separateItems","voronoi","Delaunay","from","fields","cellPolygon","centerOfPoints","getCenterOfPoints","curveCatmullRomClosed","alpha","Boolean","sun","birdsPosition","fieldsGroupPaths","area","y0","y1","createNoise","_callee2","_context2","getNoiseString","sent","Fragment","leva_esm","margin","maxHeight","viewBox","ref","strokeLinejoin","strokeLinecap","in","stdDeviation","cloudBlurStdev","result","mode","cloudBlur1","cloudBlur2","in2","operator","x1","x2","y2","offset","stopColor","gradientUnits","maskUnits","preserveAspectRatio","maskContentUnits","patternUnits","href","patternContentUnits","_ref3","birdPath","_ref4","SvgTricks_DemoCloud","assign","SvgTricks_DemoMountains","_ref5","SvgTricks_DemoToriiGate","_ref6","hclColor","hcl","l","c","numberOfTicks","reduce","b","interval","blendingModes","step","options","distance","cos","sin","_ref7","_callee3","color1","color2","_context3","Promise","resolve","reject","canvas","document","ctx","getContext","d3Color1","color1Rgb","g","d3Color2","color2Rgb","imageData","getImageData","data","index","colorRgb","putImageData","toDataURL","remove","catch","_x","_x2","_x3","_x4","_x5","_x6","sections","title","P","React","memo","children","className","SvgTricks","setSectionIndex","SvgTricks_Demo","section","ScrollEvent","isInViewChange","status","Expandy","trigger","triggerExpandText","doHideIfCollapsed","props","_Users_linying_codespace_Lyzzz_s_Blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","_Users_linying_codespace_Lyzzz_s_Blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isExpanded","setIsExpanded","react__WEBPACK_IMPORTED_MODULE_2___default","onToggle","target","open","components_ui_Tooltip_Tooltip__WEBPACK_IMPORTED_MODULE_4__","contents","components_ui_Icon_Icon__WEBPACK_IMPORTED_MODULE_3__","direction","Blockquote","source","_ref$isQuote","isQuote","_Users_linying_codespace_Lyzzz_s_Blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","d3__WEBPACK_IMPORTED_MODULE_1__","baseArc","arc","cornerRadius","innerRadius","outerRadius","startAngle","endAngle","gradientSteps","ticks","angleScale","formatNumber","d3Format","Gauge","_ref$value","_ref$min","_ref$max","_ref$format","format","label","units","percent","percentScale","filledArc","markerLocation","getPositionFromPoint"],"mappings":"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","file":"static/js/45.5dec7044.chunk.js","sourcesContent":["\n// adapted from https://github.com/jasonwebb/morphogenesis-resources\n\nvar numeric = {};\n\nnumeric.dim = function dim(x) {\n  var y, z;\n  if (typeof x === \"object\") {\n    y = x[0];\n    if (typeof y === \"object\") {\n      z = y[0];\n      if (typeof z === \"object\") {\n        return numeric._dim(x);\n      }\n      return [x.length, y.length];\n    }\n    return [x.length];\n  }\n  return [];\n};\n\nnumeric._foreach2 = (function _foreach2(x, s, k, f) {\n  if (k === s.length - 1) { return f(x); }\n  var i, n = s[k], ret = Array(n);\n  for (i = n - 1; i >= 0; i--) { ret[i] = _foreach2(x[i], s, k + 1, f); }\n  return ret;\n});\n\nnumeric.cloneV = function (x) {\n  var _n = x.length;\n  var i, ret = Array(_n);\n\n  for (i = _n - 1; i !== -1; --i) {\n    ret[i] = (x[i]);\n  }\n  return ret;\n};\n\nnumeric.clone = function (x) {\n  if (typeof x !== \"object\") return (x);\n  var V = numeric.cloneV;\n  var s = numeric.dim(x);\n  return numeric._foreach2(x, s, 0, V);\n};\n\nnumeric.diag = function diag(d) {\n  var i, i1, j, n = d.length, A = Array(n), Ai;\n  for (i = n - 1; i >= 0; i--) {\n    Ai = Array(n);\n    i1 = i + 2;\n    for (j = n - 1; j >= i1; j -= 2) {\n      Ai[j] = 0;\n      Ai[j - 1] = 0;\n    }\n    if (j > i) { Ai[j] = 0; }\n    Ai[i] = d[i];\n    for (j = i - 1; j >= 1; j -= 2) {\n      Ai[j] = 0;\n      Ai[j - 1] = 0;\n    }\n    if (j === 0) { Ai[0] = 0; }\n    A[i] = Ai;\n  }\n  return A;\n};\n\nnumeric.rep = function rep(s, v, k) {\n  if (typeof k === \"undefined\") { k = 0; }\n  var n = s[k], ret = Array(n), i;\n  if (k === s.length - 1) {\n    for (i = n - 2; i >= 0; i -= 2) { ret[i + 1] = v; ret[i] = v; }\n    if (i === -1) { ret[0] = v; }\n    return ret;\n  }\n  for (i = n - 1; i >= 0; i--) { ret[i] = numeric.rep(s, v, k + 1); }\n  return ret;\n};\n\nnumeric.identity = function (n) { return numeric.diag(numeric.rep([n], 1)); };\n\nnumeric.inv = function inv(a) {\n  var s = numeric.dim(a), abs = Math.abs, m = s[0], n = s[1];\n  var A = numeric.clone(a), Ai, Aj;\n  var I = numeric.identity(m), Ii, Ij;\n  var i, j, k, x;\n  for (j = 0; j < n; ++j) {\n    var i0 = -1;\n    var v0 = -1;\n    for (i = j; i !== m; ++i) { k = abs(A[i][j]); if (k > v0) { i0 = i; v0 = k; } }\n    Aj = A[i0]; A[i0] = A[j]; A[j] = Aj;\n    Ij = I[i0]; I[i0] = I[j]; I[j] = Ij;\n    x = Aj[j];\n    for (k = j; k !== n; ++k)    Aj[k] /= x;\n    for (k = n - 1; k !== -1; --k) Ij[k] /= x;\n    for (i = m - 1; i !== -1; --i) {\n      if (i !== j) {\n        Ai = A[i];\n        Ii = I[i];\n        x = Ai[j];\n        for (k = j + 1; k !== n; ++k)  Ai[k] -= Aj[k] * x;\n        for (k = n - 1; k > 0; --k) { Ii[k] -= Ij[k] * x; --k; Ii[k] -= Ij[k] * x; }\n        if (k === 0) Ii[0] -= Ij[0] * x;\n      }\n    }\n  }\n  return I;\n};\n\nnumeric.dotMMsmall = function dotMMsmall(x, y) {\n  var i, j, k, p, q, r, ret, foo, bar, woo, i0;\n  p = x.length; q = y.length; r = y[0].length;\n  ret = Array(p);\n  for (i = p - 1; i >= 0; i--) {\n    foo = Array(r);\n    bar = x[i];\n    for (k = r - 1; k >= 0; k--) {\n      woo = bar[q - 1] * y[q - 1][k];\n      for (j = q - 2; j >= 1; j -= 2) {\n        i0 = j - 1;\n        woo += bar[j] * y[j][k] + bar[i0] * y[i0][k];\n      }\n      if (j === 0) { woo += bar[0] * y[0][k]; }\n      foo[k] = woo;\n    }\n    ret[i] = foo;\n  }\n  return ret;\n};\n\nnumeric.dotMV = function dotMV(x, y) {\n  var p = x.length, i;\n  var ret = Array(p), dotVV = numeric.dotVV;\n  for (i = p - 1; i >= 0; i--) { ret[i] = dotVV(x[i], y); }\n  return ret;\n};\n\nnumeric.dotVV = function dotVV(x, y) {\n  var i, n = x.length, i1, ret = x[n - 1] * y[n - 1];\n  for (i = n - 2; i >= 1; i -= 2) {\n    i1 = i - 1;\n    ret += x[i] * y[i] + x[i1] * y[i1];\n  }\n  if (i === 0) { ret += x[0] * y[0]; }\n  return ret;\n};\n\nnumeric.transpose = function transpose(x) {\n  var i, j, m = x.length, n = x[0].length, ret = Array(n), A0, A1, Bj;\n  for (j = 0; j < n; j++) ret[j] = Array(m);\n  for (i = m - 1; i >= 1; i -= 2) {\n    A1 = x[i];\n    A0 = x[i - 1];\n    for (j = n - 1; j >= 1; --j) {\n      Bj = ret[j]; Bj[i] = A1[j]; Bj[i - 1] = A0[j];\n      --j;\n      Bj = ret[j]; Bj[i] = A1[j]; Bj[i - 1] = A0[j];\n    }\n    if (j === 0) {\n      Bj = ret[0]; Bj[i] = A1[0]; Bj[i - 1] = A0[0];\n    }\n  }\n  if (i === 0) {\n    A0 = x[0];\n    for (j = n - 1; j >= 1; --j) {\n      ret[j][0] = A0[j];\n      --j;\n      ret[j][0] = A0[j];\n    }\n    if (j === 0) { ret[0][0] = A0[0]; }\n  }\n  return ret;\n};\n\n\n\nfunction round(num) {\n  return Math.round(num * 10000000000) / 10000000000;\n}\n\nfunction getNormalizationCoefficients(srcPts, dstPts, isInverse) {\n  if (isInverse) {\n    var tmp = dstPts;\n    dstPts = srcPts;\n    srcPts = tmp;\n  }\n  var r1 = [srcPts[0], srcPts[1], 1, 0, 0, 0, -1 * dstPts[0] * srcPts[0], -1 * dstPts[0] * srcPts[1]];\n  var r2 = [0, 0, 0, srcPts[0], srcPts[1], 1, -1 * dstPts[1] * srcPts[0], -1 * dstPts[1] * srcPts[1]];\n  var r3 = [srcPts[2], srcPts[3], 1, 0, 0, 0, -1 * dstPts[2] * srcPts[2], -1 * dstPts[2] * srcPts[3]];\n  var r4 = [0, 0, 0, srcPts[2], srcPts[3], 1, -1 * dstPts[3] * srcPts[2], -1 * dstPts[3] * srcPts[3]];\n  var r5 = [srcPts[4], srcPts[5], 1, 0, 0, 0, -1 * dstPts[4] * srcPts[4], -1 * dstPts[4] * srcPts[5]];\n  var r6 = [0, 0, 0, srcPts[4], srcPts[5], 1, -1 * dstPts[5] * srcPts[4], -1 * dstPts[5] * srcPts[5]];\n  var r7 = [srcPts[6], srcPts[7], 1, 0, 0, 0, -1 * dstPts[6] * srcPts[6], -1 * dstPts[6] * srcPts[7]];\n  var r8 = [0, 0, 0, srcPts[6], srcPts[7], 1, -1 * dstPts[7] * srcPts[6], -1 * dstPts[7] * srcPts[7]];\n\n  var matA = [r1, r2, r3, r4, r5, r6, r7, r8];\n  var matB = dstPts;\n  var matC;\n\n  try {\n    matC = numeric.inv(numeric.dotMMsmall(numeric.transpose(matA), matA));\n  } catch (e) {\n    console.log(e);\n    return [1, 0, 0, 0, 1, 0, 0, 0];\n  }\n\n  var matD = numeric.dotMMsmall(matC, numeric.transpose(matA));\n  var matX = numeric.dotMV(matD, matB);\n  for (var i = 0; i < matX.length; i++) {\n    matX[i] = round(matX[i]);\n  }\n  matX[8] = 1;\n\n  return matX;\n}\n\nfunction PerspT(srcPts, dstPts) {\n  if ((typeof window !== 'undefined' && window === this) || this === undefined) {\n    return new PerspT(srcPts, dstPts);\n  }\n\n  const coeffs = getNormalizationCoefficients(srcPts, dstPts, false);\n  const coeffsInv = getNormalizationCoefficients(srcPts, dstPts, true);\n\n  const transform = function (x, y) {\n    var coordinates = [];\n    coordinates[0] = (coeffs[0] * x + coeffs[1] * y + coeffs[2]) / (coeffs[6] * x + coeffs[7] * y + 1);\n    coordinates[1] = (coeffs[3] * x + coeffs[4] * y + coeffs[5]) / (coeffs[6] * x + coeffs[7] * y + 1);\n    return coordinates;\n  }\n\n  const transformInverse = function (x, y) {\n    var coordinates = [];\n    coordinates[0] = (coeffsInv[0] * x + coeffsInv[1] * y + coeffsInv[2]) / (coeffsInv[6] * x + coeffsInv[7] * y + 1);\n    coordinates[1] = (coeffsInv[3] * x + coeffsInv[4] * y + coeffsInv[5]) / (coeffsInv[6] * x + coeffsInv[7] * y + 1);\n    return coordinates;\n  }\n  return {\n    transform,\n    transformInverse\n  }\n};\n\nexport default PerspT;","import React, { useMemo } from \"react\"\nimport { range } from \"d3-array\"\nimport { forceCollide, forceSimulation, forceX, forceY } from \"d3-force\"\nimport { getPointFromAngleAndDistance, snapToInterval } from \"./Demo\"\n\nexport const DemoCloud = ({\n  Random,\n  inputs = {},\n  x = 0,\n  y = 0,\n  size = \"m\",\n  color = \"white\",\n  type = \"normal\",\n}) => {\n\n  const {\n    puffPositions,\n  } = useMemo(() => {\n    const separatePuffs = (items) => {\n      let movedItems = [...items]\n      const simulation = forceSimulation(movedItems)\n        .force(\"x\", forceX((d) => d.x).strength(0.01))\n        .force(\n          \"y\",\n          forceY((d) => (size === \"s\" ? d.y : d.y)).strength(type === \"horizontal\" ? 0.9 : 0.12),\n        )\n        .force(\"collide\", forceCollide((d) => d.r).strength(0.1))\n        .stop()\n      simulation.tick(size === \"s\" ? 30 : 10)\n      return movedItems\n    }\n\n    const numberOfCloudPuffs = snapToInterval(\n      Random.gaussian(\n        inputs.numberOfCloudPuffs * (size === \"s\" ? 2 : size === \"l\" ? 1.5 : 1),\n        inputs.numberOfCloudPuffs * 0.4,\n      ),\n      1,\n    )\n    const puffPositions = separatePuffs(\n      range(0, numberOfCloudPuffs).map((i) => {\n        const angle = Random.chance(0.2)\n          ? (i / numberOfCloudPuffs) * Math.PI * 2\n          : Random.gaussian(Math.PI * 0.5, Math.PI * 0.1)\n        const [x, y] = getPointFromAngleAndDistance(\n          angle,\n          size === \"s\" ? 3 : type === \"horizontal\" ? 5 : 10,\n        )\n        const r = Math.max(\n          1,\n          Random.gaussian(inputs.cloudPuffR, inputs.cloudPuffR * 0.6) * (size === \"s\" ? 0.5 : 1),\n        )\n        const opacity = Random.chance(size === \"s\" ? 0.2 : 0.9) ? 1 : 0.8\n        return {\n          x,\n          y,\n          r,\n          opacity,\n        }\n      }),\n    )\n\n    return {\n      puffPositions,\n    }\n  }, [inputs, size, type, Random])\n\n  return (\n    <g\n      transform={`translate(${x},${y})`}\n      style={{\n        filter: \"url(#cloud)\",\n        mixBlendMode: inputs.cloudBlendMode\n      }}>\n      {puffPositions.map(({ x, y, r, opacity }, i) => (\n        <circle key={i} cx={x} cy={y} r={r} fill={color} opacity={opacity} />\n      ))}\n    </g>\n\n  )\n\n}\n\nexport default DemoCloud\n\n","import React, { useMemo} from \"react\"\nimport { range } from \"d3-array\"\nimport { scaleLinear } from \"d3-scale\"\nimport { curveBasis, line } from \"d3-shape\"\n\nexport const DemoMountains = ({\n  Random,\n  inputs = {},\n   width = 100,\n   height = 100,\n   backgroundColors = [],\n}) => {\n\n  const {\n    mountains,\n  } = useMemo(() => {\n\n  const colorScale = scaleLinear()\n  .domain([-2, inputs.numberOfMountains + 2])\n  .range([backgroundColors[0], backgroundColors[1]])\n\nconst mountains = range(0, inputs.numberOfMountains).map((i) => {\n  let runningX = Random.gaussian(width * 0.5, width * 0.5)\n  let points = [\n    {\n      x: runningX - width * 0.5,\n      y: 0,\n    },\n    ...range(0, 3).map(() => {\n      runningX += Random.gaussian(width * 0.3, width * 0.1)\n      return {\n        x: runningX,\n        y: -Random.gaussian(height * 0.05 + i * 0.01, height * 0.06),\n      }\n    }),\n  ]\n  points = [\n    ...points,\n    {\n      x: points.slice(-1)[0].x + width * 0.5,\n      y: 0,\n    },\n  ]\n  return {\n    path: line()\n      .x((d) => d.x)\n      .y((d) => d.y)\n      .curve(curveBasis)(points),\n    color: colorScale(i),\n  }\n})\n\n    return {\n      mountains,\n    }\n  }, [inputs,Random,width,height,backgroundColors])\n\n  return (\n    <g style={{ clipPath: \"url(#skyClip)\" }}>\n      <g transform={`translate(0, ${height * inputs.fieldsYOffset})`}>\n        {mountains.map(({ path, color }, i) => (\n          <g key={i}>\n            <path d={path} fill={color} />\n            <g style={{\n              mixBlendMode: inputs.blendMode,\n              opacity: 0.2,\n            }}>\n              <g style={{\n                mask: \"url(#gradient2)\"\n              }}>\n                <path d={path} fill=\"url(#noise-pattern)\" />\n              </g>\n            </g>\n          </g>\n        ))}\n      </g>\n    </g>\n\n\n  )\n\n}\n\nexport default DemoMountains\n\n","import React, { useMemo } from \"react\"\n\nimport svgpath from \"svgpath\"\nimport { range } from \"d3-array\"\nimport { getPointFromAngleAndDistance } from \"./Demo\"\n\n\nexport const DemoToriiGate = ({\n  Random,\n  inputs = {},\n  width = 100,\n  height = 100,\n  colors = [],\n}) => {\n\n  const {\n    standingY,\n    doorHeight,\n    legXOffset,\n    legWidth,\n    legPathR,\n    comboPath,\n    grassPathL,\n    grassPathR,\n    shadowOffsetPoint,\n  } = useMemo(() => {\n\n    const standingY = Random.gaussian(height * 0.73, height * 0.01)\n    const doorWidth = Random.gaussian(width * 0.68, width * 0.01)\n    const doorHeight = Random.gaussian(doorWidth * 0.63, doorWidth * 0.03)\n    const legXOffset = doorWidth * Random.gaussian(0.3, 0.03)\n    const legWidth = Random.gaussian(width * 0.044, width * 0.006)\n    const doorwayWidth = Random.gaussian(doorHeight * 0.05, width * 0.001)\n    const legPathL = [\n      \"M\",\n      -legXOffset - legWidth * 0.5,\n      0,\n      \"L\",\n      -legXOffset - legWidth * Random.gaussian(0.4, 0.1),\n      -doorHeight,\n      \"L\",\n      -legXOffset + legWidth * Random.gaussian(0.4, 0.1),\n      -doorHeight,\n      \"L\",\n      -legXOffset + legWidth * 0.5,\n      0,\n      \"Z\",\n    ].join(\" \")\n    const legPathR = svgpath(legPathL).scale(-1, 1).toString()\n\n    const crossbarY = doorHeight * 0.8\n    const decorationW = Random.gaussian(doorWidth * 0.03, doorWidth * 0.001)\n    const decorationH = Random.gaussian(doorHeight * 0.02, doorHeight * 0.001)\n    const decorationsPathL = [\n      \"M\",\n      -legXOffset - legWidth * 0.5 - decorationW,\n      -crossbarY,\n      \"L\",\n      -legXOffset - legWidth * 0.5 - decorationW,\n      -crossbarY - decorationH,\n      \"C\",\n      -legXOffset - legWidth * 0.5,\n      -crossbarY,\n      -legXOffset + legWidth * 0.5,\n      -crossbarY,\n      -legXOffset + legWidth * 0.5 + decorationW,\n      -crossbarY - decorationH,\n      \"L\",\n      -legXOffset + legWidth * 0.5 + decorationW,\n      -crossbarY,\n      \"Z\",\n    ].join(\" \")\n    const decorationsPathR = svgpath(decorationsPathL).scale(-1, 1).toString()\n    const crossbarPath = svgpath([\"M\", -1, 0, \"L\", 1, 0, \"L\", 1, 1, \"L\", -1, 1, \"Z\"].join(\" \"))\n      .scale(doorWidth * 0.5, doorwayWidth)\n      .translate(0, -crossbarY)\n      .toString()\n    const topbarPath = svgpath([\"M\", -1, 0, \"L\", 1, 0, \"L\", 1, 1, \"L\", -1, 1, \"Z\"].join(\" \"))\n      .scale(doorWidth * 0.5, doorwayWidth)\n      .translate(0, -doorHeight)\n      .toString()\n    const topbarPath2 = svgpath(\n      [\"M\", -0.95, 0, \"L\", 0.95, 0, \"L\", 1, -1.5, \"C\", 0.5, -1, -0.5, -1, -1, -1.5, \"Z\"].join(\" \"),\n    )\n      .scale(doorWidth * 0.6, doorwayWidth)\n      .translate(0, -doorHeight)\n      .toString()\n    const middleBarWidth = Random.gaussian(doorWidth * 0.16, doorWidth * 0.01)\n    const middleBar = [\n      \"M\",\n      -middleBarWidth * 0.5,\n      -crossbarY,\n      \"L\",\n      -middleBarWidth * 0.5,\n      -doorHeight,\n      \"L\",\n      middleBarWidth * 0.5,\n      -doorHeight,\n      \"L\",\n      middleBarWidth * 0.5,\n      -crossbarY,\n      \"Z\",\n    ].join(\" \")\n    const comboPath =\n      // legPathR +\n      legPathL +\n      decorationsPathL +\n      decorationsPathR +\n      topbarPath2 +\n      crossbarPath +\n      topbarPath +\n      middleBar\n\n    const shadowAngle = Random.gaussian(Math.PI * 0.1, Math.PI * 0.01)\n    const shadowOffsetPoint = getPointFromAngleAndDistance(shadowAngle, doorHeight)\n\n    const grassPathL = range(0, 13)\n      .map(() => {\n        return [\n          Random.gaussian(13 / legWidth, 0.001),\n          Random.gaussian(0, doorHeight * 0.001),\n        ].join(\" \")\n      })\n      .join(\" l \")\n    const grassPathR = range(0, 13)\n      .map(() => {\n        return [\n          Random.gaussian(13 / legWidth, 0.001),\n          Random.gaussian(0, doorHeight * 0.006),\n        ].join(\" \")\n      })\n      .join(\" l \")\n\n    return {\n      standingY,\n      doorHeight,\n      legXOffset,\n      legWidth,\n      legPathR,\n      comboPath,\n      grassPathL,\n      grassPathR,\n      shadowOffsetPoint,\n    }\n  }, [Random, inputs, width, height])\n\n  return (\n    <g fill=\"black\">\n      <defs>\n        <mask id=\"door\">\n          <path\n            d={svgpath(comboPath)\n              .translate(width / 2, standingY)\n              .toString()}\n            fill=\"white\"\n          />\n          <path\n            d={svgpath(legPathR)\n              .translate(width / 2, standingY)\n              .toString()}\n            fill=\"white\"\n          />\n        </mask>\n\n        <mask id=\"grass\">\n          <rect x={-width / 2} y={-standingY} width={width} height={height} fill=\"white\" />\n          <path\n            d={svgpath(\n              `M ${-legXOffset - legWidth * 0.6} 0 l 0 ${-doorHeight * 0.01} l ${grassPathL} L ${-legXOffset + legWidth\n              } 10 Z`,\n            )\n              // .translate(width / 2, standingY)\n              .toString()}\n            fill=\"black\"\n            stroke=\"black\"\n            strokeWidth=\"0.3\"\n          />\n          <path\n            d={svgpath(\n              `M ${legXOffset - legWidth * 0.6} 0 l 0 ${-doorHeight * 0.01} l ${grassPathR} L ${legXOffset + legWidth\n              } 10 Z`,\n            )\n              // .translate(width / 2, standingY)\n              .toString()}\n            fill=\"black\"\n            stroke=\"black\"\n            strokeWidth=\"0.3\"\n          />\n        </mask>\n      </defs>\n\n      <g transform={`translate(${width / 2}, ${standingY})`}>\n        <g style={{\n          mask: \"url(#grass)\"\n        }}>\n          <path d={comboPath} fill=\"#000\" />\n          <path d={legPathR} fill=\"#000\" />\n        </g>\n\n        <g stroke=\"black\" strokeWidth={legWidth * 0.5} opacity=\"0.1\" style={{\n          mixBlendMode: \"overlay\"\n        }}>\n          <g style={{\n            mask: \"url(#gradient-reverse)\"\n          }}>\n            <path\n              d={`M ${-legXOffset - 1.8} -1 L ${-legXOffset + shadowOffsetPoint[0]} ${shadowOffsetPoint[1]}`}\n            />\n          </g>\n          <g style={{\n            mask: \"url(#gradient-reverse)\"\n          }}>\n            <path\n              d={`M ${legXOffset - 1.8} -1 L ${legXOffset + shadowOffsetPoint[0]} ${shadowOffsetPoint[1]}`}\n            />\n          </g>\n        </g>\n      </g>\n\n      <g style={{\n        mixBlendMode: \"multiply\", opacity: 0.6\n      }}>\n        <g style={{\n          mask: \"url(#grass)\"\n        }}>\n          <g style={{\n            mask: \"url(#gradient2)\"\n          }}>\n            <path\n              d={svgpath(comboPath)\n                .translate(width / 2, standingY)\n                .toString()}\n              fill=\"url(#noise-pattern)\"\n            />\n            <path\n              d={svgpath(legPathR)\n                .translate(width / 2, standingY)\n                .toString()}\n              fill=\"url(#noise-pattern)\"\n            />\n          </g>\n        </g>\n      </g>\n\n      <g style={{\n        mask: \"url(#gradient-reverse)\"\n      }}>\n        <rect\n          width=\"100%\"\n          y={standingY - doorHeight - 30}\n          height={doorHeight + 30}\n          fill=\"url(#background)\"\n          style={{\n            opacity: 0.3, mask: \"url(#door)\"\n          }}\n        />\n      </g>\n    </g>\n  )\n\n}\n\nexport default DemoToriiGate\n\n","import React, { useCallback, useEffect, useMemo, useRef, useState } from \"react\"\nimport fromPairs from \"lodash/fromPairs\"\nimport { Leva, useControls } from \"leva\"\nimport {\n  interpolateLab,\n  hcl,\n  scaleLinear,\n  range,\n  Delaunay,\n  line,\n  curveCatmullRomClosed,\n  area, forceSimulation, forceX, forceY, forceCollide,\n  color\n} from \"d3\"\nimport svgpath from \"svgpath\"\nimport rawRandom from \"canvas-sketch-util/random\"\nimport Persp from \"./perspective-transform\"\nimport DemoCloud from \"./DemoCloud\"\nimport DemoMountains from \"./DemoMountains\"\nimport DemoToriiGate from \"./DemoToriiGate\"\n\nconst width = 100\nconst height = 150\nconst Random = rawRandom\n\nconst Demo = () => {\n  const svgElement = useRef()\n  const hasMounted = useRef(false)\n\n  const [noiseString, setNoiseString] = useState(\"\")\n  const [noiseStringLarge, setNoiseStringLarge] = useState(\"\")\n\n  const currentSeed = useRef(0)\n\n  const parsedParams = params.map((d) => ({ ...d, id: `fields--${d.name}` }))\n  const controlParams = useMemo(() => {\n    return fromPairs(parsedParams.map(param => {\n      let values = {\n        ...param,\n        value: param.value,\n      }\n      if (values.max) values.min = values.min || 0\n      return [param.name, values]\n    }))\n  }, [])\n\n  const [inputs, setControls] = useControls(() => (controlParams))\n\n  useEffect(() => {\n    if (!hasMounted.current) return\n    Object.keys(inputs).forEach((key) => {\n      const value = inputs[key]\n      localStorage.setItem(controlParams[key].id, value)\n    })\n    if (currentSeed.current !== inputs.seed) {\n      currentSeed.current = inputs.seed\n    }\n  }, [inputs])\n\n  const getFromLocalStorage = async () => {\n    if (typeof localStorage === \"undefined\") return\n    parsedParams.forEach((param) => {\n      let value = localStorage.getItem(param.id)\n      if (typeof param[\"value\"] === \"number\") value = +value\n      if (typeof param[\"value\"] === \"boolean\") value = value === \"true\"\n      if (value) {\n        setControls({ [param.name]: value })\n      }\n    })\n\n    hasMounted.current = true\n    Random.setSeed(`fields--${inputs[\"seed\"]}`)\n  }\n\n  useEffect(() => {\n    getFromLocalStorage()\n  }, [])\n\n  const {\n    pickedColors, backgroundColors,\n    clouds,\n    fields,\n    sun,\n    birdsPosition,\n    fieldsGroupPaths,\n  } = useMemo(() => {\n    Random.setSeed(`fields--${inputs[\"seed\"]}`)\n    const perspective = Persp(\n      [0, 0, width, 0, width, height, 0, height],\n      [\n        0,\n        0,\n        width,\n        0,\n        width * inputs.skew,\n        height * inputs.yStretch,\n        -width * (inputs.skew - 1),\n        height * inputs.yStretch,\n      ],\n    )\n    const pickedColors = [Random.pick(fieldColors), Random.pick(fieldColors), Random.pick(colors)]\n    const backgroundColors = [Random.pick(skyColors), Random.pick(skyColors)]\n\n    const colorScale = scaleLinear()\n      .domain([-2, 2])\n      .range([pickedColors[0], pickedColors[1]])\n      .interpolate(interpolateLab)\n      .clamp(true)\n    const cloudColorScale = scaleLinear()\n      .domain([-1, 1])\n      .range([\"white\", getLightenedColor(backgroundColors[0])])\n      .interpolate(interpolateLab)\n    const clouds = [\n      ...range(0, inputs.numberOfClouds).map(() => {\n        const x = Random.gaussian(width / 2, width / 4)\n        const y = Random.gaussian(height * 0.6, height * 0.2)\n        const color = cloudColorScale(Random.noise2D(x, y, inputs.noiseFreq, inputs.noiseAmp))\n        return {\n          x,\n          y,\n          color,\n          size: \"l\",\n        }\n      }),\n      ...range(0, inputs.numberOfCloudsMid).map(() => {\n        const x = Random.gaussian(Random.chance(0.5) ? width * 0.1 : width * 0.8, width / 4)\n        const y = Random.gaussian(height * 0.63, height * 0.001)\n        const color = cloudColorScale(Random.gaussian(-0.7, 0.1))\n        return {\n          x,\n          y,\n          color,\n          size: \"s\",\n          type: \"horizontal\",\n        }\n      }),\n      ...range(0, inputs.numberOfCloudsFore).map(() => {\n        const x = Random.gaussian(Random.chance(0.5) ? 0 : width, width * 0.2)\n        const y = Random.gaussian(height * 0.7, height * 0.1)\n        const color = cloudColorScale(Random.gaussian(-0.7, 0.1))\n        return {\n          x,\n          y,\n          color,\n          type: \"horizontal\",\n        }\n      }),\n    ]\n\n    const fieldSize = Math.sqrt((width * height) / inputs.numberOfFields)\n    let points = range(0, inputs.numberOfFields).map(() => {\n      const x = Random.gaussian(width / 2, width / 4)\n      const y = Random.gaussian(height / 2, height / 4)\n      const color = colorScale(Random.noise2D(x, y, inputs.noiseFreq, inputs.noiseAmp))\n      return {\n        x,\n        y,\n        r: fieldSize / 2,\n        color,\n      }\n    })\n    points = separateItems(points, 3)\n    const voronoi = Delaunay.from(points.map((d) => [d.x, d.y])).voronoi([0, 0, width, height])\n    const fields = points\n      .map((d, i) => {\n        let points = voronoi.cellPolygon(i)\n        if (!points) return null\n        points = points.map((d) => perspective.transform(...d))\n\n        const centerOfPoints = getCenterOfPoints(points)\n        const path =\n          points &&\n          svgpath(\n            line()\n              .x((d) => d[0])\n              .y((d) => d[1])\n              .curve(curveCatmullRomClosed.alpha(0.8))(points),\n          )\n            .translate(-centerOfPoints[0], -centerOfPoints[1])\n            .scale(1, 1)\n            .translate(centerOfPoints[0], centerOfPoints[1] + height * inputs.fieldsYOffset)\n            .toString()\n        return {\n          ...d,\n          points,\n          path,\n        }\n      })\n      .filter(Boolean)\n\n    const sun = {\n      x: Random.gaussian(width / 2, width / 4),\n      y: Random.gaussian(height * 0.3, height * 0.1),\n      r: Random.gaussian(width / 4, width * 0.1),\n      color: \"white\",\n    }\n\n    const birdsPosition = [Random.range(0, width), Random.range(0, height * 0.6)]\n\n    const fieldsGroupPaths = range(0, 3).map((i) => {\n      const points = [\n        [-width, height * 2],\n        [-width, height * 0.4],\n        ...range(0, 3).map((j) => {\n          const x = Random.gaussian(width * (j * 0.3) + 1, width * 0.1)\n          const y = Random.gaussian(\n            height * inputs.fieldsYOffset + i * height * 0.06,\n            height * 0.02,\n          )\n          return [x, y]\n        }),\n        [width * 2, height * 0.7],\n        [width * 2, height * 2],\n      ]\n\n      const pathArea = area()\n        .x((d) => d[0])\n        .y0((d) => d[1])\n        .y1(height)\n        .curve(curveCatmullRomClosed.alpha(0.8))(points)\n\n      return pathArea\n    })\n    return {\n      pickedColors,\n      backgroundColors,\n      clouds,\n      fields,\n      sun,\n      birdsPosition,\n      fieldsGroupPaths,\n    }\n  }, [inputs])\n\n  const createNoise = async () => {\n    const noiseString = await getNoiseString(width * 8, width * 8, pickedColors[1], pickedColors[0], 0.3, Random)\n    setNoiseString(noiseString)\n    const noiseStringLarge = await getNoiseString(width * 0.9, width * 0.9, \"#000000\", \"#ffffff\", 0.96, Random)\n    setNoiseStringLarge(noiseStringLarge)\n  }\n  useEffect(() => {\n    createNoise()\n  }, [inputs])\n\n  return (\n    <>\n      <Leva />\n      <svg\n        style={{\n          margin: \"auto\", width: \"100%\", maxHeight: \"100%\",\n        }}\n        viewBox={`0 0 ${width} ${height}`}\n        ref={svgElement}\n        strokeLinejoin=\"round\"\n        strokeLinecap=\"round\"\n      >\n        <defs>\n          <filter id=\"cloud\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n            <feGaussianBlur in=\"SourceGraphic\" stdDeviation={inputs.cloudBlurStdev} result=\"blur\" />\n            <feColorMatrix\n              in=\"blur\"\n              mode=\"matrix\"\n              values={`1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 ${inputs.cloudBlur1} ${inputs.cloudBlur2}`}\n              result=\"goo\"\n            />\n            <feComposite in=\"SourceGraphic\" in2=\"goo\" operator=\"atop\" />\n          </filter>\n\n          <clipPath id=\"skyClip\">\n            <rect x=\"0\" y=\"0\" width={width} height={height * inputs.fieldsYOffset} />\n          </clipPath>\n\n          <linearGradient id=\"background\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n            <stop offset=\"0%\" stopColor={backgroundColors[0]} />\n            <stop offset=\"100%\" stopColor={backgroundColors[1]} />\n          </linearGradient>\n          <linearGradient id=\"atmosphere\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n            <stop offset=\"0%\" stopColor={backgroundColors[0]} />\n            <stop offset=\"100%\" stopColor=\"transparent\" />\n          </linearGradient>\n          <linearGradient id=\"vertical\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n            <stop offset=\"0%\" stopColor=\"black\" />\n            <stop offset=\"100%\" stopColor=\"white\" />\n          </linearGradient>\n          <linearGradient id=\"vertical-reverse\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n            <stop offset=\"0%\" stopColor=\"white\" />\n            <stop offset=\"100%\" stopColor=\"black\" />\n          </linearGradient>\n          <radialGradient id=\"radial\" cx={0} cy={0} r=\"60%\" gradientUnits=\"userSpaceOnUse\">\n            <stop offset=\"0%\" stopColor=\"black\" />\n            <stop offset=\"100%\" stopColor=\"white\" />\n          </radialGradient>\n          <mask\n            id=\"gradient\"\n            x=\"0\"\n            y=\"0\"\n            width=\"100\"\n            height={height}\n            maskUnits=\"userSpaceOnUse\"\n            preserveAspectRatio=\"none\"\n          >\n            <rect x=\"0\" y=\"0\" width=\"100\" height={height} fill=\"url(#vertical)\" />\n          </mask>\n          <mask\n            id=\"gradient-reverse\"\n            maskContentUnits=\"objectBoundingBox\"\n            x=\"0\"\n            y=\"0\"\n            width=\"1\"\n            height=\"1\"\n          >\n            <rect x=\"0\" y=\"0\" width=\"1\" height=\"1\" fill=\"url(#vertical-reverse)\" />\n          </mask>\n          <mask id=\"gradient2\" maskContentUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"1\" height=\"1\">\n            <rect x=\"0\" y=\"0\" width=\"1\" height=\"1\" fill=\"url(#vertical)\" />\n          </mask>\n          <pattern\n            id=\"noise-pattern\"\n            viewBox=\"0 0 1 1\"\n            x=\"0\"\n            y=\"0\"\n            width=\"1\"\n            height=\"1\"\n            preserveAspectRatio=\"none\"\n            patternUnits=\"objectBoundingBox\"\n          >\n            <image\n              href={noiseString}\n              x=\"0\"\n              y=\"0\"\n              width=\"1\"\n              height=\"1\"\n              preserveAspectRatio=\"none\"\n            />\n          </pattern>\n          <pattern\n            id=\"noise-pattern-speckles\"\n            viewBox=\"0 0 1 1\"\n            x=\"0\"\n            y=\"0\"\n            width=\"1\"\n            height=\"1\"\n            preserveAspectRatio=\"none\"\n            patternUnits=\"objectBoundingBox\"\n          >\n            <image\n              href={noiseStringLarge}\n              x=\"0\"\n              y=\"0\"\n              width=\"1\"\n              height=\"1\"\n              preserveAspectRatio=\"none\"\n            />\n          </pattern>\n          <pattern\n            id=\"noise-pattern-color\"\n            viewBox=\"0 0 1 1\"\n            x=\"0\"\n            y=\"0\"\n            width=\"1\"\n            height=\"1\"\n            preserveAspectRatio=\"none\"\n            patternUnits=\"objectBoundingBox\"\n          >\n            <image\n              href={noiseStringLarge}\n              x=\"0\"\n              y=\"0\"\n              width=\"1\"\n              height=\"1\"\n              preserveAspectRatio=\"none\"\n            />\n            <rect\n              x=\"0\"\n              y=\"0\"\n              width=\"1\"\n              height=\"1\"\n              fill={pickedColors[2]}\n              style={{ mixBlendMode: \"color\" }}\n            />\n          </pattern>\n          <pattern\n            id=\"noise-pattern-full\"\n            viewBox={`0 0 ${width} ${height}`}\n            x=\"0%\"\n            y=\"0%\"\n            width=\"100%\"\n            height=\"100%\"\n            patternContentUnits=\"objectBoundingBox\"\n            preserveAspectRatio=\"none\"\n          >\n            <image href={noiseString} x=\"0\" y=\"0\" width={width} height={height} preserveAspectRatio=\"none\" />\n          </pattern>\n\n\n          <g id=\"fields\">\n            {fields.map(({ x, y, r, color, path }, i) => (\n              <g key={i}>\n                <path d={path} fill={color} />\n                <g style={{ mask: \"url(#gradient)\" }}>\n                  <path d={path} fill=\"url(#noise-pattern)\" style={{ mixBlendMode: \"color-burn\" }} />\n                </g>\n\n                {Random.chance(0.2) && (\n                  <path d={path} fill=\"url(#noise-pattern-speckles)\" style={{ mixBlendMode: \"screen\" }} />\n                )}\n                {Random.chance(0.2) && (\n                  <path d={path} fill=\"url(#noise-pattern-color)\" style={{ mixBlendMode: \"screen\" }} />\n                )}\n              </g>\n            ))}\n          </g>\n\n          {fieldsGroupPaths.map((path, i) => (\n            <clipPath id={`fields-group-${i + 1}`} key={i}>\n              <path d={path} />\n            </clipPath>\n          ))}\n        </defs>\n\n        <rect width={width} height={height} fill=\"url(#background)\" />\n\n        <circle cx={sun.x} cy={sun.y} r={sun.r} fill={sun.color} />\n\n        <use href=\"#fields\" />\n        <rect\n          width={width}\n          height={height}\n          fill={backgroundColors[1]}\n          transform={`translate(0, -${height * 0.04})`}\n          style={{\n            clipPath: \"url(#fields-group-1)\",\n            mixBlendMode: \"screen\",\n            opacity: 0.2,\n          }}\n        />\n\n        {range(0, 10).map(i => (\n          <g key={i}>\n            <g\n              transform={`translate(${Random.gaussian(\n                birdsPosition[0],\n                width * 0.1,\n              )}, ${Random.gaussian(birdsPosition[1], width * 0.1)})`}\n            >\n              <path\n                d={svgpath(birdPath).scale(Random.range(0, 1)).toString()}\n                fill={backgroundColors[1]}\n                style={{\n                  mixBlendMode: \"multiply\"\n                }}\n                opacity={Random.range(0, 1)}\n              />\n            </g>\n          </g>\n        ))}\n\n        <use\n          href=\"#fields\"\n          style={{\n            clipPath: \"url(#fields-group-2)\",\n          }}\n          transform={`translate(0, -${height * 0.02})`}\n        />\n        <rect\n          width={width}\n          height={height}\n          fill={backgroundColors[1]}\n          transform={`translate(0, -${height * 0.02})`}\n          style={{\n            clipPath: \"url(#fields-group-2)\",\n            mixBlendMode: \"overlay\",\n            opacity: 0.1,\n          }}\n        />\n\n        <g clipPath=\"url(#skyClip)\">\n          {clouds.slice(0, -inputs.numberOfCloudsMid - inputs.numberOfCloudsFore).map(({ x, y, color }, i) => (\n            <DemoCloud {...{ x, y, color, Random, inputs }} key={i} />\n          ))}\n        </g>\n\n        <DemoMountains {...{ Random, inputs, width, height, backgroundColors }} />\n\n        {clouds.slice(-inputs.numberOfCloudsMid, -inputs.numberOfCloudsFore).map(({ x, y, color, size, type }, i) => (\n          <g opacity=\"0.3\" key={i}>\n            <DemoCloud {...{ x, y, color, size, type, Random, inputs }} />\n          </g>\n        ))}\n\n        <rect\n          y={inputs.fieldsYOffset * height - 2}\n          width={width}\n          height={height * (1 - inputs.fieldsYOffset) + 2}\n          fill=\"url(#atmosphere)\"\n          opacity=\"0.5\"\n          style={{ mixBlendMode: \"screen\" }}\n        />\n\n        <DemoToriiGate {...{ Random, inputs }} colors={pickedColors} width={width} height={height} />\n\n        <use href=\"#fields\" style={{\n          clipPath: \"url(#fields-group-3)\"\n        }} />\n        <rect\n          width={width}\n          height={height}\n          fill={pickedColors[0]}\n          style={{\n            clipPath: \"url(#fields-group-3)\",\n            mixBlendMode: \"multiply\",\n            opacity: 0.1,\n          }}\n        />\n\n        <rect width={width} height={height} fill=\"none\" stroke=\"url(#background)\" strokeWidth=\"12\" />\n\n        {clouds.slice(-inputs.numberOfCloudsFore).map(({ x, y, color }, i) => (\n          <g opacity=\"0.2\" key={i}>\n            <DemoCloud {...{ x, y, color, Random, inputs }} />\n          </g>\n        ))}\n      </svg>\n    </>\n  )\n}\nexport default Demo\n\n\nexport const getOppositeColor = (color) => {\n  const hclColor = hcl(color)\n  hclColor.h += Random.gaussian(180, 20)\n  hclColor.l = Random.gaussian(80, 9)\n  hclColor.c = 55 - hclColor.c + Random.gaussian(0, 3)\n  return hclColor.toString()\n}\nexport const getLightenedColor = (color) => {\n  const hclColor = hcl(color)\n  hclColor.l = Random.gaussian(80, 9)\n  hclColor.c += Random.gaussian(0, 20)\n  return hclColor.toString()\n}\n\nconst fieldColors = [\n  \"#20594C\",\n  \"#F4B07C\",\n  \"#446960\",\n  \"#BEC689\",\n  \"#5D8673\",\n  \"#799390\",\n  \"#EFDBB4\",\n  \"#F3C5D2\",\n  // \"#A4CC9C\",\n  \"#716B59\",\n  \"#3D8478\",\n  \"#758369\",\n  \"#E2E3DA\",\n  \"#C9C77B\",\n  \"#6F595A\",\n  \"#DFC159\",\n  \"#7A6165\",\n]\nconst skyColors = [\n  \"#AABBD0\",\n  \"#B4D5D0\",\n  \"#B6C7D7\",\n  \"#253649\",\n  \"#B8E2D7\",\n  \"#7D70DF\",\n  \"#C2D4DE\",\n  \"#D6E8E6\",\n  \"#83BBBE\",\n  \"#BCC9CF\",\n  \"#25415F\",\n  \"#B2C1CA\",\n  \"#B7BEE0\",\n  \"#6E858E\",\n  \"#859ED9\",\n  \"#B9BCE2\",\n  \"#2261F8\",\n  \"#E3E8DF\",\n  \"#384053\",\n  \"#CDD7D9\",\n  \"#EFE1DA\",\n  \"#C0DCDF\",\n  \"#C7E7E9\",\n  \"#EFDDB9\",\n]\nconst birdPath = svgpath(\n  \"M2.75112 1.65667C2.30385 1.10445 1.12744 0 0 0C1.47526 0.587706 1.89155 2.03898 2.06147 2.66867C2.95102 2.49375 5 1.78411 5 0.104948C5 1.23238 3.50825 1.57421 2.75112 1.65667Z\",\n)\n  .scale(0.6, 0.6)\n  .toString()\n\nexport const separateItems = (items, numberOfTicks = 100) => {\n  let movedItems = [...items]\n  const simulation = forceSimulation(movedItems)\n    .force('x', forceX(d => d.x).strength(0.05))\n    .force('y', forceY(d => d.y).strength(0.05))\n    .force('collide', forceCollide(d => d.r + 1))\n    .stop()\n  simulation.tick(numberOfTicks)\n  return movedItems\n}\n\nexport const getCenterOfPoints = points => {\n  const x = points.reduce((a, b) => a + b[0], 0) / points.length\n  const y = points.reduce((a, b) => a + b[1], 0) / points.length\n  return [x, y]\n}\n\nexport const snapToInterval = (value, interval) => {\n  return Math.round(value / interval) * interval\n}\n\n\nexport const colors = [\n  \"#CAE5EA\",\n  \"#44465F\",\n  \"#B1B4DC\",\n  \"#214944\",\n  \"#3F8692\",\n  \"#6F73D9\",\n  \"#208A7A\",\n  \"#DBEE9D\",\n  \"#4E3536\",\n  \"#A9BBD1\",\n  \"#7EA296\",\n  \"#F4D3CE\",\n  \"#75ADBB\",\n  \"#8E7075\",\n  \"#518EA1\",\n  \"#30675F\",\n  \"#8882AD\",\n  \"#CEA9A9\",\n  \"#B75508\",\n  \"#E9C658\",\n  \"#1A4F45\",\n  \"#BFCCD9\",\n  \"#8BB8A4\",\n  \"#199D93\",\n  \"#43435C\",\n  \"#F8F0AE\",\n  \"#956ADC\",\n  \"#8D035A\",\n  \"#E4E9AA\",\n  \"#44827D\",\n  \"#15326A\",\n  \"#13798D\",\n  \"#82C4B6\",\n  \"#DFC663\",\n  \"#915A1B\",\n  \"#3F466C\",\n  \"#D8E1E3\",\n  \"#B4D7D6\",\n  \"#8B86A4\",\n  \"#EED3DC\",\n  \"#6935FD\",\n  \"#36374B\",\n  \"#3B71FE\",\n  \"#D8D9E1\",\n  \"#275453\",\n  \"#94D1CA\",\n  \"#AFDBD7\",\n  \"#4C4360\",\n  \"#F0B278\",\n  \"#162E5E\",\n  \"#2E3950\",\n  \"#E7E8E1\",\n  \"#62194E\",\n  \"#1D8E78\",\n]\n\n\nexport const blendingModes = [\n  \"source-over\",\n  \"source-in\",\n  \"source-out\",\n  \"source-atop\",\n  \"destination-over\",\n  \"destination-in\",\n  \"destination-out\",\n  \"destination-atop\",\n  \"normal\",\n  \"lighter\",\n  \"copy\",\n  \"xor\",\n  \"multiply\",\n  \"screen\",\n  \"overlay\",\n  \"darken\",\n  \"lighten\",\n  \"color-dodge\",\n  \"color-burn\",\n  \"hard-light\",\n  \"soft-light\",\n  \"difference\",\n  \"exclusion\",\n  \"hue\",\n  \"saturation\",\n  \"color\",\n  \"luminosity\",\n]\n\nlet params = [\n  { name: \"seed\", value: 0, max: 1300, step: 1 },\n  // { name: \"backgroundColor\", value: \"#0D0D0D\" },\n  { name: \"blendMode\", value: \"color-burn\", options: blendingModes },\n  { name: \"bgBlendMode\", value: \"color-burn\", options: blendingModes },\n  { name: \"cloudBlendMode\", value: \"screen\", options: blendingModes },\n  { name: \"numberOfFields\", value: 174, max: 300, step: 1 },\n  { name: \"numberOfClouds\", value: 27, max: 60, step: 1 },\n  { name: \"numberOfCloudsMid\", value: 3, max: 8, step: 1 },\n  { name: \"numberOfCloudsFore\", value: 3, max: 8, step: 1 },\n  { name: \"numberOfCloudPuffs\", value: 16, max: 30, step: 1 },\n  { name: \"numberOfMountains\", value: 4, max: 30, step: 1 },\n  { name: \"cloudPuffR\", value: 7.5, max: 20, step: 0.01 },\n  { name: \"noiseFreq\", value: 0.01, max: 0.6, step: 0.001 },\n  { name: \"noiseAmp\", value: 3.25, max: 10, step: 0.001 },\n  { name: \"yStretch\", value: 1.21, max: 3, step: 0.001 },\n  { name: \"skew\", value: 6.2, max: 10, step: 0.001 },\n  { name: \"fieldsYOffset\", value: 0.68, max: 1, step: 0.001 },\n  { name: \"cloudBlurStdev\", value: 1.19, max: 3, step: 0.0001 },\n  { name: \"cloudBlur1\", value: 9.89, max: 50, step: 0.0001 },\n  { name: \"cloudBlur2\", value: -7.367, min: -50, max: 50, step: 0.0001 },\n  // { name: \"cloudFrequency\", value: 0.01, max: 0.1, step: 0.0001 },\n  // { name: \"cloudBlur\", value: 0.01, max: 3, step: 0.01 },\n  // { name: \"cloudOctaves\", value: 0.01, min: -1, max: 6, step: 1 },\n  // { name: \"cloudTurbulence\", value: 0.01, min: -1, max: 60, step: 0.001 },\n  // { name: \"k1\", value: 0.01, min: -1, max: 6, step: 0.001 },\n  // { name: \"k2\", value: 0.01, min: -1, max: 6, step: 0.001 },\n]\n\n\nexport const getPointFromAngleAndDistance = (angle, distance) => {\n  return [distance * Math.cos(angle), distance * Math.sin(angle)]\n}\n\nconst getNoiseString = async (width, height, color1, color2, chance, Random) => {\n  return new Promise((resolve, reject) => {\n    const canvas = document.createElement(\"canvas\")\n    canvas.width = width\n    canvas.height = height\n    const ctx = canvas.getContext(\"2d\")\n\n    const d3Color1 = color(color1)\n    const color1Rgb = [d3Color1.r, d3Color1.g, d3Color1.b]\n    const d3Color2 = color(color2)\n    const color2Rgb = [d3Color2.r, d3Color2.g, d3Color2.b]\n\n    const imageData = ctx.getImageData(0, 0, width, height)\n    let data = imageData.data\n    for (let y = 0; y < height; ++y) {\n      for (let x = 0; x < width; ++x) {\n        let index = (y * width + x) * 4\n\n        const colorIndex = Random.chance(chance)\n        const colorRgb = colorIndex ? color1Rgb : color2Rgb\n\n        data[index] = colorRgb[0]\n        data[++index] = colorRgb[1]\n        data[++index] = colorRgb[2]\n        data[++index] = 255 // alpha\n      }\n    }\n\n    ctx.putImageData(imageData, 0, 0)\n\n    const noiseString = canvas.toDataURL()\n    canvas.remove()\n\n    resolve(noiseString)\n  }).catch(e => {\n    console.log(e)\n  })\n}","import React, { useCallback, useEffect, useMemo, useState } from \"react\"\nimport Slider from 'rc-slider/lib/Slider';\nimport \"rc-slider/assets/index.css\"\nimport { useInterval } from \"utils/utils.js\"\nimport { format, area, arc, curveBasis, curveMonotoneX, curveMonotoneY, scaleLinear } from \"d3\"\nimport { times, debounce } from \"lodash\"\nimport Gauge from \"components/_ui/Gauge/Gauge\"\nimport Blockquote from \"components/_ui/Blockquote/Blockquote\"\nimport List from \"components/_ui/List/List\"\nimport ScrollEvent from \"components/_ui/ScrollEvent/ScrollEvent\"\nimport Code from \"components/_ui/Code/Code\"\nimport Aside from \"components/_ui/Aside/Aside\"\nimport Expandy from \"components/_ui/Expandy/Expandy\"\nimport Link from \"components/_ui/Link/Link\"\nimport Demo from \"./Demo\"\n\nimport \"./SvgTricks.scss\"\n\nconst SvgTricks = () => {\n  const [sectionIndex, setSectionIndex] = useState(0)\n\n  return (\n    <div className=\"SvgTricks\">\n\n      <h1>\n        SVG Tricks\n      </h1>\n\n      <div className=\"SvgTricks__content\">\n        <div className=\"SvgTricks__section__left\">\n          <p>\n            Do you ever feel like you know everything there is to a tool? If any situation came up, you would know off the top of your head how to build it? Well, that was me with SVG, before I started playing around with creating generative art.\n          </p>\n          <p>\n            I've ended up knowing \"less\" than I did when I started, but there are some really fun tricks that I wanted to share with you.\n          </p>\n        </div>\n\n\n\n        <div className=\"SvgTricks__main\">\n          <div className=\"SvgTricks__sticky\">\n            <Demo />\n          </div>\n\n          <div className=\"SvgTricks__main__text\">\n            {sections.map((section, i) => (\n              <ScrollEvent isInViewChange={status => {\n                if (status != i) return\n                setSectionIndex(i)\n              }}>\n                <div className=\"SvgTricks__section\">\n                  <h2>{section.title}</h2>\n                  <p >\n                    Here, we'll talk about the tricks behind the <P>{section.title}</P> 👀\n                  </p>\n                </div>\n              </ScrollEvent>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst sections = [{\n  title: \"Clouds\",\n  id: \"clouds\",\n}, {\n  title: \"Gate\",\n  id: \"gate\",\n}, {\n  title: \"Texture\",\n  id: \"texture\",\n}, {\n  title: \"Gooey filters\",\n  id: \"gooey-filters\",\n}, {\n  title: \"Clip paths\",\n  id: \"clip-paths\",\n}, {\n  title: \"Masks\",\n  id: \"masks\",\n}, {\n  title: \"Perspective\",\n  id: \"perspective\",\n}]\n\nconst P = React.memo(({ children }) => (\n  <code className=\"P\">{children}</code>\n))\n\nexport default SvgTricks","import React, { useState, useRef } from 'react'\nimport Icon from \"components/_ui/Icon/Icon\";\nimport Tooltip from \"components/_ui/Tooltip/Tooltip\";\nimport { scrollTo } from \"utils.js\"\n\nimport './Expandy.scss';\n\nconst Expandy = ({ trigger, triggerExpandText, doHideIfCollapsed=false, className, children, ...props }) => {\n    const [isExpanded, setIsExpanded] = useState(false)\n    const ref = useRef()\n\n    // const onToggleExpanded = () => {\n    //     setIsExpanded(!isExpanded)\n\n    //     if (isExpanded) {\n    //         const top = ref.current.getBoundingClientRect().top\n    //         if (top > window.innerHeight * 0.3) return\n    //         const y = top\n    //             + window.scrollY\n    //             - window.innerHeight * 0.3\n    //         scrollTo(y, 600)\n    //     }\n    // }\n\n    return (\n        <details className={`Expandy Expandy--is-${isExpanded ? \"expanded\" : \"collapsed\"} ${className}`} {...props} ref={ref}\n            onToggle={e => {\n                const isExpanded = e.target.open\n                setIsExpanded(isExpanded)\n        }}>\n            <summary>\n            <div className=\"Expandy__trigger button-no-appearance\" >\n                <div className=\"Expandy__trigger__text\">\n                    <b>{ trigger }</b>\n                    <div className=\"Expandy__trigger__info\">\n                        { triggerExpandText || `tap me ${isExpanded ? \"to hide\" : \"for more\" } details` }\n                    </div>\n                </div>\n                <div className=\"Expandy__trigger__mark\">ἰ</div>\n            </div>\n\n            <Tooltip\n                className=\"Expandy__toggle\"\n                contents={<button className=\"button-no-appearance\">{isExpanded ? \"Collapse me\" : \"Expand me\"}</button>}\n                >\n                <div className=\"Expandy__toggle__arrow Expandy__toggle__arrow--up\">\n                    <Icon name=\"arrow\" direction=\"n\" size=\"s\" />\n                </div>\n                <div className=\"Expandy__toggle__arrow Expandy__toggle__arrow--down\">\n                    <Icon name=\"arrow\" direction=\"s\" size=\"s\" />\n                </div>\n                </Tooltip>\n                </summary>\n            <div className=\"Expandy__contents\">\n                {children }\n            </div>\n        </details>\n    )\n}\n\nexport default Expandy\n","import React from \"react\"\n\nimport \"./Blockquote.scss\"\n\nconst Blockquote = ({ source, isQuote=true, children, ...props }) => (\n  <blockquote {...props} className={`Blockquote Blockquote--is-${isQuote ? \"quote\" : \"non-quote\"}`}>\n    { children }\n    {source && (\n      <div className=\"Blockquote__source\">\n        { source }\n      </div>\n    )}\n  </blockquote>\n)\n\nexport default Blockquote","import React from \"react\"\nimport { arc, format as d3Format, scaleLinear } from \"d3\"\n\nimport \"./Gauge.scss\"\n\nconst baseArc = arc()\n  .cornerRadius(1)\n  ({\n    innerRadius: 0.65,\n    outerRadius: 1,\n    startAngle: -Math.PI / 2,\n    endAngle: Math.PI / 2,\n  })\n\nconst colorScale = scaleLinear()\n  .domain([0, 1])\n  .range([\"#dbdbe7\", \"#4834d4\"])\n\nconst gradientSteps = colorScale.ticks(10)\n  .map(value => colorScale(value))\n\nconst angleScale = scaleLinear()\n  .domain([0, 1])\n  .range([-Math.PI / 2, Math.PI / 2])\n  .clamp(true)\n\nconst formatNumber = d3Format(\",\")\n\nconst Gauge = ({\n  value=50,\n  min=0,\n  max=100,\n  format=formatNumber,\n  label,\n  units,\n}) => {\n  const percentScale = scaleLinear()\n    .domain([min, max])\n    .range([0, 1])\n  const percent = percentScale(value)\n\n  const angle = angleScale(percent)\n\n  const filledArc = arc()\n    .cornerRadius(3)\n    ({\n      innerRadius: 0.65,\n      outerRadius: 1,\n      startAngle: -Math.PI / 2,\n      endAngle: angle,\n    })\n\n  const markerLocation = getPositionFromPoint(\n    angle,\n    0.825,\n  )\n\n  return (\n    <div className=\"Gauge\">\n      <svg className=\"Gauge__svg\" viewBox={[\n        -1, -1,\n        2, 1,\n      ].join(\" \")}>\n        <defs>\n          <linearGradient\n            id=\"Gauge__gradient\"\n            gradientUnits=\"userSpaceOnUse\"\n            x1=\"-1\"\n            x2=\"1\"\n            y2=\"0\">\n            {gradientSteps.map((color, i) => (\n              <stop\n                key={color}\n                stopColor={color}\n                offset={`${i * 100 / (gradientSteps.length - 1)}%`}\n              />\n            ))}\n          </linearGradient>\n        </defs>\n        <path\n          className=\"Gauge__background\"\n          d={baseArc}\n        />\n        <path\n          className=\"Gauge__filled\"\n          d={filledArc}\n        />\n        <line\n          className=\"Gauge__midpoint\"\n          y1={-1}\n          y2={-0.5}\n        />\n        <circle\n          className=\"Gauge__marker\"\n          cx={markerLocation[0]}\n          cy={markerLocation[1]}\n          r=\"0.2\"\n          fill={colorScale(percent)}\n        />\n        <path\n            className=\"Gauge__arrow\"\n            transform={`rotate(${angle * (180 / Math.PI)}) translate(-0.2, -0.33)`}\n            d=\"M0.136364 0.0290102C0.158279 -0.0096701 0.219156 -0.00967009 0.241071 0.0290102C0.297078 0.120023 0.375 0.263367 0.375 0.324801C0.375 0.422639 0.292208 0.5 0.1875 0.5C0.0852272 0.5 -1.8346e-08 0.422639 -9.79274e-09 0.324801C0.00243506 0.263367 0.0803571 0.120023 0.136364 0.0290102ZM0.1875 0.381684C0.221591 0.381684 0.248377 0.356655 0.248377 0.324801C0.248377 0.292947 0.221591 0.267918 0.1875 0.267918C0.153409 0.267918 0.126623 0.292947 0.126623 0.324801C0.126623 0.356655 0.155844 0.381684 0.1875 0.381684Z\"\n        />\n      </svg>\n\n      <div className=\"Gauge__metric\">\n        { format(value) }\n      </div>\n\n      {!!label && (\n        <div className=\"Gauge__label\">\n          { label }\n        </div>\n      )}\n\n      {!!units && (\n        <div className=\"Gauge__units\">\n          { units }\n        </div>\n      )}\n    </div>\n  )\n\n}\n\nexport default Gauge\n\n\nconst getPositionFromPoint = (angle, offset=10) => [\n  Math.cos(angle - (Math.PI / 2)) * offset,\n  Math.sin(angle - (Math.PI / 2)) * offset,\n]\n"],"sourceRoot":""}