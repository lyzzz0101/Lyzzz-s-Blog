{"version":3,"sources":["components/Articles/WDVP/WDVPGrid.jsx","components/_ui/Chart/Chart.jsx","components/_ui/Chart/Axis/Axis.jsx","components/_ui/RadioGroup/RadioGroup.jsx","components/Articles/WDVP/WDVPScatter.jsx","../node_modules/d3-scale-chromatic/src/diverging/PRGn.js"],"names":["continents","code","value","color","blackAndWhiteColorScale","createScale","domain","length","range","d3","interpolatePRGn","_","map","continent","i","Object","_Users_linying_codespace_Lyzzz_s_Blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_4__","continentColorScales","fromPairs","percentileOrRawOptions","label","colorModeOptions","defaultMetrics","metricRankedCorrelationData","metricCorrelationSorts","metric","fieldname","RankedCorrelationWithOtherFields","WDVPGrid","props","_this","_Users_linying_codespace_Lyzzz_s_Blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_super","call","chart","React","createRef","createScales","_this$state","state","sort","selectedContinents","isAscending","sortedMetrics","isShowingPercentile","index","selectedContinentValues","sortedData","orderBy","rawData","d","concat","filteredData","isEmpty","filter","includes","Continent","scales","setState","processedData","metrics","onChangeSort","onContinentsSelect","onColorModeOptionsSelect","newVal","colorMode","onIsShowingPercentileSelect","onCountryHover","country","hoveredCountry","classNames","className","_this$state2","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","getClassName","components_ui_RadioGroup_RadioGroup__WEBPACK_IMPORTED_MODULE_11__","options","onChange","isMulti","canClear","WDVPGridChart","data","onMetricClick","_WDVPScatter__WEBPACK_IMPORTED_MODULE_14__","xMetric","yMetric","last","Component","width","window","innerWidth","height","innerHeight","margins","top","right","bottom","left","container","_this2$props","_this2","_this2$state","boundedHeight","boundedWidth","xScale","yScale","orientation","drawData","current","_this2$props2","_this2$state2","reformattedData","countryIndex","name","Country","metricIndex","scaledValue","percentileValue","bounds","on","cellWidth","cellHeight","metricElems","selectAll","enter","append","attr","merge","style","text","transition","duration","ease","delay","countries","newCountries","exit","remove","rects","getValue","isFinite","prevProps","_this$state3","ref","transform","require","getHeight","margin","arguments","undefined","Math","max","getWidth","Chart","_Users_linying_codespace_Lyzzz_s_Blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","setSize","_isMounted","_this$props","isLoaded","translate","WebkitTransform","_setSize","addEventListener","setTimeout","removeEventListener","id","x","y","_this$props2","hasNoListener","children","onMouseMove","line","area","bar","xAxis","yAxis","brush","hasTooltip","onMouseEnter","onMouseLeave","renderClipPath","getWrapperStyle","defaultProps","noop","orientations","axesMap","Axis","elem","axis","dimension","_ref","scale","tickSize","tickSizeInner","tickSizeOuter","ticks","tickFrequency","tickPadding","tickArguments","format","initTransition","init","getOrientation","tickFormat","update","newProps","_this$props3","hasInlineLabel","_classNames","_this$props4","_Users_linying_codespace_Lyzzz_s_Blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","getStyle","renderLabel","getOptionValue","option","isObject","areSameValue","b","RadioGroup","newValue","_Users_linying_codespace_Lyzzz_s_Blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","renderOption","idx","RadioGroup__option--selected","onClick","key","renderClear","formatNumber","numeral","numberFromValue","isString","replace","continentColors","m","countryOptions","WDVPScatter","_Users_linying_codespace_Lyzzz_s_Blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__","scatter","componentWillUnmount","onResize","min","clientWidth","selectedCountries","selectedGroups","clamp","xAccessor","yAccessor","iteration","onDotsUpdate","dots","xAccessorScaled","yAccessorScaled","clientX","clientY","isHoveringChart","mouseX","getBoundingClientRect","year","round","invert","mouseY","mouseYVal","parsedCountries","_Users_linying_codespace_Lyzzz_s_Blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__","GDP","distanceFromY","absDistanceFromY","abs","orderedCountries","continentsByYCloseness","continentsByYAbsCloseness","closestCountries","get","closestCountriesIndex","findIndex","closestCountriesIndexCenter","tooltipInfo","slice","isSelected","boundedX","throttledOnMouseMove","throttle","persistedOnMouseMove","e","clearTooltip","onCountriesSelect","onHighlightedCountriesChange","onMetricChange","_Users_linying_codespace_Lyzzz_s_Blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","onMouseEnterPoint","showingPointLabels","uniqBy","_Users_linying_codespace_Lyzzz_s_Blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","onMouseLeavePoint","reject","iterator","angleOfMostVariance","vectorOfMostVariance","selectedCountryValues","meanX","meanBy","meanY","react__WEBPACK_IMPORTED_MODULE_8___default","components_ui_RadioGroup_RadioGroup__WEBPACK_IMPORTED_MODULE_14__","react_select__WEBPACK_IMPORTED_MODULE_15__","classNamePrefix","styles","selectStyles","components_ui_Chart_Chart__WEBPACK_IMPORTED_MODULE_17__","components_ui_Chart_Axis_Axis__WEBPACK_IMPORTED_MODULE_18__","WDVPScatterCountry","WDVPScatterCountryHighlight","isShowingLabels","WDVPScatterLine","angle","WDVPScatterTooltip","assign","_Users_linying_codespace_Lyzzz_s_Blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","background","memo","_ref2","cx","cy","r","fill","_ref3","stroke","strokeWidth","opacity","_ref4","x1","cos","PI","y1","sin","x2","y2","__webpack_require__","__webpack_exports__","scheme","_colors_js__WEBPACK_IMPORTED_MODULE_0__","_ramp_js__WEBPACK_IMPORTED_MODULE_1__","Array"],"mappings":"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","file":"static/js/38.6f8a22ee.chunk.js","sourcesContent":["  import React, {Component} from \"react\"\nimport * as d3 from \"d3\"\nimport { interpolatePRGn } from \"d3-scale-chromatic\"\nimport classNames from \"classnames\"\nimport _ from \"lodash\"\nimport { createScale } from 'components/_ui/Chart/utils/scale';\nimport RadioGroup from 'components/_ui/RadioGroup/RadioGroup';\n\n// import data from \"./WDVP Datasets - the future of government\"\nimport rawData from \"./Wdvp_gov_score.json\"\nimport metricRankedCorrelationData from \"./Wdvp_corr.json\"\n// import data from \"./WDVP Datasets - small countries are beautiful\"\nimport WDVPScatter from './WDVPScatter'\n\nimport './WDVPGrid.scss'\n\n// console.log(rawData)\n\nconst ordinalColors = [\"#63cdda\", \"#cf6a87\", \"#786fa6\", \"#FDA7DF\", \"#4b7bec\", \"#778ca3\"]; // \"#e77f67\", \"#778beb\", \nconst numberFromValue = value =>\n  _.isFinite(value) ? value : \n  _.isString(value) ? +value.replace(/,/g, \"\") :\n  null\n\nlet continents = [\n  {code: \"AS\", value: \"Asia\",          color: \"#12CBC4\"}, // #EF4E78, \"#63cdda\"\n  {code: \"EU\", value: \"Europe\",        color: \"#B53471\"}, // #F99072, \"#cf6a87\"\n  {code: \"AF\", value: \"Africa\",        color: \"#F79F1F\"}, // #FFCA81, \"#e77f67\"\n  {code: \"NA\", value: \"North America\", color: \"#5758BB\"}, // #98C55C, \"#FDA7DF\"\n  {code: \"OC\", value: \"Oceania\",       color: \"#1289A7\"}, // #67B279, \"#4b7bec\"\n  {code: \"SA\", value: \"South America\", color: \"#A3CB38\"}, // #6F87A6, \"#778beb\"\n]\nconst interpolatedColorScale = createScale({\n  domain: [0, continents.length - 1],\n  range: [\"#63cdda\", \"#cf6a87\"]\n})\nconst blackAndWhiteColorScale = d3.scaleSequential(interpolatePRGn)\nconst highlightColorScale = createScale({\n  domain: [0, 1],\n  range: [\"#fff\", \"#45aeb1\"]\n})\ncontinents = _.map(continents, (continent, i) => ({...continent, color: d3.interpolatePlasma(i /( continents.length - 1))}))\nconst continentColorScales = _.fromPairs(\n  _.map(continents, continent => [\n    continent.code,\n    createScale({\n      domain: [-0.3, 0.6, 1.2],\n      range: [\"#fff\", continent.color, \"#000\"],\n    }),\n  ])\n)\nconst percentileOrRawOptions = [{\n  value: true,\n  label: \"Percentile\",\n},{\n  value: false,\n  label: \"Value\",\n}]\nconst colorModeOptions = [{\n  value: \"normal\",\n  label: \"All the same\",\n},{\n  value: \"continents\",\n  label: \"Continents\",\n}]\nconst defaultMetrics = _.map(metricRankedCorrelationData, \"fieldname\")\nconst metricCorrelationSorts = _.fromPairs(\n  _.map(metricRankedCorrelationData, metric => [\n    metric.fieldname,\n    metric.RankedCorrelationWithOtherFields,\n  ])\n)\nconst metricsColorScale = createScale({\n  domain: [0, defaultMetrics.length - 1],\n  range: [\"#63cdda\", \"#e77f67\"],\n})\nclass WDVPGrid extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      metrics: defaultMetrics,\n      scales: {},\n      sort: defaultMetrics[0],\n      processedData: [],\n      selectedContinents: [],\n      hoveredCountry: null,\n      isAscending: true,\n      colorMode: \"continents\",\n      isShowingPercentile: true,\n    }\n  }\n\n  getClassName() {\n    return classNames(\"WDVPGrid\", this.props.className)\n  }\n\n  componentDidMount() {\n    this.createScales()\n  }\n  chart = React.createRef()\n\n  createScales = () => {\n    const { sort, selectedContinents, isAscending, isShowingPercentile } = this.state\n\n    const sortedMetrics = _.map(metricCorrelationSorts[sort], index => defaultMetrics[index - 1])\n    // const metricIndices = _.zipObject(defaultMetrics, metricCorrelationSorts[sort])\n    // console.log(metricCorrelationSorts, defaultMetrics)\n    // const sortedMetrics = _.orderBy(\n    //   defaultMetrics,\n    //   metric => {console.log(metric, metricIndices[metric]); return metricIndices[metric]},\n    //   \"asc\",\n    // )\n\n    const selectedContinentValues = _.map(selectedContinents, \"code\")\n\n    const sortedData = _.orderBy(\n      rawData,\n      [d => d[`${sort}__percentile`]],\n      [isAscending ? \"asc\" : \"desc\"]\n    )\n    const filteredData = _.isEmpty(selectedContinents) ? sortedData :\n      _.filter(sortedData, d => _.includes(selectedContinentValues, d.Continent))\n\n    const scales = _.fromPairs(\n      _.map(defaultMetrics, (metric, i) => [\n        metric,\n        createScale({\n          domain: d3.extent(sortedData, d => d[metric]),\n          range: [0, 1],\n        }),\n      ])\n    )\n    this.setState({ scales, processedData: filteredData, metrics: sortedMetrics })\n  }\n\n  onChangeSort = metric => metric == this.state.sort ?\n    this.setState({ isAscending: !this.state.isAscending }, this.createScales) :\n    this.setState({ sort: metric, isAscending: this.state.isShowingPercentile ? true : false }, this.createScales)\n    \n  onContinentsSelect = continents => this.setState({ selectedContinents: continents }, this.createScales)\n  onColorModeOptionsSelect = newVal => this.setState({ colorMode: newVal.value })\n  onIsShowingPercentileSelect = newVal => this.setState({ isShowingPercentile: newVal.value, isAscending: !this.state.isAscending }, this.createScales)\n  onCountryHover = country => this.setState({ hoveredCountry: country })\n\n  render() {\n    const { processedData, metrics, selectedContinents, scales, sort, hoveredCountry, colorMode, isAscending, isShowingPercentile } = this.state\n\n    return (\n      <div className={this.getClassName()}>\n        <h2 className=\"WDVPGrid__title\">\n          Country Metric Explorer\n        </h2>\n        <div className=\"WDVPGrid__contents\">\n        \n          <RadioGroup\n            className=\"WDVPGrid__toggle\"\n            options={continents}\n            value={selectedContinents}\n            onChange={this.onContinentsSelect}\n            isMulti\n            canClear\n          />\n        \n          <RadioGroup\n            className=\"WDVPGrid__toggle\"\n            options={percentileOrRawOptions}\n            value={isShowingPercentile}\n            onChange={this.onIsShowingPercentileSelect}\n          />\n        \n          <RadioGroup\n            className=\"WDVPGrid__toggle\"\n            options={colorModeOptions}\n            value={colorMode}\n            onChange={this.onColorModeOptionsSelect}\n          />\n          \n          <div className=\"WDVPGrid__chart\">\n            {/* <div className=\"WDVPGrid__header\">\n              {_.map(processedData, country => (\n                <div\n                  key={country.Country}\n                  className={`WDVPGrid__header__item WDVPGrid__header__item--is-${hoveredCountry == country.Country ? \"hovered\" : \"not-hovered\"}`}>\n                  <div className=\"WDVPGrid__header__item__text\">\n                    { country.Country }\n                  </div>\n                </div>\n              ))}\n            </div> */}\n            {/* <div className=\"WDVPGrid__metrics\">\n              {_.map(metrics, metric => (\n                <div\n                  key={metric}\n                  className={`WDVPGrid__metrics__item WDVPGrid__metrics__item--is-${sort == metric ? \"selected\" : \"not-selected\"}`}\n                  onClick={this.onChangeSort(metric)}>\n                  { metric }x\n                </div>\n              ))}\n            </div> */}\n          \n            <WDVPGridChart\n              data={processedData}\n              metrics={metrics}\n              sort={sort}\n              scales={scales}\n              colorMode={colorMode}\n              isShowingPercentile={isShowingPercentile}\n              onCountryHover={this.onCountryHover}\n              onMetricClick={this.onChangeSort}\n            />\n            \n            <WDVPScatter\n              data={processedData}\n              xMetric={metrics[0]}\n              yMetric={_.last(metrics)}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default WDVPGrid\n\n\nclass WDVPGridChart extends Component {\n  state = {\n    width: window.innerWidth * 0.9,\n    height: window.innerHeight * 0.9,\n    margins: {\n      top: 150,\n      right: 0,\n      bottom: 50,\n      left: 160,\n    }\n  }\n  container = React.createRef()\n\n  componentDidMount() {\n    this.createScales()\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data != this.props.data) this.createScales()\n    if (prevProps.isShowingPercentile != this.props.isShowingPercentile) this.drawData()\n    if (prevProps.Continent != this.props.Continent) this.drawData()\n  }\n\n  createScales = () => {\n    const { data, metrics } = this.props\n    const { width, height, margins } = this.state\n    const boundedHeight = height - margins.top - margins.bottom\n    const boundedWidth = width - margins.left - margins.right\n    const xScale = createScale({\n      domain: [0, data.length],\n      range: [0, boundedWidth],\n    })\n    const yScale = createScale({\n      domain: [0, metrics.length],\n      range: [boundedHeight, 0],\n      orientation: \"y\",\n    })\n    this.setState({ xScale, yScale }, this.drawData)\n  }\n\n  drawData = () => {\n    if (!this.container.current) return\n    const { data, metrics, scales, sort, colorMode, isShowingPercentile, onCountryHover, onMetricClick } = this.props\n    const { width, height, margins, xScale, yScale } = this.state\n\n    if (_.isEmpty(data)) return;\n\n    const reformattedData = _.map(data, (country, countryIndex) => ({\n      name: country.Country,\n      metrics: _.map(metrics, (metric, metricIndex) => ({\n        metric,\n        countryIndex,\n        metricIndex,\n        Continent: country.Continent,\n        scaledValue: scales[metric](country[metric]),\n        percentileValue: (country[`${metric}__percentile`] - 1) / 100,\n      })),\n    }))\n\n    const bounds = d3.select(this.container.current)\n        .on(\"mouseout\", d => onCountryHover(null))\n    const cellWidth = xScale(1) - xScale(0)\n    const cellHeight = yScale(0) - yScale(1)\n    const speedMultiplier = 3\n    \n    const metricElems = bounds.selectAll(\".WDVPGridChart__metric\")\n        .data(metrics, d => d)\n      metricElems.enter().append(\"text\")\n        .attr(\"class\", \"WDVPGridChart__metric\")\n        .on(\"click\", onMetricClick)\n      .merge(metricElems)\n        .style(\"fill\", d => d == sort ? \"#45aeb1\" : \"inherit\")\n        .attr(\"x\", -margins.left)\n        .text(d => d)\n      .transition(d3.transition().duration(900).ease(d3.easeLinear))\n        .delay((d, i) => data.length * speedMultiplier + i * speedMultiplier + 900)\n        .attr(\"y\", (d, i) => yScale(metrics.length - i) + cellHeight * 0.6)\n    \n    let countries = bounds.selectAll(\".WDVPGridChart__country\")\n        .data(reformattedData, d => d.name)\n      \n    const newCountries = countries.enter().append(\"g\")\n        .attr(\"class\", \"WDVPGridChart__country\")\n        .on(\"mouseover\", d => onCountryHover(d.name))\n        \n    newCountries.append(\"text\")\n        .attr(\"class\", \"WDVPGridChart__country__text\")\n        .text(d => d.name)\n        \n    countries.merge(newCountries)\n        .style(\"opacity\", 0.2)\n      .transition(d3.transition().duration(900).ease(d3.easeLinear))\n        .delay((d,i) => i * speedMultiplier)\n        .style(\"transform\", (d, i) => `translateX(${xScale(i)}px)`)\n        .style(\"opacity\", 1)\n\n    countries.exit().remove()\n\n    // bounds.selectAll(\".WDVPGridChart__country__text\")\n        // .attr(\"transform\", `translate(-10px, ${cellWidth}px)`)\n\n    const rects = bounds.selectAll(\".WDVPGridChart__country\").selectAll(\".WDVPGridChart__rect\")\n        .data(d => d.metrics, d => d.metric)\n        \n    const getValue = d => isShowingPercentile ? d.percentileValue : d.scaledValue\n    rects.enter().append(\"rect\")\n      .merge(rects)\n        .attr(\"class\", \"WDVPGridChart__rect\")\n        .attr(\"width\", cellWidth)\n        .attr(\"height\", cellHeight)\n        .attr(\"fill\", d =>\n          !_.isFinite(getValue(d))  ? \"#ccc\" :\n          colorMode == \"continents\" ? continentColorScales[d.Continent](getValue(d)) :\n                                      blackAndWhiteColorScale(getValue(d))\n        )\n      .transition(d3.transition().duration(900).ease(d3.easeLinear))\n        // .delay((d, i) => data.length * speedMultiplier + i * 10 + 900)\n        .delay((d, i) => data.length * speedMultiplier + 900)\n        .attr(\"y\", d => yScale(metrics.length - d.metricIndex))\n    rects.exit().remove()\n  }\n\n  render () {\n    const { data } = this.props\n    const { width, height, margins, xScale, yScale } = this.state\n\n    return (\n      <svg height={height} width={width}>\n        <g\n          ref={this.container}\n          style={{\n            transform: `translate(${margins.left}px, ${margins.top}px)`,\n          }}\n        />\n      </svg>\n    )\n  }\n}","import React, {Component} from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\nimport numeral from \"numeral\"\nimport _ from \"lodash\"\nimport * as d3 from \"d3\"\n\nrequire('./Chart.scss')\n\nexport const getHeight = (height, margin={top: 0, bottom: 0}) => Math.max(height - margin.top - margin.bottom, 0)\nexport const getWidth = (width, margin={left: 0, right: 0}) => Math.max(width - margin.left - margin.right, 0)\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      height: this.props.height,\n      width: this.props.width,\n      isLoaded: false,\n    }\n  }\n\n  static propTypes = {\n    height: PropTypes.number,\n    width: PropTypes.number,\n    margin: PropTypes.shape({\n      top: PropTypes.number,\n      right: PropTypes.number,\n      bottom: PropTypes.number,\n      left: PropTypes.number,\n    }),\n    hasNoListener: PropTypes.bool,\n    onMouseMove: PropTypes.func,\n    onMouseEnter: PropTypes.func,\n    onMouseEnter: PropTypes.func,\n  };\n\n  static defaultProps = {\n    height: 200,\n    width: 600,\n    margin: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n    },\n    onMouseMove: _.noop,\n    onMouseEnter: _.noop,\n    onMouseEnter: _.noop,\n};\n\n  getClassName() {\n    return classNames(\"Chart\", this.props.className)\n  }\n\n  getWrapperStyle() {\n    let {margin} = this.props\n    let translate = `translate3d(${margin.left}px, ${margin.top}px, 0)`\n    return {\n      transform: translate,\n      WebkitTransform: translate\n    }\n  }\n\n  setSize = () => {\n    if (!this._isMounted) return\n    let {height, width, margin} = this.props\n    this.setState({height: getHeight(height, margin)})\n    this.setState({width: getWidth(width, margin)})\n  }\n\n  componentWillMount() {\n    this.setSize()\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n    this._setSize = this.setSize\n    window.addEventListener(\"resize\", this._setSize)\n    setTimeout(() => {\n      this.setState({isLoaded: true})\n    })\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n    window.removeEventListener(\"resize\", this._setSize)\n  }\n\n  renderClipPath() {\n    let {height, width} = this.state\n    let {margin} = this.props\n\n    return <clipPath id=\"chartPath-clip\">\n      <rect className=\"Chart__clip-path\"\n        x={margin.left}\n        y={margin.top}\n        height={height}\n        width={width}\n      />\n    </clipPath>\n  }\n\n\n  render() {\n    const {height, width, margin, hasNoListener, children, line, area, bar, xAxis, yAxis, brush, hasTooltip, onMouseMove, onMouseEnter, onMouseLeave} = this.props\n\n    return (\n      <div ref=\"elem\" className={this.getClassName()}>\n        <svg className=\"Chart__svg\" height={height} width={width}>\n          <defs>\n            {this.renderClipPath()}\n          </defs>\n          <g className=\"Chart__wrapper\" style={this.getWrapperStyle()}>\n            {children}\n          </g>\n          {!hasNoListener && (\n            <rect\n              className=\"Chart__listener\"\n              x={margin.left}\n              y={margin.top}\n              height={getHeight(height, margin)}\n              width={getWidth(width, margin)}\n              onMouseMove={onMouseMove}\n              onMouseLeave={onMouseLeave}\n              onMouseEnter={onMouseEnter}\n            />\n          )}\n        </svg>\n      </div>\n    )\n  }\n}\n\nexport default Chart\n","import React, {Component} from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\nimport * as d3 from \"d3\"\n\nrequire('./Axis.scss')\nconst orientations = {\n  x: \"bottom\",\n  y: \"left\"\n}\nconst axesMap = {\n  top: \"axisTop\",\n  left: \"axisLeft\",\n  right: \"axisRight\",\n  bottom: \"axisBottom\",\n}\n\nclass Axis extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      axis: null\n    }\n  }\n\n  static propTypes = {\n    width: PropTypes.number,\n    height: PropTypes.number,\n    scale: PropTypes.func,\n    margin: PropTypes.shape({\n      top: PropTypes.number,\n      right: PropTypes.number,\n      bottom: PropTypes.number,\n      left: PropTypes.number,\n    }),\n    dimension: PropTypes.oneOf([\"x\", \"y\"]),\n    orientation: PropTypes.oneOf([\"left\", \"right\", \"top\", \"bottom\"]),\n    ticks: PropTypes.number,\n    tickSize: PropTypes.number,\n    tickSizeInner: PropTypes.number,\n    tickSizeOuter: PropTypes.number,\n    tickFrequency: PropTypes.number,\n    tickArguments: PropTypes.array,\n    format: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.number,\n    ]),\n    initTransition: PropTypes.number,\n    transition: PropTypes.number,\n    label: PropTypes.string,\n    hasInlineLabel: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    margin: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n    },\n    ticks: 6,\n    tickSize: 0,\n    tickSizeInner: 6,\n    tickSizeOuter: 0,\n    initTransition: 300,\n    transition: 300\n  };\n  elem = React.createRef()\n\n  getStyle() {\n    const {height, width, margin, dimension} = this.props\n    const x = dimension == \"x\"      ? 0 :\n              margin.left           ? 1 :\n                                      width\n    const y = dimension == \"x\" ? height - margin.top - margin.bottom : 0\n\n    return {\n      transform: `translate3d(${x}px, ${y}px, 0)`\n    }\n  }\n\n  getOrientation() {\n    let {dimension, orientation} = this.props\n    return orientation || orientations[this.props.dimension] || \"left\"\n  }\n\n  update(props) {\n    let {scale, label, tickSize, tickSizeInner, tickSizeOuter, ticks, tickFrequency, tickPadding, tickArguments, format, initTransition, transition} = (props || this.props)\n    let {axis} = this.state\n    if (!scale) return\n\n    let init = !axis\n    if (init) axis = d3[axesMap[this.getOrientation()]]()\n\n    axis.scale(scale)\n        .tickSize(tickSize)\n        .tickSizeInner(tickSizeInner)\n        .tickSizeOuter(tickSizeOuter)\n\n    if (tickArguments) axis.tickArguments(tickArguments)\n    if (format) axis.tickFormat(format)\n    if (ticks) axis.ticks(ticks, tickFrequency)\n    if (tickPadding) axis.tickPadding(tickPadding)\n\n    d3.select(this.elem.current)\n      .transition().duration(init ? initTransition : transition)\n      .call(axis)\n\n    this.setState({axis})\n  }\n\n  componentDidMount() {\n    this.update()\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.update(newProps)\n  }\n\n  renderLabel() {\n    let {dimension, label, width, hasInlineLabel} = this.props\n    let x =      dimension == \"x\" ? width - 100 || 0 : 0\n    let y =      dimension == \"x\" ? -10 :\n      hasInlineLabel ? 6 : 20\n    let rotate = dimension == \"x\" || hasInlineLabel ? 0 : -90\n\n    let style = {\n      transform: `rotate(${rotate}deg)`,\n    }\n    return <text\n      className={`Axis__label Axis--${dimension ? `${dimension}__` : ''}label`}\n      style={style}\n      x={x}\n      y={y}>\n      {label}\n    </text>\n  }\n\n  getClassName() {\n    let {dimension, hasInlineLabel, className} = this.props\n\n    return classNames(\n      \"Axis\", {\n        [`Axis--${dimension}`]: dimension,\n        [`Axis--has-inline-label`]: hasInlineLabel,\n      },\n      className\n    )\n  }\n\n  render() {\n    let {label} = this.props\n\n    return (\n      <g ref={this.elem} className={this.getClassName()} style={this.getStyle()}>\n        {!!label && this.renderLabel()}\n      </g>\n    )\n  }\n}\n\nexport default Axis\n","import React, {Component} from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\nimport _ from \"lodash\"\nimport {isObject} from \"lodash\"\n\nrequire('./RadioGroup.scss')\n\nconst getOptionValue = option => _.isObject(option) ? option.value : option\nconst areSameValue = (a, b) => getOptionValue(a) == getOptionValue(b)\nclass RadioGroup extends Component {\n  static propTypes = {\n    options: PropTypes.array,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.object\n    ]),\n    isMulti: PropTypes.bool,\n    canClear: PropTypes.bool,\n    onChange: PropTypes.func,\n  };\n\n  static defaultProps = {\n    options: [],\n    isMulti: false,\n    canClear: false,\n    onChange: _.noop,\n  };\n\n  getClassName() {\n    return classNames(\n      \"RadioGroup\", this.props.className\n    )\n  }\n\n  onChange = option => () => {\n    const { value, isMulti } = this.props\n    const newValue = isMulti ?\n        !option ? [] :\n        value.map(getOptionValue).includes(getOptionValue(option)) ? _.filter(value, d => !areSameValue(option, d)) :\n          [...value, option]  :\n        !option || areSameValue(value, option) ?\n          null :\n        option\n    this.props.onChange(newValue)\n  }\n\n  renderOption = (option, idx) => {\n    const {value, isMulti} = this.props\n\n    const className = classNames(\n      \"RadioGroup__option\", {\n        \"RadioGroup__option--selected\": isMulti ?\n          value.map(getOptionValue).includes(getOptionValue(option)) :\n          areSameValue(option, value)\n      }\n    )\n    return <div className={className} style={{\n      color: option.color,\n    }} onClick={this.onChange(option)} key={idx}>\n      {_.isObject(option) && option.label ? option.label : getOptionValue(option)}\n    </div>\n  }\n\n  renderClear = () => {\n    return (\n      <div className=\"RadioGroup__option RadioGroup__clear\" onClick={this.onChange()}>\n        x\n      </div>\n    )\n  }\n\n  render() {\n    const {options, canClear, isMulti} = this.props\n\n    return (\n      <div className={this.getClassName()}>\n        {options.map(this.renderOption)}\n        {canClear && this.renderClear()}\n      </div>\n    )\n  }\n}\n\nexport default RadioGroup\n","import React, {Component} from \"react\"\nimport PropTypes from \"prop-types\"\nimport * as d3 from \"d3\"\nimport numeral from \"numeral\"\nimport classNames from \"classnames\"\nimport _ from \"lodash\"\nimport { createScale } from 'components/_ui/Chart/utils/scale';\nimport RadioGroup from 'components/_ui/RadioGroup/RadioGroup';\nimport Select from 'react-select';\nimport selectStyles from './selectStyles';\n\nimport Chart from \"components/_ui/Chart/Chart\"\nimport Axis from \"components/_ui/Chart/Axis/Axis\"\n\nimport rawData from \"./Wdvp_gov_score.json\"\n\nimport './WDVPScatter.scss'\n\nconst formatNumber = d => numeral(d).format(\"0,0\")\nconst margin = {\n  top: 20,\n  right: 20,\n  bottom: 50,\n  left: 50,\n}\nlet continents = [\n  {code: \"AS\", value: \"Asia\",          color: \"#12CBC4\"}, // #EF4E78, \"#63cdda\"\n  {code: \"EU\", value: \"Europe\",        color: \"#B53471\"}, // #F99072, \"#cf6a87\"\n  {code: \"AF\", value: \"Africa\",        color: \"#F79F1F\"}, // #FFCA81, \"#e77f67\"\n  {code: \"NA\", value: \"North America\", color: \"#5758BB\"}, // #98C55C, \"#FDA7DF\"\n  {code: \"OC\", value: \"Oceania\",       color: \"#1289A7\"}, // #67B279, \"#4b7bec\"\n  {code: \"SA\", value: \"South America\", color: \"#A3CB38\"}, // #6F87A6, \"#778beb\"\n]\nconst numberFromValue = value =>\n  _.isFinite(value) ? value :\n  _.isString(value) ? +value.replace(/,/g, \"\") :\n  null\n\n// const metricOptions = [\n//   \"population\", \"GDP\", \"GDP per km2\", \"land area (sq km)\", \"population density\", \"total foreign-born\\npopulation\", \"% foreign-born population\", \"population living abroad (diaspora)\", \"population living abroad\", \"happy planet index\", \"world happiness report score\", \"human development index\", \"health expenditure\", \"education expenditure\", \"Area in km²\", \"Population\"\n// ]\nconst metricOptions = [\n  \"population\", \"surface area (Km2)\", \"happy planet index\", \"human development index\", \"world happiness report score\", \"sustainable economic development assessment (SEDA)\", \"GDP (billions PPP)\", \"GDP per capita (PPP)\", \"GDP growth (annual %)\", \"health expenditure % of GDP\", \"health expenditure per person\", \"education expenditure % of GDP\", \"education expenditure per person\", \"school life expectancy (years)\", \"unemployment (%)\", \"government spending score\", \"government expenditure (% of GDP)\", \"political rights score\", \"civil liberties score\", \"political stability & absence of violence\", \"government effectiveness\", \"regulatory quality\", \"rule of law\", \"control of corruption\", \"judicial effectiveness score\", \"government integrity score\", \"property rights score\", \"tax burden score\", \"overall economic freedom score\", \"financial freedom score\", \"women MPs (% of all MPs)\", \"Area in km²\", \"Population\",\n  \"PCscore1\", \"PCscore2\", \"PCscore3\", \"PCscore4\", \"tSNE1\", \"tSNE2\",\n]\nconst metricOptionsVerbose = _.map(metricOptions, m => ({\n  value: m,\n  label: m,\n  color: \"#114D4D\",\n}))\nconst continentColors = _.fromPairs(_.map(continents, continent => [\n  continent.code,\n  continent.color,\n]))\nconst countryOptions = _.map(rawData, country => ({ value: country.Country, label: country.Country, color: continentColors[country.Continent] }))\n\nclass WDVPScatter extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      height: 0,\n      width: 0,\n      filteredData: [],\n      tooltipInfo: null,\n      closestCountries: null,\n      selectedCountries: [],\n      selectedContinents: [],\n      iteration: 0,\n      showingPointLabels: {},\n      scales: {},\n      hoveredCountry: null,\n      iterator: 0,\n    }\n  }\n  chart = React.createRef()\n  scatter = React.createRef()\n  container = React.createRef()\n  static propTypes = {\n    data: PropTypes.array,\n    xMetric: PropTypes.string,\n    yMetric: PropTypes.string,\n  }\n  static defaultProps = {\n    data: [],\n  }\n\n  getClassName() {\n    return classNames(\"WDVPScatter\", this.props.className)\n  }\n\n  componentDidMount() {\n    this.onResize()\n    window.addEventListener('resize', this.onResize)\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.data != prevProps.data ||\n      this.props.xMetric != prevProps.xMetric ||\n      this.props.yMetric != prevProps.yMetric\n    ) this.createScales()\n  }\n\n  componentWillUnmount = () => {\n    window.removeEventListener('resize', this.onResize)\n  }\n\n  onResize = () => {\n    const width = Math.min(\n      window.innerHeight * 0.8,\n      this.container.current.clientWidth,\n    )\n    const height = width\n\n    this.setState({width, height}, this.createScales)\n  }\n\n  createScales = () => {\n    const { data } = this.props\n    const { width, height, selectedCountries, selectedContinents, selectedGroups } = this.state\n\n    const selectedContinentValues = _.map(selectedContinents, \"code\")\n    // const selectedGroupValues = _.map(selectedGroups, \"value\")\n    const filteredData = _.filter(data, d => (\n      (_.isEmpty(selectedContinents) || _.includes(selectedContinentValues, d.Continent))\n      // && (_.isEmpty(selectedGroups) || _.includes(selectedGroupValues, d.group))\n    ))\n\n    const scales = {\n      x: createScale({\n        // type: \"time\",\n        width,\n        margin,\n        clamp: false,\n        dimension: \"x\",\n        domain: d3.extent(filteredData, this.xAccessor),\n      }),\n      y: createScale({\n        // type: \"log\",\n        height,\n        margin,\n        clamp: false,\n        dimension: \"y\",\n        domain: d3.extent(filteredData, this.yAccessor),\n      })\n    }\n    const iteration = this.state.iteration + 1\n    this.setState({ scales, filteredData, iteration })\n  }\n  onDotsUpdate = dots => {\n    dots.style(\"fill\", d => continentColors[d.Continent])\n      .style(\"opacity\", 1)\n      // .style(\"transition\", \"all 0.9s ease-out\")\n  }\n\n  xAccessor = d => numberFromValue(d[this.props.xMetric])\n  yAccessor = d => numberFromValue(d[this.props.yMetric])\n  xAccessorScaled = (d,i) => this.state.scales.x && this.state.scales.x(this.xAccessor(d))\n  yAccessorScaled = d => this.state.scales.y && this.state.scales.y(this.yAccessor(d))\n\n  onMouseMove = (clientX, clientY) => {\n    if (!this.chart || !this.chart.current) return\n    const { width, scales, filteredData } = this.state\n    if (!this.isHoveringChart) return\n\n    const mouseX = clientX - this.chart.current.getBoundingClientRect().left - margin.left\n    const yearIndex = Math.round(scales.x.invert(mouseX))\n    const year = yearIndex + 1926\n\n    const mouseY = clientY - this.chart.current.getBoundingClientRect().top - margin.top\n    const mouseYVal = scales.y.invert(mouseY)\n\n    const parsedCountries = _.map(filteredData, country => ({\n      ...country,\n      value: country.GDP,\n      distanceFromY: mouseYVal - country.GDP,\n      absDistanceFromY: Math.abs(mouseYVal - country.GDP),\n    }))\n    const orderedCountries = _.map(_.orderBy(parsedCountries, \"GDP\", \"desc\"), (d, i) => ({...d, index: i + 1}))\n    const continentsByYCloseness = _.orderBy(orderedCountries, \"distanceFromY\", \"asc\")\n    const continentsByYAbsCloseness = _.orderBy(orderedCountries, \"absDistanceFromY\", \"asc\")\n    const closestCountries = _.get(continentsByYAbsCloseness, [0, \"Country\"])\n    const closestCountriesIndex = _.findIndex(continentsByYCloseness, {country: closestCountries})\n    const neighborsOnEachSide = 3\n    const closestCountriesIndexCenter = Math.max(Math.min(closestCountriesIndex, continentsByYCloseness.length - neighborsOnEachSide), neighborsOnEachSide)\n    const closestCountries2 = _.map(\n      continentsByYCloseness.slice(closestCountriesIndexCenter - neighborsOnEachSide, closestCountriesIndexCenter + neighborsOnEachSide),\n      (country, i) => ({...country, isSelected: closestCountriesIndexCenter + i - neighborsOnEachSide == closestCountriesIndex }),\n    )\n    const x = mouseX\n    const boundedX = Math.max(Math.min(width - 200, x), 0)\n\n    const tooltipInfo = {\n      countries: closestCountries2,\n      year,\n      y: mouseY,\n      x,\n      boundedX,\n    }\n\n    this.setState({ tooltipInfo, closestCountries })\n  }\n  throttledOnMouseMove = _.throttle(this.onMouseMove, 90)\n  persistedOnMouseMove = e => this.throttledOnMouseMove(e.clientX, e.clientY)\n\n  onMouseEnter = () => this.isHoveringChart = true;\n  clearTooltip = () => {\n    this.isHoveringChart = false;\n    this.setState({ tooltipInfo: null, closestCountries: null })\n  }\n  onCountriesSelect = countries => {\n    this.setState({ selectedCountries: countries }, this.createScales)\n    if (this.props.onHighlightedCountriesChange) this.props.onHighlightedCountriesChange(countries)\n  }\n  onContinentsSelect = continents => this.setState({ selectedContinents: continents }, this.createScales)\n\n  onMetricChange = axis => metric => this.setState({ [`${axis}Metric`]: metric.value }, this.createScales)\n\n  onMouseEnterPoint = country => () => {\n    const showingPointLabels = _.uniqBy([...this.state.showingPointLabels, country], \"Country\")\n    this.setState({ showingPointLabels })\n  }\n  onMouseLeavePoint = country => () => {\n    const showingPointLabels = _.reject(this.state.showingPointLabels, {Country: country.Country})\n    this.setState({ showingPointLabels })\n  }\n\n  render() {\n    const { data, xMetric, yMetric, angleOfMostVariance, vectorOfMostVariance } = this.props\n    const { height, width, scales, tooltipInfo, selectedCountries, selectedContinents, filteredData, iteration, showingPointLabels } = this.state\n    const selectedCountryValues = _.map(selectedCountries, \"value\")\n    const meanX = scales.x && scales.x(_.meanBy(data, \"xValue\"))\n    const meanY = scales.y && scales.y(_.meanBy(data, \"yValue\"))\n\n    return (\n      <div className={this.getClassName()}>\n        <div className=\"WDVPScatter__contents\">\n          <div className=\"WDVPScatter__controls\">\n            <div className=\"WDVPScatter__sentence\">\n              Show me countries in\n                {/* <Select\n                  isMulti\n                  name=\"continents\"\n                  options={continentOptions}\n                  value={selectedContinents}\n                  className=\"WDVPScatter__select\"\n                  classNamePrefix=\"WDVPScatter__select\"\n                  styles={selectStyles}\n                  onChange={this.onContinentsSelect}\n                /> */}\n\n                <RadioGroup\n                  className=\"WDVPScatter__toggle\"\n                  options={continents}\n                  value={selectedContinents}\n                  onChange={this.onContinentsSelect}\n                  isMulti\n                  canClear\n                />\n              </div>\n              <div className=\"WDVPScatter__aside\">\n                I'm especially interested in\n                <Select\n                  isMulti\n                  name=\"countries\"\n                  options={countryOptions}\n                  value={selectedCountries}\n                  className=\"WDVPScatter__select\"\n                  classNamePrefix=\"WDVPScatter__select\"\n                  styles={selectStyles}\n                  onChange={this.onCountriesSelect}\n                />\n            </div>\n          </div>\n        </div>\n        <div className=\"WDVPScatter__chart-wrapper\" ref={this.container} style={{\n          // transform: `rotateZ(${angleOfMostVariance}deg)`\n        }}>\n          <Chart\n            height={height}\n            width={width}\n            margin={margin}\n            ref={this.chart}\n          >\n            <Axis\n              dimension=\"x\"\n              height={height}\n              width={width}\n              margin={margin}\n              scale={scales.x}\n              format={formatNumber}\n              label={\"x axis weights\"}\n            />\n            <Axis\n              dimension=\"y\"\n              height={height}\n              margin={margin}\n              scale={scales.y}\n              format={formatNumber}\n              label={\"y axis weights\"}\n            />\n            {_.map(filteredData, country => (\n              <WDVPScatterCountry\n                key={country.Country}\n                name={country.Country}\n                color={continentColors[country.Continent]}\n                x={this.xAccessorScaled(country)}\n                y={this.yAccessorScaled(country)}\n                isSelected={_.includes(selectedCountryValues, country.Country)}\n              />\n            ))}\n\n            {_.map(filteredData, country => (\n              <WDVPScatterCountryHighlight\n                key={country.Country}\n                name={country.Country}\n                color={continentColors[country.Continent]}\n                x={this.xAccessorScaled(country)}\n                y={this.yAccessorScaled(country)}\n                isSelected={_.includes(selectedCountryValues, country.Country)}\n                isShowingLabels={filteredData.length < 55}\n              />\n            ))}\n\n            {tooltipInfo && (\n              <rect\n                className=\"WDVPScatter__crosshair\"\n                x={tooltipInfo.x}\n                y={margin.top}\n                width={1}\n                height={height - margin.top - margin.bottom}\n              />\n            )}\n\n            {_.isFinite(angleOfMostVariance) && _.isFinite(meanX) && (\n              <WDVPScatterLine\n                angle={angleOfMostVariance}\n                meanX={meanX}\n                meanY={meanY}\n                width={width}\n                height={height}\n                margin={margin}\n              />\n            )}\n          </Chart>\n\n          {tooltipInfo && (\n            <WDVPScatterTooltip\n              style={{transform: `translate3d(calc(-50% + ${tooltipInfo.boundedX}px), calc(-100% + ${tooltipInfo.y}px), 0)`}}\n              {...tooltipInfo}\n            />\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default WDVPScatter\n\n\n\nconst WDVPScatterTooltip = ({ continents, year, x, boundedX, y, ...props }) => (\n  <div className=\"WDVPScatterTooltip\" {...props}>\n    <h6 className=\"WDVPScatterTooltip__header\">{ year }</h6>\n    <div className=\"WDVPScatterTooltip__continents\">\n      {_.map(continents, continent => _.isObject(continent) && (\n        <div className={`WDVPScatterTooltip__continent WDVPScatterTooltip__continent--is-${continent.isSelected ? \"selected\" : \"not-selected\"}`} key={continent.continent}>\n          <div className=\"WDVPScatterTooltip__continent-color\" style={{background: continentColors[continent]}} />\n          <div className=\"WDVPScatterTooltip__continent__index\">\n            { continent.index }.\n          </div>\n          <div className=\"WDVPScatterTooltip__continent__label\">\n            { continent.continent }\n          </div>\n          <div className=\"WDVPScatterTooltip__continent__value\">\n            { formatNumber(continent.value) }\n          </div>\n        </div>\n      ))}\n    </div>\n  </div>\n)\n\nconst WDVPScatterCountry = React.memo(({ color, x, y }) => _.isFinite(x) && _.isFinite(y) && (\n  <circle\n    className=\"WDVPScatterCountry\"\n    cx={x}\n    cy={y}\n    r={5}\n    fill={color}\n  />\n))\n\nconst WDVPScatterCountryHighlight = React.memo(({ name, color, x, y, isSelected, isShowingLabels }) => _.isFinite(x) && _.isFinite(y) && (\n  <g className=\"WDVPScatterCountryHighlight\">\n    <circle\n      className=\"WDVPScatterCountryHighlight__outline\"\n      cx={x}\n      cy={y}\n      r={9}\n      style={{\n        fill: \"transparent\",\n        stroke: isSelected ? \"#114D4D\" : \"transparent\",\n        strokeWidth: 4,\n      }}\n    />\n      <g\n        className=\"WDVPScatterCountryHighlight__text-wrapper\"\n        style={{\n          opacity: isShowingLabels || isSelected ? 1 : 0,\n      }}>\n        <text\n          className=\"WDVPScatterCountryHighlight__text\"\n          x={x}\n          y={y - 13}\n          // fill={color}\n          stroke=\"white\"\n          strokeWidth=\"3\"\n          >\n          { name }\n        </text>\n        <text\n          className=\"WDVPScatterCountryHighlight__text\"\n          x={x}\n          y={y - 13}\n          stroke=\"0\"\n          fill=\"black\"\n          // fill={color}\n        >\n        { name }\n      </text>\n    </g>\n  </g>\n))\n\nconst WDVPScatterLine = ({ angle, meanX, meanY, width, height, margin }) => {\n  const boundedWidth = width - margin.left - margin.right\n  const boundedHeight = height - margin.top - margin.bottom\n  const x1 = meanX + boundedWidth / 2 * Math.cos(angle / 180 * Math.PI)\n  const y1 = meanY - boundedHeight / 2 * Math.sin(angle / 180 * Math.PI)\n  const x2 = meanX - boundedWidth / 2 * Math.cos(angle / 180 * Math.PI)\n  const y2 = meanY + boundedHeight / 2 * Math.sin(angle / 180 * Math.PI)\n  // const arrowWidth = 10\n  // const arrowHeight = 10\n\n  return (\n    <g\n      style={{\n        // transform: `rotate(${-angle}deg)`,\n        // transformOrigin: \"center center\",\n      }}>\n        {/* <rect x=\"0\" y=\"0\" width={boundedWidth} height={boundedHeight} fill=\"none\" stroke=\"green\" /> */}\n        {/* <text\n          x={width - margin.left - margin.right / 2}\n          y={meanY}>Axis of Good</text> */}\n        <line\n          className=\"WDVPScatter__line\"\n          // x1={meanX - ((width) / 2)}\n          // y1={meanY}\n          // x2={meanX + ((width) / 2)}\n          // y2={meanY}\n          // x1={meanX - vectorOfMostVariance[0] * 300}\n          // y1={meanY + vectorOfMostVariance[1] * 300}\n          // x2={meanX + vectorOfMostVariance[0] * 300}\n          // y2={meanY - vectorOfMostVariance[1] * 300}\n          x1={x1}\n          y1={y1}\n          x2={x2}\n          y2={y2}\n          stroke=\"black\"\n        />\n        {/* <path d={\"M \" + [\n          [width - arrowWidth / 2, meanY - arrowHeight / 2].join(\" \"),\n          [width + arrowWidth / 2, meanY + 0].join(\" \"),\n          [width - arrowWidth / 2, meanY + arrowHeight / 2].join(\" \"),\n        ].join(\" L \") + \" Z\"} /> */}\n    </g>\n  )\n}","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\nexport var scheme = new Array(3).concat(\"af8dc3f7f7f77fbf7b\", \"7b3294c2a5cfa6dba0008837\", \"7b3294c2a5cff7f7f7a6dba0008837\", \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\", \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\", \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\", \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\", \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\", \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\").map(colors);\nexport default ramp(scheme);"],"sourceRoot":""}