{"version":3,"sources":["components/Articles/StephenKingUniverse/StephenKingUniverse.jsx"],"names":["console","log","data","ignoreList","series","filteredBooks","filter","d","includes","title","clusters","_","range","map","i","data3","cluster","length","clusterColors","color","darkerColor","d3","darker","s","StephenKingUniverse","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","className","StephenKingUniverseChart","xAccessor","x","yAccessor","y","radiusAccessor","work_ratings_count","yearAccessor","original_publication_year","radiusScale","domain","bookInfo","ratingsDelayScale","average_rating","radiusModScale","animationDelayScale","_useState","useState","_useState2","Object","_Users_linying_codespace_Lyzzz_s_Blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","setHoveredBook","_useState3","_useState4","stars","setStars","bookBeingDragged","useRef","dragStartPosition","starPositions","_useState5","_useState6","iteration","setIteration","iterationRef","svg","current","_useChartDimensions","useChartDimensions","height","width","marginTop","marginRight","marginBottom","marginLeft","_useChartDimensions2","ref","dimensions","offsets","offsetsData","_useMemo","useMemo","xScale","boundedWidth","yScale","boundedHeight","parsedBooks","matchingBook","find","info","toLowerCase","bookLabels","original_title","_Users_linying_codespace_Lyzzz_s_Blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__","unscaledX","unscaledY","r","year","labelSide","sort","b","onDrag","e","clientX","clientY","onDragEnd","window","removeEventListener","uncollidedBooks","_Users_linying_codespace_Lyzzz_s_Blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","onPointerDown","getBoundingClientRect","pos","left","top","concat","onPointerMove","stopPropagation","newStars","slice","onPointerUp","id","fill","result","flood-color","flood-opacity","in","in2","operator","radius","stdDeviation","index","transform","join","_ref","starIndex","_ref2","start","end","key","_ref3","cx","cy","createPath","Annotations","books","seriesIndex","bookName","bookIndex","nextBookName","currentBook","book","nextBook","style","animationDelay","x1","y1","x2","y2","stroke","onMouseEnter","onMouseDown","addEventListener","Number","isFinite","times","href","Math","cos","sin","_ref4","strokeWidth","PI","arr"],"mappings":"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","file":"static/js/54.fc68b68b.chunk.js","sourcesContent":["import React, { useState, useMemo, useRef } from 'react';\nimport * as d3 from \"d3\"\nimport _ from \"lodash\"\nimport Tooltip from \"components/_ui/Tooltip/Tooltip\"\nimport Button from \"components/_ui/Button/Button\"\nimport USMap from \"components/_ui/USMap/USMap\"\nimport Chart from \"components/_ui/Chart/Chart\"\nimport { useChartDimensions } from \"components/_ui/Chart/utils/utils\"\nimport Scatter from \"components/_ui/Chart/Scatter/Scatter\"\nimport Axis from \"components/_ui/Chart/Axis/Axis\"\nimport data from \"./data.json\"\nimport data3 from \"./data3.json\"\nimport bookLabels from \"./book-labels.json\"\nimport bookInfo from \"./book-info.json\"\nimport offsetsData from \"./offsets.json\"\n\nimport './StephenKingUniverse.scss';\nconsole.log(data)\n\nconst ignoreList = [\n    \"Uncollected Stories 2003\", \"Guns (Kindle Single)\", \"Riding the Bullet\",\"End of Watch (The Bill Hodges Trilogy Book 3)\",\n    \"Face in the Crowd, A\" // no info\n]\nconst series = [\n    [\"The Talisman\", \"Black House\"],\n    [\n        \"The Gunslinger\", \"The Drawing of the Three\", \"The Waste Lands\", \"Wizard and Glass\", \"Wolves of the Calla\", \"Song of Susannah\", \"The Dark Tower\", \"The Wind Through the Keyhole\"\n    ],[\n        \"Mr. Mercedes\", \"Finders Keepers\", \"End of Watch\"\n    ],[\n        \"The Two Dead Girls\", \"The Mouse on the Mile\", \"Coffey's Hands\", \"The Bad Death of Eduard Delacroix\", \"Night Journey\", \"Coffey on the Mile\"\n    ],[\n        \"The Shining\", \"Doctor Sleep\"\n    ]\n]\n\nconst filteredBooks = data.filter(d => !ignoreList.includes(d.title))\nconst clusters = _.range(9).map(i => (\n    data3.filter(d => d.cluster == i).map(d => d.title)\n)).filter(d => d.length < 20)\n// const clusters = _.range(9).map(i => (\n//     filteredBooks.filter(d => d.cluster == i).map(d => d.title)\n// )).filter(d => d.length < 20)\nconsole.log(clusters)\n// const clusterColors = [\"#778beb\", \"#63cdda\", \"#cf6a87\", \"#e77f67\", \"#786fa6\", \"#FDA7DF\", \"#4b7bec\", \"#778ca3\"];\n// const clusterColors = [\"#c7ecee\", \"#f6e58d\", \"#ffcccc\", \"#f3a683\", \"#c8d6e5\", \"#786fa6\", \"#4b7bec\", \"#55efc4\"];\nconst clusterColors = [\"#c7ecee\", \"#f6e58d\", \"#ffcccc\", \"#f3a683\", \"#cbc9ff\", \"#786fa6\", \"#4b7bec\", \"#55efc4\", \"#cf6a87\", \"#e77f67\", \"#786fa6\", \"#FDA7DF\", \"#778ca3\"];\nconst clusterLabelColors = clusterColors.map(color => {\n    let darkerColor = d3.hsl(color).darker(0.9)\n   darkerColor.s -= 0.1\n    return darkerColor\n})\n\nconst StephenKingUniverse = () => {\n    return (\n        <div className=\"StephenKingUniverse\">\n            <div className=\"StephenKingUniverse__wrapper\">\n                <h1>\n                    Stephen King\n                </h1>\n                <StephenKingUniverseChart\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default StephenKingUniverse\n\n\nconst height = 600\nconst width = 600\nconst xAccessor = d => +d.x\nconst yAccessor = d => +d.y\nconst lengthAccessor = d => +d.length\nconst radiusAccessor = d => +d.work_ratings_count\nconst yearAccessor = d => d ? +d.original_publication_year : 0\nconst radiusScale = d3.scaleSqrt()\n    .domain(d3.extent(bookInfo.map(radiusAccessor)))\n    // .range([6, 25])\n    .range([6, 41])\n    // .range([27, 50])\nconst ratingsDelayScale = d3.scaleLinear()\n    .domain(d3.extent(bookInfo.map(d => +d.average_rating)))\n    .range([0, 10])\nconst radiusModScale = d3.scaleLinear()\n    .domain(radiusScale.range())\n    .range([0, 1.5])\nconst animationDelayScale = d3.scaleLinear()\n    .domain(d3.extent(bookInfo.map(yearAccessor)))\n    .range([0, 10])\nconst colorScale = d3.scaleLinear()\n    .domain(d3.extent(bookInfo.map(yearAccessor)))\n    .domain([2010, 2015])\n    // .range([6, 25])\n    .range([\"#fff\", \"#0abde3\"])\nconst StephenKingUniverseChart = () => {\n    const [hoveredBook, setHoveredBook] = useState(null)\n    const [stars, setStars] = useState([])\n    const bookBeingDragged = useRef(null)\n    const dragStartPosition = useRef({})\n    const starPositions = useRef(null)\n    const [iteration, setIteration] = useState(0)\n    const iterationRef = useRef(0)\n    const svg = useRef()\n    iterationRef.current = iteration\n\n    const [ref, dimensions] = useChartDimensions({\n        height: 2000,\n        width: 2000,\n        marginTop: 100,\n        marginRight: 100,\n        marginBottom: 100,\n        marginLeft: 100,\n    })\n\n    const offsets = useRef(offsetsData)\n\n    const {\n        xScale, yScale, parsedBooks\n    } = useMemo(() => {\n        const xScale = d3.scaleLinear()\n            .domain(d3.extent(filteredBooks, xAccessor))\n            .range([0, dimensions.boundedWidth])\n\n        const yScale = d3.scaleLinear()\n            .domain(d3.extent(filteredBooks, yAccessor))\n            .range([0, dimensions.boundedHeight])\n\n        const parsedBooks = filteredBooks.map(d => {\n            const matchingBook = bookInfo.find(info => (\n                info.title.toLowerCase() == d.title.toLowerCase()\n                || info.title.toLowerCase() == (bookLabels[d.title] || \"\").toLowerCase()\n                || (info.original_title && info.original_title.toLowerCase() == d.title.toLowerCase())\n                || (info.original_title && info.original_title.toLowerCase() == (bookLabels[d.title] || \"\").toLowerCase())\n                || (info.title == \"Everything's Eventual: 14 Dark Tales\" && d.title == \"Everything's Eventual\")\n            ))\n            if (!matchingBook) {\n                // console.log(d)\n                return null\n            }\n            const x = xScale(xAccessor(d))\n            return {\n                ...matchingBook,\n                ...d,\n                unscaledX: x + ((offsets.current[d.title] || {}).x || 0),\n                unscaledY: yScale(yAccessor(d)) + ((offsets.current[d.title] || {}).y || 0),\n                r: radiusScale(radiusAccessor(matchingBook)),\n                x: null,\n                y: null,\n                year: yearAccessor(matchingBook),\n                labelSide: x < (dimensions.boundedWidth * 0.5 - dimensions.marginLeft) ? \"left\" : \"right\",\n            }\n        })\n        .filter(d => d)\n        .sort((a,b) => b.year - a.year)\n\n        return {\n            xScale, yScale, parsedBooks\n        }\n    }, [dimensions.width, dimensions.height, iteration])\n\n    function onDrag(e) {\n        if (!offsets.current) return\n        offsets.current[bookBeingDragged.current] = {\n            x: e.clientX - dragStartPosition.current.x,\n            y: e.clientY - dragStartPosition.current.y,\n        }\n        setIteration(iterationRef.current + 1)\n    }\n\n    const onDragEnd = () => {\n        bookBeingDragged.current = null\n        window.removeEventListener(\"pointerup\", onDragEnd)\n        window.removeEventListener(\"pointermove\", onDrag)\n        setIteration(iteration + 1)\n        console.log(\"%coffsets\", \"color: #7083EC\", offsets.current)\n    }\n\n    const onDragStartLocal = book => e => {\n        bookBeingDragged.current = book.title\n        dragStartPosition.current = {\n            x: e.clientX,\n            y: e.clientY,\n        }\n        window.addEventListener(\"pointerup\", onDragEnd)\n        window.addEventListener(\"pointermove\", onDrag)\n    }\n\n    const onMouseDown = e => {\n        console.log(\"onMouseDown\")\n        starPositions.current = svg.current.getBoundingClientRect()\n        const pos = {\n            x: e.clientX - starPositions.current.left - dimensions.marginLeft,\n            y: e.clientY - starPositions.current.top - dimensions.marginTop,\n        }\n        setStars([\n            ...stars,\n            [pos, pos],\n        ])\n\n    }\n    const onMouseMove = e => {\n        console.log(\"onMouseMove\")\n        console.log(starPositions.current)\n        if (!starPositions.current) return\n        e.stopPropagation()\n        const newStars = [\n            ...stars.slice(0, -1),\n            stars.slice(-1)[0].map((d,i) => !i ? d : ({\n                x: e.clientX - starPositions.current.left - dimensions.marginLeft,\n                y: e.clientY - starPositions.current.top - dimensions.marginTop,\n            })),\n        ]\n        console.log(stars)\n        console.log(newStars)\n        setStars(newStars)\n        setIteration(iterationRef.current + 1)\n\n    }\n    const onMouseUp = e => {\n        console.log(\"onMouseUp\")\n        // setStars([\n        //     ...stars,\n        //     starPositions.current,\n        // ])\n        starPositions.current = null\n        setIteration(iteration + 1)\n        console.log(\"%coffsets\", \"color: #7083EC\", offsets.current)\n\n    }\n\n    const uncollidedBooks = useMemo(() => {\n        let uncollidedBooks = [...parsedBooks]\n\n        // _.times(10, i => {\n        //     uncollidedBooks = uncollidedBooks.map((book, bookIndex) => {\n        //         const doesCollide =\n        //     })\n        // })\n\n        // var simulation = d3.forceSimulation(uncollidedBooks)\n        //     .force(\"x\", d3.forceX(d => d.unscaledX).strength(1))\n        //     .force(\"y\", d3.forceY(d => d.unscaledY).strength(1))\n        //     // .force(\"collide\", d3.forceCollide(d => d.r + 13))\n        //     // .force(\"collide\", rectCollide()\n        //     //     .size([160, 90])\n        //     // )\n        //     .force(\"radial\", d3.forceRadial(60, width / 2, height / 2))\n        //     // .force(\"charge\", d3.forceManyBody())\n        //     // .force(\"center\", d3.forceCenter(\n        //     //     dimensions.boundedWidth / 2,\n        //     //     dimensions.boundedHeight / 2,\n        //     // ))\n        //     .stop()\n\n        // _.times(16, () => simulation.tick())\n\n        return uncollidedBooks\n    }, [xScale, parsedBooks])\n\n    return (\n        <div className=\"StephenKingUniverseChart\" ref={ref}>\n            <svg\n                width={dimensions.width}\n                height={dimensions.height}\n                className=\"StephenKingUniverseChart__svg\"\n                onPointerDown={onMouseDown}\n                onPointerMove={onMouseMove}\n                onPointerUp={onMouseUp}\n                ref={svg}>\n                <defs>\n                    <path\n                        id=\"heart\"\n                        fill=\"#b8cfcc\"\n                        // fill=\"#858cbf\"\n                        d=\"M7.08605 2.46083C6.93944 2.31416 6.76537 2.1978 6.57379 2.11842C6.3822 2.03904 6.17685 1.99818 5.96947 1.99818C5.76209 1.99818 5.55674 2.03904 5.36515 2.11842C5.17357 2.1978 4.9995 2.31416 4.85289 2.46083L4.54863 2.76509L4.24437 2.46083C3.94823 2.1647 3.54659 1.99833 3.12779 1.99833C2.70899 1.99833 2.30734 2.1647 2.01121 2.46083C1.71507 2.75697 1.54871 3.15861 1.54871 3.57741C1.54871 3.99621 1.71507 4.39786 2.01121 4.69399L2.31547 4.99825L4.54863 7.23141L6.78179 4.99825L7.08605 4.69399C7.23273 4.54739 7.34908 4.37332 7.42846 4.18173C7.50785 3.99014 7.54871 3.78479 7.54871 3.57741C7.54871 3.37003 7.50785 3.16468 7.42846 2.97309C7.34908 2.78151 7.23273 2.60744 7.08605 2.46083V2.46083Z\"\n                    />\n\n                    <filter id=\"glow-background\" x=\"-5\" y=\"-5\" width=\"20\" height=\"20\">\n                        <feFlood result=\"flood\" flood-color=\"#10273f\" flood-opacity=\"1\"></feFlood>\n                        <feComposite in=\"flood\" result=\"mask\" in2=\"SourceGraphic\" operator=\"in\"></feComposite>\n                        <feMorphology in=\"mask\" result=\"dilated\" operator=\"dilate\" radius=\"2\"></feMorphology>\n                        <feGaussianBlur in=\"dilated\" result=\"blurred\" stdDeviation=\"5\"></feGaussianBlur>\n                        <feMerge>\n                            <feMergeNode in=\"blurred\"></feMergeNode>\n                            <feMergeNode in=\"SourceGraphic\"></feMergeNode>\n                        </feMerge>\n                    </filter>\n                    <filter id=\"glow-neutral\">\n                        <feGaussianBlur in=\"dilated\" result=\"blurred\" stdDeviation=\"0.5\"></feGaussianBlur>\n                    </filter>\n                    {clusterColors.map((color, index) => (\n                        <filter id={`glow-${index}`} x=\"-5\" y=\"-5\" width=\"20\" height=\"20\">\n                            {/* <feFlood result=\"flood\" flood-color={\"#858cbf\"} flood-opacity=\"1\"></feFlood> */}\n                            <feFlood result=\"flood\" flood-color={color} flood-opacity=\"1\"></feFlood>\n                            <feComposite in=\"flood\" result=\"mask\" in2=\"SourceGraphic\" operator=\"in\"></feComposite>\n                            <feMorphology in=\"mask\" result=\"dilated\" operator=\"dilate\" radius=\"2\"></feMorphology>\n                            <feGaussianBlur in=\"dilated\" result=\"blurred\" stdDeviation=\"5\"></feGaussianBlur>\n                            <feMerge>\n                                <feMergeNode in=\"blurred\"></feMergeNode>\n                                <feMergeNode in=\"SourceGraphic\"></feMergeNode>\n                            </feMerge>\n                        </filter>\n                    ))}\n                </defs>\n\n                <g transform={`translate(${[\n                    dimensions.marginLeft,\n                    dimensions.marginTop,\n                ].join(\",\")})`}>\n\n                    {stars.map(([start, end], starIndex) => (\n                        <g key={starIndex}>\n                            {[end].map(({x, y}, i) => (\n                                <circle\n                                    key={[starIndex, i].join(\"-\")}\n                                    cx={x}\n                                    cy={y}\n                                    r=\"6\"\n                                    fill=\"white\"\n                                    // filter=\"url(#glow-neutral)\"\n                                />\n                            ))}\n                            <path\n                                className=\"StephenKingUniverseChart__line\"\n                                d={\n                                    createPath([\n                                        [\"M\", start.x, start.y],\n                                        [\"L\", end.x - 5, end.y - 5],\n                                        [\"L\", end.x + 5, end.y + 5],\n                                    ])\n                                }\n                                fill=\"white\"\n                                // filter=\"url(#glow-0)\"\n                            />\n                        </g>\n                    ))}\n\n\n                    <Annotations {...{dimensions}} />\n\n                    {series.map((books, seriesIndex) => (\n                        books.map((bookName, bookIndex) => {\n                            const nextBookName = books[bookIndex + 1]\n                            if (!nextBookName) return null\n                            const currentBook = uncollidedBooks.find(book => (\n                                bookLabels[book.title] == bookName\n                                || book.title == bookName\n                            ))\n                            const nextBook = uncollidedBooks.find(book => (\n                                bookLabels[book.title] == nextBookName\n                                || book.title == nextBookName\n                            ))\n                            if (!currentBook || !nextBook) return null\n\n                            return (\n                                <g className=\"StephenKingUniverse__fade-in\" key={[bookIndex, seriesIndex].join(\"-\")} style={{\n                                    animationDelay: `${animationDelayScale(currentBook.year)}s`\n                                }}>\n                                    <line\n                                        className=\"StephenKingUniverseChart__line\"\n                                        x1={currentBook.x || currentBook.unscaledX}\n                                        y1={currentBook.y || currentBook.unscaledY}\n                                        x2={nextBook.x || nextBook.unscaledX}\n                                        y2={nextBook.y || nextBook.unscaledY}\n                                    />\n                                    <circle\n                                        className=\"StephenKingUniverseChart__line__cover\"\n                                        cx={currentBook.x || currentBook.unscaledX}\n                                        cy={currentBook.y || currentBook.unscaledY}\n                                        r={currentBook.r + 10}\n                                    />\n                                    <circle\n                                        className=\"StephenKingUniverseChart__line__cover\"\n                                        cx={nextBook.x || nextBook.unscaledX}\n                                        cy={nextBook.y || nextBook.unscaledY}\n                                        r={nextBook.r + 10}\n                                    />\n                                </g>\n                            )\n                        })\n                    ))}\n\n                    {uncollidedBooks.map(d => (\n                        <g key={d.title}\n                            transform={`translate(${\n                                d.x || d.unscaledX\n                            }, ${\n                                d.y || d.unscaledY\n                            })`}\n                        >\n                            <circle\n                                className=\"StephenKingUniverseChart__circle StephenKingUniverse__fade-in--fill\"\n                                r={d.r}\n                                stroke={clusterColors[+d.cluster]}\n                                // fill={colorScale(d.year)}\n                                style={{\n                                    // filter: `url(#glow-${+d.cluster})`,\n                                    animationDelay: `${animationDelayScale(d.year)}s`,\n                                }}\n                                onMouseEnter={() => setHoveredBook(d)}\n                                onMouseDown={onDragStartLocal(d)}\n                            >\n                                <title>\n                                    { bookLabels[d.title] || d.title }\n                                </title>\n                            </circle>\n                            {Number.isFinite(+d.average_rating) &&\n                                // _.times(+d.average_rating, (_,i) => (\n                                _.times(ratingsDelayScale(+d.average_rating)).map((_,i) => (\n                                    <use href=\"#heart\"\n                                        key={i}\n                                        className=\"StephenKingUniverseChart__rating StephenKingUniverse__fade-in--fill\"\n                                        x={Math.cos(\n                                            1.85\n                                            + i / (1.9 + radiusModScale(+d.r))\n                                        )\n                                        * (d.r + 10)\n                                        - 4}\n                                        y={-Math.sin(\n                                            1.85\n                                            + i / (1.9 + radiusModScale(+d.r))\n                                        )\n                                        * (d.r + 10)\n                                        - 4}\n                                        //     style={{\n                                        //         animationDelay: `${animationDelayScale(d.year) + (i * 0.3)}s`,\n                                        //     }}\n                                    />\n                                ))\n                            }\n                        </g>\n                    ))}\n                    {/* {uncollidedBooks.map(d => (\n                        <g transform={`translate(${[\n                            d.x,\n                            d.y,\n                        ].join(\",\")})`}>\n                            <text\n                                className=\"StephenKingUniverseChart__title\"\n                                // y={d.r + 3}\n                            >\n                                { bookLabels[d.title] || d.title }\n                            </text>\n                        </g>\n                    ))} */}\n\n                </g>\n            </svg>\n\n            {uncollidedBooks.map(d => (\n                <div\n                    className={`StephenKingUniverseChart__label StephenKingUniverse__fade-in StephenKingUniverseChart__label--side-${d.labelSide}`}\n                    style={{\n                        transform: `translate(${[\n                            `calc(${\n                                (d.x || d.unscaledX)\n                                + (d.r * (d.labelSide == \"left\" ? -1 : 1))\n                                + (d.labelSide == \"left\" ? -17 : 9)\n                                + dimensions.marginLeft\n                            }px - ${d.labelSide == \"left\" ? \"100\" : \"0\"}%)`,\n                            `calc(${\n                                (d.y || d.unscaledY)\n                                + dimensions.marginTop\n                            }px - 50%)`,\n                            // `${d.y - d.r + dimensions.marginTop}px`,\n                        ].join(\",\")})`,\n                        height: d.r * 2,\n                        // width: d.r * 2,\n                        // color: clusterLabelColors[d.cluster],\n                        animationDelay: `${animationDelayScale(d.year) + 0.5}s`,\n                }}>\n                    { bookLabels[d.title] || d.title }\n                    <div className=\"StephenKingUniverseChart__label__year\">\n                        { d.year }\n                    </div>\n                </div>\n            ))}\n\n            {/* {hoveredBook && (\n                <div\n                    className=\"StephenKingUniverseChart__tooltip\"\n                    style={{\n                        transform: `translate(${\n                            hoveredBook.x * (width / 2) + width / 2\n                        }px, ${\n                            hoveredBook.y * (height / 2) + height / 2\n                        }px)`\n                    }}>\n                    <div className=\"StephenKingUniverseChart__tooltip-wrapper\">\n                        { hoveredBook.title }\n                    </div>\n                </div>\n            )} */}\n        </div>\n    )\n}\n\n\n\nconst Annotations = ({ dimensions }) => (\n\n    <g\n        className=\"StephenKingUniverseAnnotation\"\n        transform={`translate(${\n            dimensions.boundedWidth / 2 - 150\n        }, ${\n            dimensions.boundedHeight / 2 + 310\n        })`}>\n        <circle r={dimensions.boundedWidth * 0.46} />\n        {/* <circle r={dimensions.boundedWidth * 0.05} /> */}\n        <circle r={dimensions.boundedWidth * 0.06} />\n        <circle r={dimensions.boundedWidth * 0.4} />\n        <circle\n            r={dimensions.boundedWidth * 0.42}\n            style={{\n                strokeWidth: \"10\"\n            }}\n        />\n        {_.times(400).map(i => (\n            <line\n                key={i}\n                x1={Math.cos((Math.PI * 2 / 400) * i) * dimensions.boundedWidth * 0.4}\n                x2={Math.cos((Math.PI * 2 / 400) * i) * dimensions.boundedWidth * 0.42}\n                y1={Math.sin((Math.PI * 2 / 400) * i) * dimensions.boundedWidth * 0.4}\n                y2={Math.sin((Math.PI * 2 / 400) * i) * dimensions.boundedWidth * 0.42}\n            />\n        ))}\n        {_.times(20).map(i => (\n            <line\n                key={i}\n                x1={0}\n                x2={Math.cos((Math.PI * 2 / 20) * i) * dimensions.boundedWidth * 0.42}\n                y1={0}\n                y2={Math.sin((Math.PI * 2 / 20) * i) * dimensions.boundedWidth * 0.42}\n            />\n        ))}\n        {_.times(660).map(i => (\n            <line\n                key={i}\n                x1={Math.cos((Math.PI * 2 / 400) * i) * dimensions.boundedWidth * 0.33}\n                x2={Math.cos((Math.PI * 2 / 400) * i) * dimensions.boundedWidth * 0.34}\n                y1={Math.sin((Math.PI * 2 / 400) * i) * dimensions.boundedWidth * 0.33}\n                y2={Math.sin((Math.PI * 2 / 400) * i) * dimensions.boundedWidth * 0.34}\n            />\n        ))}\n        {_.times(800).map(i => (\n            <line\n                key={i}\n                x1={Math.cos((Math.PI * 2 / 800) * i) * dimensions.boundedWidth * 0.46}\n                x2={Math.cos((Math.PI * 2 / 800) * i) * dimensions.boundedWidth * 0.47}\n                y1={Math.sin((Math.PI * 2 / 800) * i) * dimensions.boundedWidth * 0.46}\n                y2={Math.sin((Math.PI * 2 / 800) * i) * dimensions.boundedWidth * 0.47}\n            />\n        ))}\n    </g>\n)\n\nconst createPath = arr => arr.map(d => d.join(\" \")).join(\" \")"],"sourceRoot":""}