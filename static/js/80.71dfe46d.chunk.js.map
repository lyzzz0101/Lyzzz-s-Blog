{"version":3,"sources":["components/Articles/Playground/OrbitControls.js","components/Articles/Playground/Playground.jsx"],"names":["OrbitControls","object","domElement","this","undefined","document","enabled","target","THREE","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MIDDLE","target0","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","update","state","STATE","NONE","offset","quat","setFromUnitVectors","up","quatInverse","inverse","lastPosition","lastQuaternion","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","max","min","makeSafe","radius","scale","add","panOffset","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","window","onKeyDown","type","startEvent","endEvent","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_DOLLY_PAN","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","body","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","console","warn","dollyIn","dollyScale","dollyOut","handleMouseDownPan","event","clientX","clientY","preventDefault","focus","button","ctrlKey","metaKey","shiftKey","handleMouseDownRotate","handleMouseDownDolly","addEventListener","subVectors","x","y","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","stopPropagation","handleMouseWheel","needsUpdate","keyCode","handleKeyDown","touches","pageX","pageY","handleTouchStartRotate","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchMoveRotate","handleTouchMoveDollyPan","prototype","Object","create","constructor","defineProperties","center","get","noZoom","value","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","extend","Playground","react_default","a","createElement","className","Wrapper","Controls","props","ref","useRef","_useThree","useThree","camera","scene","fog","assign","args","near","far","colorScale","d3","domain","range","_ref","react_three_fiber_esm","color","intensity","Playground_Dogs","Playground_Ground","Ground","geometry","side","attach","dogs","_","times","rows","Dogs","_useState","useState","_useState2","slicedToArray","group","map","dog","i","objectSpread2","floor","rate","useFrame","forEach","random","current","useEffect","_THREE$Matrix","applyMatrix","makeTranslation","apply","toConsumableArray","sun","sky","position-z","key","Playground_Dog","flowerColorScale","Dog","_ref2","useSpring","from","rotation","degToRad","to","config","mass","tension","friction","precision","points","getPoints","petalsColor","setFromPoints","three","Playground_DogHead","Playground_DogNose","Playground_DogEyes","Playground_DogEars","Playground_DogPetal","rotation-z","Playground_DogStem","DogHead","_ref3","meshGeo","DogNose","_ref4","_useMemo","useMemo","noseLength","_useMemo2","noseGeo","noseballGeo","mouthGeometry","DogEyes","_ref5","_useMemo3","eyeRadius","eyeGeo","eyeballGeo","eyeSpeckGeo","eyebrowGeo","eyebrowRotation","eyeballX","eyeballY","groupY","groupZ","_useMemo4","abs","DogEars","_ref6","_useMemo5","areDown","round","earRadius","_useMemo6","earGeo","earRotation","DogStem","DogPetal","_ref7","objectWithoutProperties","puffFactor","rad","cos","sin","rotation-x","opacity","transparent"],"mappings":"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","file":"static/js/80.71dfe46d.chunk.js","sourcesContent":["import * as THREE from 'three'\n\n/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nlet OrbitControls = function ( object, domElement ) {\n\n\tthis.object = object;\n\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new THREE.Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.25;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.panSpeed = 1.0;\n\tthis.screenSpacePanning = false; // if true, pan in screen-space\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { LEFT: THREE.MOUSE.LEFT, MIDDLE: THREE.MOUSE.MIDDLE, RIGHT: THREE.MOUSE.RIGHT };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new THREE.Vector3();\n\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t// restrict theta to be between desired limits\n\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\t\t\tscope.target.add( panOffset );\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = { NONE: - 1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY_PAN: 4 };\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new THREE.Spherical();\n\tvar sphericalDelta = new THREE.Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new THREE.Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new THREE.Vector2();\n\tvar rotateEnd = new THREE.Vector2();\n\tvar rotateDelta = new THREE.Vector2();\n\n\tvar panStart = new THREE.Vector2();\n\tvar panEnd = new THREE.Vector2();\n\tvar panDelta = new THREE.Vector2();\n\n\tvar dollyStart = new THREE.Vector2();\n\tvar dollyEnd = new THREE.Vector2();\n\tvar dollyDelta = new THREE.Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t}\n\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\t//console.log( 'handleMouseDownRotate' );\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\t//console.log( 'handleMouseDownDolly' );\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\t//console.log( 'handleMouseDownPan' );\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\t//console.log( 'handleMouseMoveRotate' );\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\t//console.log( 'handleMouseMoveDolly' );\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\t//console.log( 'handleMouseMovePan' );\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( event ) {\n\n\t\t// console.log( 'handleMouseUp' );\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\t// console.log( 'handleMouseWheel' );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\t// console.log( 'handleKeyDown' );\n\n\t\tvar needsUpdate = false;\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.update();\n\n\t\t}\n\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\t//console.log( 'handleTouchStartRotate' );\n\n\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchStartDollyPan( event ) {\n\n\t\t//console.log( 'handleTouchStartDollyPan' );\n\n\t\tif ( scope.enableZoom ) {\n\n\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tif ( scope.enablePan ) {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\t//console.log( 'handleTouchMoveRotate' );\n\n\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t//console.log( 'handleTouchMoveDollyPan' );\n\n\t\tif ( scope.enableZoom ) {\n\n\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyIn( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tif ( scope.enablePan ) {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanEnd.set( x, y );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchEnd( event ) {\n\n\t\t//console.log( 'handleTouchEnd' );\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onMouseDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\t// Prevent the browser from scrolling.\n\n\t\tevent.preventDefault();\n\n\t\t// Manually set the focus since calling preventDefault above\n\t\t// prevents the browser from setting it automatically.\n\n\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase scope.mouseButtons.LEFT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.MIDDLE:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.RIGHT:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tscope.dispatchEvent( startEvent );\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\t// two-fingered touch: dolly-pan\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return; // is this needed?\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // two-fingered touch: dolly-pan\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_DOLLY_PAN ) return; // is this needed?\n\n\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nOrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nOrbitControls.prototype.constructor = OrbitControls;\n\nObject.defineProperties( OrbitControls.prototype, {\n\n\tcenter: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'OrbitControls: .center has been renamed to .target' );\n\t\t\treturn this.target;\n\n\t\t}\n\n\t},\n\n\t// backward compatibility\n\n\tnoZoom: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\treturn ! this.enableZoom;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\tthis.enableZoom = ! value;\n\n\t\t}\n\n\t},\n\n\tnoRotate: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\treturn ! this.enableRotate;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\tthis.enableRotate = ! value;\n\n\t\t}\n\n\t},\n\n\tnoPan: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\treturn ! this.enablePan;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\tthis.enablePan = ! value;\n\n\t\t}\n\n\t},\n\n\tnoKeys: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\treturn ! this.enableKeys;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\tthis.enableKeys = ! value;\n\n\t\t}\n\n\t},\n\n\tstaticMoving: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\treturn ! this.enableDamping;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\tthis.enableDamping = ! value;\n\n\t\t}\n\n\t},\n\n\tdynamicDampingFactor: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\treturn this.dampingFactor;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\tthis.dampingFactor = value;\n\n\t\t}\n\n\t}\n\n} );\n\nexport default OrbitControls","import React, { useState, useEffect, useRef, useMemo } from \"react\"\nimport { extend, Canvas, useFrame, useThree } from 'react-three-fiber'\nimport { useSpring, animated } from 'react-spring/three'\nimport * as THREE from 'three'\nimport OrbitControls from \"./OrbitControls\"\nimport * as d3 from \"d3\"\nimport _ from \"lodash\"\n\nimport './Playground.scss';\n\nextend({ OrbitControls })\n\nconst Playground = () => {\n\n  return (\n    <div className={`Playground`}>\n      <div className=\"Playground__contents\">\n          <Wrapper />\n      </div>\n    </div>\n  )\n}\n\nexport default Playground\n\n\n\n// apply({ OrbitControls })\n\nfunction Controls(props) {\n  const ref = useRef()\n  const { camera, scene } = useThree()\n  scene.fog = new THREE.Fog(new THREE.Color(\"#e1eeed\"), 0, 20)\n\n  // useFrame(() => ref.current.obj.update())\n  return <orbitControls ref={ref} args={[camera]} {...props} />\n}\n\nconst camera = {\n  fov: 75, near: 0.1, far: 1000,\n  // \"position.z\": 2,\n}\n\nconst colorScale = d3.scaleLinear()\n  .domain([0,1])\n  .range([\"#e1b12c\", \"#40739e\"])\n\nfunction Wrapper({ ...props }) {\n  const meshGeo = new THREE.SphereBufferGeometry(100, 50, 50)\n\n  return (\n    <Canvas camera={camera} {...props}>\n      <Controls />\n      <group>\n        <pointLight\n          position={[0,0,5]}\n          color=\"#fafaff\"\n          intensity={0.5}\n          />\n        {/* <pointLight\n          position={[-2,0,-2]}\n          color=\"#ff007b\"\n          intensity={0.3}\n          /> */}\n        {/* <pointLight\n          position={[1,10,1]}\n          color=\"#ff007b\"\n          intensity={0.5}\n          />\n        <pointLight\n          position={[0,0,7]}\n          color=\"#9c88ff\"\n          intensity={0.2}\n          /> */}\n        {/* <pointLight\n          position={[0,0,6]}\n          color=\"#9c88ff\"\n          intensity={0.2}\n          /> */}\n        {/* <pointLight\n          position={[-10,-1,-1]}\n          color=\"#FFC312\"\n          intensity={1}\n        /> */}\n        {/* <pointLight\n          position={[3,3,3]}\n          color=\"#12CBC4\"\n          intensity={0.1}\n          /> */}\n        <pointLight\n          position={[0,0,3]}\n          color=\"#f7f3ce\"\n          intensity={0.1}\n          />\n        <ambientLight color=\"#fff\" intensity={0.7} />\n        {/* <ambientLight color=\"#5758BB\" intensity={0.4} /> */}\n\n        <Dogs />\n\n        <Ground\n        />\n\n        {/* {_.map(_.times(100), i => (\n          <mesh\n            key={i}\n            scale={_.times(3, d => i / 600)}\n            position={new THREE.Vector3(\n              Math.sin(i / 6),\n              Math.cos(i / 6),\n              Math.tan(i / 6),\n            )}\n            // geometry={meshGeo}\n            >\n            <octahedronGeometry attach=\"geometry\" />\n            <meshLambertMaterial\n              attach=\"material\"\n              color={colorScale(Math.random())}\n              // opacity={0.9}\n              // transparent\n            />\n          </mesh>\n        ))} */}\n\n      </group>\n    </Canvas>\n  )\n}\n\nconst Ground = () => {\n  const geometry = new THREE.SphereBufferGeometry(30, 50, 50)\n  // var geometry = new THREE.PlaneGeometry( 5, 20, 32 );\n\n  return (\n    <mesh geometry={geometry} position={[0, -31, 0]}>\n      <meshBasicMaterial\n        side={THREE.DoubleSide}\n        attach=\"material\"\n        color=\"#228c7b\"\n      />\n    </mesh>\n  )\n\n}\n\nconst rows = 9\nconst columns = 3\nconst spacing = 0.9\nlet dogs = _.times(rows * columns, {})\nconst Dogs = () => {\n  const [rotation, setRotation] = useState(0)\n\n  let group = useRef()\n  dogs = _.map(dogs, (dog, i) => ({\n    ...dog,\n    // ref: useRef(),\n    position: [\n      (-(rows / 2) + (i % rows)) * spacing,\n      0,\n      (-5 + Math.floor(i / columns)) * (spacing / 2),\n      // getPointFromAngleAndDistance(i * (360 / 8), 2).x,\n      // 0,\n      // getPointFromAngleAndDistance(i * (360 / 8), 1).y,\n    ],\n    rate: d3.randomNormal(0.0005, 0.005)(),\n    y: -2,\n  }))\n  let theta = 0\n  useFrame(() => {\n    theta++\n    // const y = 4 * Math.sin(THREE.Math.degToRad((theta += 0.1)))\n    // group.current.rotation.set(0, 0, r)\n    dogs.forEach((dog, i) => {\n      // const y = 1 * Math.sin(THREE.Math.degToRad((theta + dog.rate)))\n      if ((dog.y > 1 && Math.random() < 0.03)\n      || (dog.y > 2.3 && dog.rate > 0)\n      || (dog.y < 1 && dog.rate < 0)) {\n        dog.rate = -dog.rate\n      }\n      dog.y += dog.rate\n      if (!_.get(dog, \"ref.current\")) return\n      dog.ref.current.position.set(dog.position[0], dog.y, dog.position[2])\n    })\n  })\n  useEffect(() => {\n    dogs.forEach((dog, i) => {\n      if (!_.get(dog, \"ref.current\")) return\n\n      dog.ref.current.applyMatrix( new THREE.Matrix4().makeTranslation(...dog.position))\n    })\n\n  }, [])\n\n  const sun = new THREE.SphereBufferGeometry(6, 50, 50)\n  const sky = new THREE.SphereBufferGeometry(25, 50, 50)\n\n  return (\n    <group ref={group}>\n      <mesh geometry={sun} position-z={-8}>\n        <meshBasicMaterial attach=\"material\" color=\"#ffca61\" side={THREE.BackSide} />\n      </mesh>\n      <mesh geometry={sky} position-z={10}>\n        <meshLambertMaterial attach=\"material\" color=\"#fe5f55\" side={THREE.BackSide} />\n      </mesh>\n      {_.map(dogs, (dog, i) => (\n        <group ref={dog.ref}  key={i} scale={[0.8, 0.8, 0.8]}>\n        <Dog\n          position={dog.position}\n        />\n        </group>\n      ))}\n    </group>\n  )\n}\n\n\nconst flowerColorScale = d3.interpolateHcl(\"#FDA7DF\", \"#FFC312\")\nconst Dog = ({ position }) => {\n\n  const { rotation } = useSpring({\n    from: {\n      rotation: [THREE.Math.degToRad(180), 0, THREE.Math.degToRad(45)],\n    },\n    to: {\n      rotation: [0, 0, 0],\n    },\n    config: { mass: 10, tension: 1000, friction: 300, precision: 0.00001 }\n  })\n\n  const color = colorScale(Math.random())\n\n\n  const curve = new THREE.EllipseCurve(\n    0,  0,            // ax, aY\n    10, 10,           // xRadius, yRadius\n    0,  2 * Math.PI,  // aStartAngle, aEndAngle\n    false,            // aClockwise\n    0                 // aRotation\n  );\n\n  const points = curve.getPoints( 50 );\n  const circleGeometry = new THREE.BufferGeometry().setFromPoints( points );\n\n  const petalsColor = flowerColorScale(d3.randomNormal(0.5, 0.2)())\n\n\n  return (\n    <animated.group position={position} scale={_.times(3, i => 0.5)}>\n      <DogHead color={color} />\n      <DogNose color={color} />\n      <DogEyes color={color} />\n      <DogEars color={color} />\n      {_.times(6, i => (\n        <DogPetal color={petalsColor} rotation-z={i * (Math.PI * 2 / 6)} />\n      ))}\n      <DogStem />\n      {/* <line geometry={circleGeometry}>\n        <lineBasicMaterial attach=\"material\" color=\"#9c88ff\" />\n      </line> */}\n    </animated.group>\n  )\n}\n\nconst DogHead = ({ color }) => {\n  const meshGeo = new THREE.SphereBufferGeometry(1, 50, 50)\n  return (\n    <mesh geometry={meshGeo} scale={[\n      d3.randomNormal(1.2, 0.2)(),\n      1,\n      1.3,\n    ]}>\n      <meshLambertMaterial attach=\"material\" color={color} />\n    </mesh>\n  )\n}\n\nconst DogNose = ({ color }) => {\n  const [noseLength, noseGeo, noseballGeo] = useMemo(() => {\n    const noseLength = d3.randomNormal(0.7, 0.1)()\n    const noseGeo = new THREE.SphereBufferGeometry(noseLength, 20, 20)\n    const noseballGeo = new THREE.SphereBufferGeometry(d3.randomNormal(0.3, 0.05)(), 20, 20)\n    return [noseLength, noseGeo, noseballGeo]\n  }, [])\n\n  const curve = new THREE.EllipseCurve(\n    0,  0,            // ax, aY\n    0.35, 0.35,           // xRadius, yRadius\n    0,  Math.PI,  // aStartAngle, aEndAngle\n    true,            // aClockwise\n    0                 // aRotation\n  );\n\n  const points = curve.getPoints( 50 );\n  const mouthGeometry = new THREE.BufferGeometry().setFromPoints( points );\n\n\n  return (\n    <group position={[\n      0,\n      d3.randomNormal(-0.3, 0.1)(),\n      d3.randomNormal(0.7, 0.1)(),\n    ]}>\n      <mesh geometry={noseGeo} scale={[1, 1, 1.3]}>\n        <meshLambertMaterial attach=\"material\" color={color} />\n      </mesh>\n      <mesh geometry={noseballGeo} position={[\n        0,\n        0.1,\n        noseLength * 1.3\n        // d3.randomNormal(0.6, 0.1)(),\n      ]}>\n        <meshLambertMaterial attach=\"material\" color={\"#2f3640\"} />\n      </mesh>\n\n      <line geometry={mouthGeometry} position={[0, -0.1, noseLength]}>\n        <lineBasicMaterial attach=\"material\" color=\"#2f3640\" />\n      </line>\n    </group>\n  )\n}\n\nconst DogEyes = ({ color }) => {\n  const [eyeRadius, eyeGeo, eyeballGeo, eyeSpeckGeo, eyebrowGeo, eyebrowRotation, offset, eyeballX, eyeballY, groupY, groupZ] = useMemo(() => {\n    const eyeRadius = d3.randomNormal(0.25, 0.05)()\n    const eyeGeo = new THREE.SphereBufferGeometry(eyeRadius, 20, 20)\n    const eyeballGeo = new THREE.SphereBufferGeometry(eyeRadius * d3.randomNormal(0.5, 0.1)(), 20, 20)\n    const eyeSpeckGeo = new THREE.SphereBufferGeometry(d3.randomNormal(0.02, 0.005)(), 20, 20)\n    const eyebrowGeo = new THREE.SphereBufferGeometry(d3.randomNormal(0.16, 0.1)(), 20, 20)\n    const eyebrowRotation = d3.randomNormal(0, 0.6)()\n    const offset = d3.randomNormal(0.55, 0.05)()\n    const eyeballX = d3.randomNormal(0, 0.05)()\n    const eyeballY = d3.randomNormal(0, 0.05)()\n\n    const groupY = d3.randomNormal(0.36, 0.1)()\n    const groupZ = d3.randomNormal(1, 0.05)()\n    return [eyeRadius, eyeGeo, eyeballGeo, eyeSpeckGeo, eyebrowGeo, eyebrowRotation, offset, eyeballX, eyeballY, groupY, groupZ, groupY, groupZ]\n  }, [])\n\n  return (\n    <group position={[0, groupY, groupZ]}>\n      {_.times(2, i => (\n        <group key={i} position={[offset * (i ? 1 : -1), 0, 0]}>\n          <mesh\n            geometry={eyebrowGeo}\n            scale={[2, 1, 2]}\n            position={[(eyebrowRotation > 0 ? 0.3 : -0.3) * (i ? 1 : -1), 0.2, eyebrowRotation > 0 ? -0.4 : -0.2]}\n            rotation-z={eyebrowRotation * (i ? -1 : 1)}>\n            <meshLambertMaterial attach=\"material\" color={color} />\n          </mesh>\n          <mesh geometry={eyeGeo}>\n            <meshLambertMaterial attach=\"material\" color=\"#ffffff\" />\n          </mesh>\n          <mesh geometry={eyeballGeo} position={[\n            eyeballX,\n            eyeballY,\n            eyeRadius - (\n              Math.abs(eyeballX) + Math.abs(eyeballY)\n            ) / 2\n          ]}>\n            <meshLambertMaterial attach=\"material\" color=\"#353b48\" />\n          </mesh>\n          <mesh geometry={eyeSpeckGeo} position={[\n            eyeballX,\n            eyeballY,\n            eyeRadius - (\n              Math.abs(eyeballX) + Math.abs(eyeballY)\n            ) / 2 + 0.15\n          ]}>\n            <meshLambertMaterial attach=\"material\" color=\"white\" />\n          </mesh>\n        </group>\n      ))}\n    </group>\n  )\n}\n\nconst DogEars = ({ color }) => {\n  const [areDown, earRadius, earGeo, earRotation, offset, groupY, groupZ] = useMemo(() => {\n    const areDown = !!Math.round(Math.random())\n    const earRadius = d3.randomNormal(areDown ? 0.39 : 0.2, 0.1)()\n    const earGeo = new THREE.SphereBufferGeometry(earRadius, 20, 20)\n    const earRotation = d3.randomNormal(0, 2)()\n    const offset = d3.randomNormal(areDown ? 1.1 : 0.9, 0.1)()\n    const groupY = d3.randomNormal(0.5, 0.1)()\n    const groupZ = d3.randomNormal(-0.2, 0.05)()\n\n    return [areDown, earRadius, earGeo, earRotation, offset, groupY, groupZ]\n  }, [])\n\n  return (\n    <group position={[0, groupY, groupZ]}>\n      {_.times(2, i => (\n          <mesh\n            key={i}\n            geometry={earGeo}\n            scale={[2, areDown ? 0.5 : 1, 1.3]}\n            position={[\n              offset * (i ? -1 : 1),\n              areDown ? -0.8 :\n              0, 0\n            ]}\n            rotation-z={areDown\n              ? earRotation * i ?  1 : -1\n              : earRotation * i ? -1 :  1}>\n            <meshLambertMaterial attach=\"material\" color={color} />\n          </mesh>\n      ))}\n    </group>\n  )\n}\n\n\nconst DogStem = () => {\n  var geometry = new THREE.CylinderGeometry( 0.1, 0.1, 10, 32 );\n\n  return (\n    <mesh\n      position={[0, -4.3, 0]}\n      geometry={geometry}\n    >\n      <meshLambertMaterial attach=\"material\" color=\"#228c7b\" />\n    </mesh>\n  )\n}\n\nconst DogPetal = ({ color, ...props }) => {\n  // var curve = new THREE.EllipseCurve(0, 0, 3, 0.5, 0, Math.PI * 2, false, 0)\n  // var points = curve.getPoints( 50 )\n  // var geometry = new THREE.BufferGeometry().setFromPoints( points )\n\n  const puffFactor = d3.randomNormal(1.5, 0.3)()\n  const points = _.times(90 / 2, i => {\n      const rad = Math.PI * (i * 2) / 90\n\n      return new THREE.Vector3(\n        (1.72 + 0.08 * Math.cos(rad))\n          * (Math.sin(rad)\n          * 1.6),\n        - Math.cos(rad)\n          * puffFactor,\n          1.01\n      )\n    })\n\n    const geometry = new THREE.LatheBufferGeometry( points, 32 );\n\n  return (\n    <mesh {...props}\n      // position={[0, -4.3, 0]}\n      geometry={geometry}\n      scale={[1, 1, 0.2]}\n      rotation-x={-0.2}\n      position-z={-0.7}\n    >\n      <meshLambertMaterial side={THREE.DoubleSide} attach=\"material\" color={color} opacity={0.9} transparent />\n    </mesh>\n  )\n}\n\n\nfunction getPointFromAngleAndDistance(angle, distance) {\n  return {\n    x: Math.round(Math.cos(angle * Math.PI / 180) * distance),\n    y: Math.round(Math.sin(angle * Math.PI / 180) * distance),\n  }\n}"],"sourceRoot":""}