{"version":3,"sources":["components/Blog/posts/LearnD3/LearnD3Animation.jsx","components/_ui/Expandy/Expandy.jsx","components/_ui/InlineExpandy/InlineExpandy.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","d3__WEBPACK_IMPORTED_MODULE_2__","components_ui_Aside_Aside__WEBPACK_IMPORTED_MODULE_3__","components_ui_Link_Link__WEBPACK_IMPORTED_MODULE_6__","components_ui_Icon_Icon__WEBPACK_IMPORTED_MODULE_7__","components_ui_List_List__WEBPACK_IMPORTED_MODULE_8__","components_ui_Code_Code__WEBPACK_IMPORTED_MODULE_9__","_LearnD3__WEBPACK_IMPORTED_MODULE_10__","images_book_png__WEBPACK_IMPORTED_MODULE_11__","images_book_png__WEBPACK_IMPORTED_MODULE_11___default","LearnD3Animation","_ref","onScrollToSectionLocal","a","createElement","className","CircleExample","repo","id","to","onClick","doWrap","colorMethods","map","d","i","key","style","margin","textAlign","ColorShift","from","undefined","interpolation","items","Fragment","name","size","viewBox","width","height","cx","cy","fill","fileName","canEval","src","bookImage","alt","href","color","autoplay","loop","muted","type","_ref2","_ref2$from","_ref2$to","interpolator","d3","steps","step","background","Number","isFinite","concat","Expandy","trigger","triggerExpandText","doHideIfCollapsed","children","props","Object","_Users_linying_codespace_Lyzzz_s_Blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","_useState","useState","_useState2","_Users_linying_codespace_Lyzzz_s_Blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isExpanded","setIsExpanded","ref","useRef","react__WEBPACK_IMPORTED_MODULE_2___default","assign","onToggle","e","target","open","components_ui_Tooltip_Tooltip__WEBPACK_IMPORTED_MODULE_4__","contents","components_ui_Icon_Icon__WEBPACK_IMPORTED_MODULE_3__","direction","InlineExpandy","description"],"mappings":"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","file":"static/js/62.1da97117.chunk.js","sourcesContent":["import React, { useMemo, useState } from \"react\"\nimport { Twemoji } from \"react-emoji-render\"\nimport * as d3 from \"d3\"\n\nimport Aside from \"components/_ui/Aside/Aside\"\nimport Expandy from \"components/_ui/Expandy/Expandy\"\nimport InlineExpandy from \"components/_ui/InlineExpandy/InlineExpandy\"\nimport Link from \"components/_ui/Link/Link\"\nimport Icon from \"components/_ui/Icon/Icon\"\nimport List from \"components/_ui/List/List\"\nimport Code from \"components/_ui/Code/Code\"\nimport { DocsLink, ReadMore, P } from \"./LearnD3\"\nimport bookImage from \"images/book.png\";\n\nconst LearnD3Animation = ({ onScrollToSectionLocal }) => {\n\n    return (\n        <div className=\"LearnD3Animation\">\n            <p>\n              While data visualizations have been displayed on static mediums for hundreds of years, we now have an amazing opportunity when we visualize data in a web browser. There is something really compelling about \"replaying\" events, as we've seen with the mass popularity of bar chart races this past year.\n            </p>\n\n            <p>\n              But even if we're comvinced that we <i>want</i> our data visualization to animate, it can be technically difficult. Let's talk about the various d3 modules that can help out.\n            </p>\n\n            <h3>d3-interpolate</h3>\n\n            <p>\n              To animate a property from <b>point A</b> to <b>point B</b>, we need to create a series of states, smoothly interpolating between them. For example, to smoothly animate a blue circle changing into a green circle, we need to show the circle as blue, then blue-green, then green.\n            </p>\n\n            <CircleExample />\n\n            <p>\n              To create these in-between steps, we can use <DocsLink repo=\"interpolate\" id=\"interpolate\" />, which takes two parameters: <b>point A</b> and <b>point B</b>.\n            </p>\n\n            <p>\n              <DocsLink repo=\"interpolate\" id=\"interpolate\" /> uses different methods (which are also surfaced), depending on the type of value of <b>point B</b>. For example, if <b>point B</b> is a number, it will use <DocsLink repo=\"interpolate\" id=\"interpolateNumber\" /> and if <b>point B</b> is a date, it will use <DocsLink repo=\"interpolate\" id=\"interpolateDate\" />.\n            </p>\n\n            <Aside>\n              Learn more about handling date times in the <Link to=\"#\" onClick={onScrollToSectionLocal(\"dealing-with-datetimes\")}>datetimes section</Link>.\n            </Aside>\n\n            <Code>\n{`const interpolator = d3.interpolate(0, 100)\ninterpolator(0  ) // 0\ninterpolator(0.5) // 50\ninterpolator(1  ) // 100`}\n            </Code>\n\n            <p>\n              If we wanted to list out a number of steps, we could pass our interpolator to <DocsLink repo=\"interpolate\" id=\"quantize\" />, along with the number of steps that we wanted:\n            </p>\n\n            <Code doWrap={false}>\n{`const interpolator = d3.interpolate(0, 100)\nconst steps = d3.quantize(interpolator, 11)\n// steps = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]`}\n            </Code>\n\n            <p>\n              For animating colors, we can even specify the color space we want to work in with:\n            </p>\n\n            {colorMethods.map((d,i) => (\n              <div key={d} style={{\n                margin: \"1em 0 2em\",\n                textAlign: \"center\",\n              }}>\n                <DocsLink repo=\"time\" id={d}>{ d }</DocsLink>\n                <ColorShift\n                  from={d == \"interpolateHue\" ? 248 : undefined}\n                  to={d == \"interpolateHue\" ? 51 : undefined}\n                  interpolation={d}\n                />\n              </div>\n            ))}\n\n            <p>\n              We can add <b>Long</b> to most of these methods to specify for our interpolator to take the <i>longer route</i>, eg <DocsLink repo=\"time\" id=\"interpolateHclLong\" />\n            </p>\n\n            {[\"interpolateHcl\", \"interpolateHclLong\"].map((d,i) => (\n              <div key={d} style={{\n                margin: \"1em 0 2em\",\n                textAlign: \"center\",\n              }}>\n                <DocsLink repo=\"time\" id={d}>{ d }</DocsLink>\n                <ColorShift\n                  from={d == \"interpolateHue\" ? 248 : undefined}\n                  to={d == \"interpolateHue\" ? 51 : undefined}\n                  interpolation={d}\n                />\n              </div>\n            ))}\n\n<Aside>\n  Learn more about handling colors in the <Link to=\"#\" onClick={onScrollToSectionLocal(\"dealing-with-colors\")}>colors section</Link>.\n</Aside>\n\n            <p>\n              We can even get fancier with <DocsLink repo=\"interpolate\" id=\"splines\">spline</DocsLink> and <DocsLink repo=\"interpolate\" id=\"piecewise\">piecewise</DocsLink> interpolators.\n            </p>\n\n            <ReadMore id=\"interpolate\" />\n\n            <p>\n              We don't even need to use <DocsLink repo=\"interpolate\" /> directly -- we can use <DocsLink repo=\"transition\" /> to create our animations.\n            </p>\n\n            <h3>d3-transition</h3>\n\n            <p>\n              We can create a <b>d3 transition</b> in two ways:\n            </p>\n\n            <List items={[\n              <>\n                on the document's <b>root element</b> using <DocsLink repo=\"transition\" id=\"transition\" />, or\n              </>,\n              <>\n                on a <b>d3 selection</b> using a <b>d3 selection</b>'s <DocsLink repo=\"transition\" id=\"selection_transition\">.transition()</DocsLink> method\n                <Aside>\n                  Read about <b>d3 selection</b>s in the <Link to=\"#\" onClick={onScrollToSectionLocal(\"manipulating-the-dom\")}>manipulating the DOM section</Link>\n                </Aside>\n              </>,\n            ]} />\n\n            <p>\n              If we create the transition on a <b>d3 selection</b>, we can use the transition's <DocsLink repo=\"transition\" id=\"transition_attr\">.attr()</DocsLink> (to change a HTML attribute) or <DocsLink repo=\"transition\" id=\"transition_style\">.style()</DocsLink> method (to change a CSS style) to animate a value.\n            </p>\n\n            <p>\n              For example, we can animate a <P>{`<circle>`}</P>'s position like so:\n            </p>\n\n            <Aside>\n              Run the animation by pressing the <Icon name=\"play\" size=\"xs\" /> icon.\n            </Aside>\n\n            <svg viewBox=\"0 0 550 100\" width=\"550\" height=\"100\">\n              <circle id=\"circle\" cx=\"50\" cy=\"50\" r=\"40\" fill=\"cornflowerblue\" />\n            </svg>\n\n            <Code fileName=\"transition.js\" canEval>\n{`d3.select(\"#circle\")\n    .attr(\"cx\", 50)\n  .transition()\n    .attr(\"cx\", 500)`}\n            </Code>\n\n            <p>\n              We can tweak the timing of our <P>{`<circle>`}</P>'s transition using its <DocsLink repo=\"transition\" id=\"transition_delay\">.delay()</DocsLink> and <DocsLink repo=\"transition\" id=\"transition_duration\">.duration()</DocsLink> methods.\n            </p>\n\n            <svg viewBox=\"0 0 550 100\" width=\"550\" height=\"100\">\n              <circle id=\"circle2\" cx=\"50\" cy=\"50\" r=\"40\" fill=\"cornflowerblue\" />\n            </svg>\n\n            <Code fileName=\"transition.js\" canEval>\n{`d3.select(\"#circle2\")\n    .attr(\"cx\", 50)\n  .transition()\n    .delay(500)\n    .duration(2000)\n    .attr(\"cx\", 500)`}\n            </Code>\n\n            <p>\n              We can animate multiple properties of our <P>{`<circle>`}</P> with the same transition:\n            </p>\n\n            <svg viewBox=\"0 0 550 100\" width=\"550\" height=\"100\">\n              <circle id=\"circle3\" cx=\"50\" cy=\"50\" r=\"40\" fill=\"cornflowerblue\" />\n            </svg>\n\n            <Code fileName=\"transition.js\" canEval>\n{`d3.select(\"#circle3\")\n    .attr(\"cx\", 50)\n    .style(\"fill\", \"cornflowerblue\")\n  .transition()\n    .delay(500)\n    .duration(2000)\n    .attr(\"cx\", 500)\n    .style(\"fill\", \"lavender\")`}\n            </Code>\n\n            <p>\n              We can even easily start another transition once our first transition is finished:\n            </p>\n\n            <svg viewBox=\"0 0 550 100\" width=\"550\" height=\"100\">\n              <circle id=\"circle4\" cx=\"50\" cy=\"50\" r=\"40\" fill=\"cornflowerblue\" />\n            </svg>\n\n            <Code fileName=\"transition.js\" canEval>\n{`d3.select(\"#circle4\")\n    .attr(\"cx\", 50)\n    .style(\"fill\", \"cornflowerblue\")\n  .transition()\n    .delay(500)\n    .duration(2000)\n    .attr(\"cx\", 500)\n  .transition()\n    .duration(1000)\n    .style(\"fill\", \"lavender\")\n  .transition()\n    .duration(1000)\n    .attr(\"cx\", 50)\n    .style(\"fill\", \"cornflowerblue\")`}\n            </Code>\n\n            <h3>d3-ease</h3>\n\n            <p>\n              Our transitions don't have to interpolate linearly from <b>point A</b> to <b>point B</b>. <DocsLink repo=\"ease\" /> is an entire d3 module that suppies different easing functions, which can be used to give your animations more personality.\n            </p>\n\n            <p>\n              To use these easing functions, we can pass them to our transition's <DocsLink repo=\"transition\" id=\"transition_ease\">.ease()</DocsLink> method.\n            </p>\n\n\n            <svg viewBox=\"0 0 550 100\" width=\"550\" height=\"100\">\n              <circle id=\"circle5\" cx=\"50\" cy=\"50\" r=\"40\" fill=\"cornflowerblue\" />\n            </svg>\n\n            <Code fileName=\"transition.js\" canEval>\n{`d3.select(\"#circle5\")\n    .attr(\"cx\", 50)\n    .style(\"fill\", \"cornflowerblue\")\n  .transition()\n    .delay(500)\n    .duration(2000)\n    .ease(d3.easeBounce)\n    .attr(\"cx\", 500)\n  .transition()\n    .duration(1000)\n    .ease(d3.easeElasticInOut)\n    .style(\"fill\", \"lavender\")\n  .transition()\n    .duration(1000)\n    .ease(d3.easeBounceOut)\n    .attr(\"cx\", 50)\n    .style(\"fill\", \"cornflowerblue\")`}\n            </Code>\n\n            <ReadMore id=\"ease\" />\n\n            <p>\n              This is really the tip of the iceberg for animating data visualizations. <DocsLink repo=\"transition\" /> might not even be what you use -- for example, I'll often use <Link to=\"https://www.react-spring.io\">react-spring</Link> if I'm creating a data visualization using a javascript framework like <Link to=\"http://reactjs.org\">React.js</Link>.\n            </p>\n\n            <Aside className=\"LearnD3__promo\">\n                <img src={bookImage} alt=\"book\" className=\"LearnD3__promo__img\"/>\n                    <div className=\"LearnD3__promo__text\">\n                    <p>\n                        There are many ways to animate elements in the web browser.\n                    </p>\n                    Learn about the different methods and do a deeper dive into <b>d3 transitions</b> in the <Link href=\"http://fullstack.io/fullstack-d3\"><b>Fullstack D3 and Data Visualization</b></Link> book.\n                </div>\n            </Aside>\n\n            <ReadMore id=\"transition\" />\n\n            <h3>d3-timer</h3>\n\n            <p>\n              Great! Now we know how to create animated transitions between two states, but how do we create a constantly running animation?\n            </p>\n\n            <p>\n              <DocsLink repo=\"timer\" id=\"timer\" /> will call a callback function continuously, passing it the milliseconds that have elapsed since initialization.\n            </p>\n\n            <p>\n              For example, it has been <P><span id=\"elapsed\">-</span></P> millseconds have passed since you last pressed <Icon name=\"play\" size=\"s\" style={{color: \"#bdbdcf\"}} />.\n            </p>\n\n            <Code fileName=\"timer.js\" canEval>\n{`const timer = d3.timer(elapsed => {\n  d3.select(\"#elapsed\")\n    .html(Math.round(elapsed))\n  if (elapsed > 10000) timer.stop()\n})`}\n            </Code>\n\n            <p>\n              Note that we can use <DocsLink repo=\"timer\" id=\"stop\" /> to stop our timer after a certain amount of time.\n            </p>\n\n            <p>\n              We can also execute a callback once, after a certain amount of time using <DocsLink repo=\"timer\" id=\"timeout\" />, and on an interval using <DocsLink repo=\"timer\" id=\"interval\" />.\n            </p>\n\n            <p>\n              While there are native javascript methods for creating intervals, timeouts, and timers, <DocsLink repo=\"timer\" /> has some performance enhancements (using <Link to=\"https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame\"><P>requestAnimationFrame</P></Link>) and won't run when the user's tab isn't open.\n            </p>\n\n            <ReadMore id=\"timer\" />\n\n            <video autoplay=\"\" loop={true} muted={true}>\n                <source src=\"https://video.twimg.com/tweet_video/D6nGU_gWwAAGek8.mp4\" type=\"video/mp4\" />\n            </video>\n            <Aside className=\"LearnD3__promo\">\n                <img src={bookImage} alt=\"book\" className=\"LearnD3__promo__img\"/>\n                  <div className=\"LearnD3__promo__text\">\n                    The Advanced version of <Link href=\"http://fullstack.io/fullstack-d3\"><b>Fullstack D3 and Data Visualization</b></Link> does a comprehensive walk-through of the animated simulation above.\n                </div>\n            </Aside>\n\n        </div>\n    )\n}\n\nexport default LearnD3Animation\n\nconst colorMethods = [\n  \"interpolateRgb\",\n  \"interpolateHsl\",\n  \"interpolateLab\",\n  \"interpolateHcl\",\n  \"interpolateCubehelix\",\n  \"interpolateHue\",\n]\n\nconst CircleExample = () => (\n  <div className=\"CircleExample\" />\n)\n\nconst ColorShift = ({\n  from=\"slateblue\",\n  to=\"gold\",\n  interpolation,\n}) => {\n  const interpolator = d3[interpolation](from, to)\n  const steps = d3.quantize(interpolator, 10)\n  return (\n    <div className=\"ColorShift\">\n      {steps.map((step,i) => (\n        <div\n          key={i}\n          className=\"ColorShift__circle\"\n          style={{\n            background: Number.isFinite(step) ? `hsl(${step}, 100%, 50%)` : step,\n          }}\n        />\n      ))}\n    </div>\n  )\n}","import React, { useState, useRef } from 'react'\nimport Icon from \"components/_ui/Icon/Icon\";\nimport Tooltip from \"components/_ui/Tooltip/Tooltip\";\nimport { scrollTo } from \"utils.js\"\n\nimport './Expandy.scss';\n\nconst Expandy = ({ trigger, triggerExpandText, doHideIfCollapsed=false, className, children, ...props }) => {\n    const [isExpanded, setIsExpanded] = useState(false)\n    const ref = useRef()\n\n    // const onToggleExpanded = () => {\n    //     setIsExpanded(!isExpanded)\n\n    //     if (isExpanded) {\n    //         const top = ref.current.getBoundingClientRect().top\n    //         if (top > window.innerHeight * 0.3) return\n    //         const y = top\n    //             + window.scrollY\n    //             - window.innerHeight * 0.3\n    //         scrollTo(y, 600)\n    //     }\n    // }\n\n    return (\n        <details className={`Expandy Expandy--is-${isExpanded ? \"expanded\" : \"collapsed\"} ${className}`} {...props} ref={ref}\n            onToggle={e => {\n                const isExpanded = e.target.open\n                setIsExpanded(isExpanded)\n        }}>\n            <summary>\n            <div className=\"Expandy__trigger button-no-appearance\" >\n                <div className=\"Expandy__trigger__text\">\n                    <b>{ trigger }</b>\n                    <div className=\"Expandy__trigger__info\">\n                        { triggerExpandText || `tap me ${isExpanded ? \"to hide\" : \"for more\" } details` }\n                    </div>\n                </div>\n                <div className=\"Expandy__trigger__mark\">ἰ</div>\n            </div>\n\n            <Tooltip\n                className=\"Expandy__toggle\"\n                contents={<button className=\"button-no-appearance\">{isExpanded ? \"Collapse me\" : \"Expand me\"}</button>}\n                >\n                <div className=\"Expandy__toggle__arrow Expandy__toggle__arrow--up\">\n                    <Icon name=\"arrow\" direction=\"n\" size=\"s\" />\n                </div>\n                <div className=\"Expandy__toggle__arrow Expandy__toggle__arrow--down\">\n                    <Icon name=\"arrow\" direction=\"s\" size=\"s\" />\n                </div>\n                </Tooltip>\n                </summary>\n            <div className=\"Expandy__contents\">\n                {children }\n            </div>\n        </details>\n    )\n}\n\nexport default Expandy\n","import React, { useState, useRef } from 'react'\nimport Icon from \"components/_ui/Icon/Icon\"\n\nimport './InlineExpandy.scss';\n\nconst InlineExpandy = ({ description, className, children, ...props }) => {\n    const [isExpanded, setIsExpanded] = useState(false)\n\n    const onToggleExpanded = () => {\n        setIsExpanded(!isExpanded)\n    }\n\n    return (\n        <div className={`InlineExpandy InlineExpandy--is-${isExpanded ? \"expanded\" : \"collapsed\"} ${className}`} {...props}>\n            <div className=\"InlineExpandy__trigger\" onClick={onToggleExpanded}>\n                { isExpanded ? \"Hide\" : \"Show\" } { description }...\n            </div>\n\n            {isExpanded && (\n                <div className=\"InlineExpandy__contents\">\n                    { children }\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default InlineExpandy\n"],"sourceRoot":""}