{"version":3,"sources":["components/Portfolio/Images/state-of-js.png","components/Portfolio/Images/js-tools.png","components/Portfolio/Images/lunar-missions.png","components/Blog/posts/D3AndReact/CreatingSVGElements.jsx","components/Blog/posts/D3AndReact/CreatingManySVGElements.jsx","components/Blog/posts/D3AndReact/Axes.jsx","components/Blog/posts/D3AndReact/Sizing.jsx","components/Blog/posts/D3AndReact/Maps.jsx","components/Blog/posts/D3AndReact/examples.jsx","components/Blog/posts/D3AndReact/Complex.jsx","components/Blog/posts/D3AndReact/D3AndReact.jsx","components/_ui/Expandy/Expandy.jsx","../node_modules/@juggle/resize-observer/lib/utils/global.js","../node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js","../node_modules/@juggle/resize-observer/lib/utils/scheduler.js","../node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js","../node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js","../node_modules/@juggle/resize-observer/lib/utils/element.js","../node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js","../node_modules/@juggle/resize-observer/lib/ResizeObservation.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js","../node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js","../node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js","../node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js","../node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverController.js","../node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js","../node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js","../node_modules/@juggle/resize-observer/lib/ResizeObserver.js","components/_ui/Chart/utils/utils.js","components/_ui/Blockquote/Blockquote.jsx","components/Portfolio/Images/fishing.png"],"names":["module","exports","__webpack_require__","p","CreatingSVGElements","react_default","a","createElement","className","Aside","Link","to","examples_P","examples_CodeAndExample","code","SvgCode","hasLineNumbers","fileName","example","setHighlightedMarker","Fragment","CreatingSVGElements_Svg","style","background","padding","color","CircleWithD3Code","markers","theme","getHighlightedMarkerProps","CreatingSVGElements_CircleWithD3","List","items","hasNumbers","Blockquote","source","CircleCode","CreatingSVGElements_Circle","Svg","border","Circle","cx","cy","r","CircleWithD3","ref","useRef","useEffect","svgElement","d3","current","console","log","append","attr","CreatingManySVGElements","_useState","useState","generateDataset","_useState2","Object","slicedToArray","dataset","setDataset","Expandy","trigger","generateDatasetCode","Button","position","right","top","onClick","paddingTop","fontFamily","whiteSpace","fontSize","lineHeight","margin","map","_ref","i","_ref2","x","y","key","paddingLeft","display","width","textAlign","format","Code","doWrap","CirclesWithD3Code","CreatingManySVGElements_CirclesWithD3","kto","CirclesWithReactCode","CreatingManySVGElements_CirclesWithReact","TransitionsWithD3Code","size","CreatingManySVGElements_TransitionsWithD3","fontWeight","TransitionsWithReactCode","CreatingManySVGElements_TransitionsWithReact","Array","fill","Math","random","CirclesWithD3","_useIsInView","useIsInView","_useIsInView2","isInView","_useState3","_useState4","useInterval","selectAll","data","join","d","viewBox","arguments","length","undefined","_useState5","_useState6","isIntersecting","setIntersecting","observer","IntersectionObserver","_ref3","entry","rootMargin","observe","unobserve","CirclesWithReact","_useIsInView3","_useIsInView4","_useState7","_useState8","_ref5","_ref6","allCircles","range","generateCircles","filter","TransitionsWithD3","_useIsInView5","_useIsInView6","_useState9","_useState10","enter","call","transition","duration","update","exit","remove","TransitionsWithReact","_useIsInView7","_useIsInView8","_useState11","_useState12","CreatingManySVGElements_TransitionsWithReactCircle","index","isShowing","includes","TransitionsWithReactCircle","_ref7","wasShowing","useSpring","config","opacity","web","circle","assign","Axes","ChartAxisCode","Axes_Axis","ChartAxisReactCode","Axes_ChartAxisReact","Axes_AxisPlayground","AxisPlayground","domain0","setDomain0","domain1","setDomain1","range0","setRange0","range1","setRange1","ChartAxisReactComponentCode","value","onChange","e","target","type","Axes_ChartAxisReactComponent","domain","Axis","xScale","axisGenerator","height","ChartAxisReact","ticks","useMemo","xOffset","stroke","transform","concat","y2","textAnchor","ChartAxisReactComponent","_ref2$domain","_ref2$range","numberOfTicksTarget","max","floor","overflow","Sizing","marginTop","marginRight","marginBottom","marginLeft","settings","setSettings","settingsKeysLength","keys","pickBy","identity","Sizing_Terminology","flex","Sizing_Term","name","getSizingCode","Slider_default","min","objectSpread2","defineProperty","Icon","cursor","Number","isFinite","Sizing_ChartWithDimensions","useChartDimensionsCode","triggerExpandText","combineChartDimensionsCode","href","JSON","stringify","combineChartDimensions","dimensions","parsedDimensions","boundedHeight","boundedWidth","ChartWithDimensions","_useChartDimensions","passedSettings","setWidth","setHeight","element","resizeObserver","ResizeObserver","entries","isArray","contentRect","newSettings","useChartDimensions","_useChartDimensions2","dms","Terminology","side","Term","_ref2$name","Maps","projectionName","setProjectionName","projectionOptions","projectionOption","Maps_MapExample","MapExampleCode","toConsumableArray","Maps_DocsLink","id","MapExample","_ref$projectionName","sphere","projection","d3GeoProjection","fitWidth","pathGenerator","_pathGenerator$bounds","bounds","_pathGenerator$bounds2","_pathGenerator$bounds3","_pathGenerator$bounds4","clipPath","countryShapes","features","shape","properties","subunit","DocsLink","_ref3$repo","repo","children","sections","src","fishingImg","stateOfJsImg","jsToolsImg","lunarMissionsImg","label","_ref2$","Component","slug","kebabCase","P","props","objectWithoutProperties","CodeAndExample","_ref4","highlightedLines","_ref4$hasLineNumbers","highlightedMarker","hoveredMarker","setHoveredMarker","doScrollWrapper","window","innerWidth","onMouseEnter","onMouseLeave","D3AndReact","setHighlightedLines","initialExpandedSteps","setInitialExpandedSteps","setCode","_useHash","useHash","_useHash2","hash","setHash","removedLines","setRemovedLines","insertedLines","onSetHash","newHash","preventDefault","elem","document","getElementById","getBoundingClientRect","documentElement","scrollTop","scrollTo","scrollingElem","scrollingElement","debouncedOnStopScrolling","debounce","classList","onScroll","contains","add","addEventListener","removeEventListener","Helmet","charSet","rel","property","content","metaImage","D3AndReact_HeaderBackground","ScrollEvent","isInViewChange","hasIndicator","d3Example","gradients","heightOfBackground","getPath","area","y0","y1","curve","curveBasis","times","abs","numberOfWiggles","randomNormal","springConfig","HeaderBackground","gradientIds","uniqueId","_useState13","_useState14","path1","setPath1","_useState15","_useState16","path2","setPath2","_useState17","_useState18","path3","setPath3","spring1","spring2","spring3","preserveAspectRatio","colors","gradientIndex","colorIndex","stopColor","offset","path","doHideIfCollapsed","_Users_linying_codespace_Lyzzz_s_Blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","_Users_linying_codespace_Lyzzz_s_Blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isExpanded","setIsExpanded","react__WEBPACK_IMPORTED_MODULE_2___default","onToggle","open","components_ui_Tooltip_Tooltip__WEBPACK_IMPORTED_MODULE_4__","contents","components_ui_Icon_Icon__WEBPACK_IMPORTED_MODULE_3__","direction","ResizeObserverBoxOptions","global","queueMicroTask_callbacks","queueMicroTask","callback","el_1","createTextNode","MutationObserver","splice","forEach","cb","characterData","textContent","push","observerConfig","attributes","childList","subtree","events","scheduled","scheduler","Scheduler","_this","this","stopped","listener","schedule","prototype","run","frames","elementsHaveResized","ResizeObserverController_process","isWatching","start","requestAnimationFrame","stop","body","disconnect","DOMRectReadOnly","left","bottom","freeze","fromRect","rectangle","isSVG","SVGElement","isHidden","_a","getBBox","_b","offsetWidth","offsetHeight","getClientRects","cache","Map","scrollRegexp","verticalRegexp","IE","test","navigator","userAgent","parseDimension","pixel","parseFloat","calculateBoxSize_size","inlineSize","blockSize","switchSizes","zeroBoxes","borderBoxSize","contentBoxSize","calculateBoxSize_calculateBoxSizes","has","get","set","cs","getComputedStyle","svg","removePadding","boxSizing","writingMode","canScrollVertically","overflowY","canScrollHorizontally","overflowX","paddingRight","paddingBottom","borderTop","borderTopWidth","borderRight","borderRightWidth","borderBottom","borderBottomWidth","horizontalPadding","verticalPadding","horizontalBorderArea","borderLeftWidth","verticalBorderArea","horizontalScrollbarThickness","clientHeight","verticalScrollbarThickness","clientWidth","widthReduction","heightReduction","contentWidth","contentHeight","borderBoxWidth","borderBoxHeight","boxes","calculateBoxSize_calculateBoxSize","observedBox","BORDER_BOX","ResizeObservation_ResizeObservation","ResizeObservation","CONTENT_BOX","lastReportedSize","isActive","tagName","isReplacedElement","ResizeObserverDetail","activeTargets","skippedTargets","observationTargets","msg","ResizeObserverEntry_ResizeObserverEntry","calculateDepthForNode_calculateDepthForNode","node","Infinity","depth","parent","parentNode","broadcastActiveObservations_broadcastActiveObservations","shallowestDepth","callbacks","resizeObservers","ro","ot","targetDepth","_i","callbacks_1","gatherActiveObservationsAtDepth_gatherActiveObservationsAtDepth","clear","observerMap","watching","ResizeObserverController_updateCount","n","getObservationIndex","some","event","ErrorEvent","message","createEvent","initEvent","dispatchEvent","deliverResizeLoopError","ResizeObserverController_ResizeObserverController","ResizeObserverController","connect","detail","options","box","indexOf","delete","ResizeObserver_ResizeObserver","TypeError","Element","toString","__webpack_exports__","PropTypes","number","_Users_linying_codespace_Lyzzz_s_Blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__","changeWidth","changeHeight","_ref$isQuote","isQuote","_Users_linying_codespace_Lyzzz_s_Blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default"],"mappings":"2rhpHAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wPCkLzBC,EAtKa,WAC1B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,iFACwE,IACtEF,EAAAC,EAAAC,cAAA,gBAFF,+EAIEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,8BACwBJ,EAAAC,EAAAC,cAAA,gBADxB,OAEEF,EAAAC,EAAAC,cAAA,WAFF,gBAGgB,IACdF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,qDAAT,mBAJF,mBAOmB,IACjBN,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,+BAAT,+CARF,MAcFN,EAAAC,EAAAC,cAAA,iDACuCF,EAAAC,EAAAC,cAACK,GAAD,cADvC,aAIAP,EAAAC,EAAAC,cAACM,GAAD,CACEC,KAAMC,EACNC,gBAAgB,EAChBC,SAAS,UACTC,QAAS,SAACC,GAAD,OACPd,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACEf,EAAAC,EAAAC,cAACc,EAAD,MACAhB,EAAAC,EAAAC,cAACE,EAAA,EAAD,qBACgB,IACdJ,EAAAC,EAAAC,cAAA,QACEe,MAAO,CACLC,WAAY,OACZC,QAAS,cACTC,MAAO,kBAJX,QAQQ,IAVV,4BAW2BpB,EAAAC,EAAAC,cAACK,GAAD,cAX3B,iBAiBNP,EAAAC,EAAAC,cAAA,yCAEAF,EAAAC,EAAAC,cAAA,sHAEqC,IACnCF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,mEACPN,EAAAC,EAAAC,cAACK,GAAD,kBAJJ,KASAP,EAAAC,EAAAC,cAACM,GAAD,CACEC,KAAMY,EACNC,QAAS,CAAC,CAAC,EAAG,IAAK,CAAC,EAAG,IAAK,CAAC,GAAI,CAAC,EAAG,EAAG,EAAG,IAC3CV,SAAS,0BACTW,MAAM,QACNV,QAAS,SAACW,GAAD,OACPxB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACEf,EAAAC,EAAAC,cAACuB,EAAD,MAEAzB,EAAAC,EAAAC,cAAA,iDACAF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEvB,UAAU,0BACVwB,MAAO,CACL3B,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,UACSxB,EAAAC,EAAAC,cAACK,GAAD,YADT,wCACyD,IACvDP,EAAAC,EAAAC,cAACK,GAAD,cAFF,YAIAP,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,0CAGAxB,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,QACOxB,EAAAC,EAAAC,cAACK,GAAD,oBADP,gBACsCP,EAAAC,EAAAC,cAACK,GAAD,YADtC,UACwD,IACtDP,EAAAC,EAAAC,cAAA,iCAEFF,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,YACWxB,EAAAC,EAAAC,cAAA,gCADX,OACyCF,EAAAC,EAAAC,cAACK,GAAD,eADzC,KACyD,IACvDP,EAAAC,EAAAC,cAACK,GAAD,iBAFF,aAKFqB,YAAU,QAMlB5B,EAAAC,EAAAC,cAAA,kHAEkCF,EAAAC,EAAAC,cAAA,gBAFlC,+BAKAF,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CACEC,OACE9B,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,mEAAT,mBAFJ,iEAUAN,EAAAC,EAAAC,cAAA,4BACkBF,EAAAC,EAAAC,cAAA,gBADlB,6CACuE,IACrEF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,sDAAT,aAFF,iCAKgCN,EAAAC,EAAAC,cAACK,GAAD,iBALhC,6BASAP,EAAAC,EAAAC,cAACM,GAAD,CACEC,KAAMsB,EACNpB,gBAAgB,EAEhBC,SAAS,6BACTC,QAAS,SAACC,GAAD,OAA0Bd,EAAAC,EAAAC,cAAC8B,EAAD,SAGrChC,EAAAC,EAAAC,cAAA,6FAKAF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEC,MAAO,CACL3B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACEf,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,wBADF,eACgCF,EAAAC,EAAAC,cAAA,wBAEhCF,EAAAC,EAAAC,cAAA,WAJF,sBAKqBF,EAAAC,EAAAC,cAAA,iBALrB,+BAK4DF,EAAAC,EAAAC,cAAA,gBAAW,IALvE,eAQAF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACEf,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,WAFF,cAGaF,EAAAC,EAAAC,cAACK,GAAD,eAHb,oFAMAP,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACEf,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,WAFF,+LAK4D,IAC1DF,EAAAC,EAAAC,cAAA,oBANF,4IAaJF,EAAAC,EAAAC,cAAA,iFAOA+B,EAAM,WACV,OAAOjC,EAAAC,EAAAC,cAAA,OAAKe,MAAO,CAAEiB,OAAQ,qBAGzBC,EAAS,WACb,OACEnC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQkC,GAAG,MAAMC,GAAG,KAAKC,EAAE,SAK3BC,EAAe,WACnB,IAAMC,EAAMC,mBAQZ,OANAC,oBAAU,WACR,IAAMC,EAAaC,SAAUJ,EAAIK,SACjCC,QAAQC,IAAIJ,GACZA,EAAWK,OAAO,UAAUC,KAAK,KAAM,KAAKA,KAAK,KAAM,IAAIA,KAAK,IAAK,KACpE,IAEIjD,EAAAC,EAAAC,cAAA,OAAKsC,IAAKA,KAGN9B,EAAO,wGAQPW,EAAgB,iSAkBhBU,EAAU,iKCgIRmB,EAtViB,WAAM,IAAAC,EACNC,mBAASC,KADHC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAC7BM,EAD6BH,EAAA,GACpBI,EADoBJ,EAAA,GAGpC,OACEtD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,iDACuCF,EAAAC,EAAAC,cAAA,yCADvC,IAGEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,2FAEmB,IACjBJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,+CAAT,iBAEQ,IALV,iCAMiC,IAC/BN,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,mCAAT,uCAPF,MAcFN,EAAAC,EAAAC,cAAA,kDACwCF,EAAAC,EAAAC,cAACK,GAAD,eADxC,iBAIAP,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAASC,QAAQ,oCACf5D,EAAAC,EAAAC,cAAA,4BACkBF,EAAAC,EAAAC,cAACK,GAAD,0BADlB,iDAKAP,EAAAC,EAAAC,cAACM,GAAD,CACEC,KAAMoD,EACNlD,gBAAgB,EAChBE,QAAS,SAACW,GAAD,OACPxB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACEf,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CACE7C,MAAO,CACL8C,SAAU,WACVC,MAAO,MACPC,IAAK,UAEPC,QAAS,kBAAMR,EAAWL,OAN5B,oBAWArD,EAAAC,EAAAC,cAAA,OACEe,MAAO,CACLkD,WAAY,MACZC,WAAY,YACZC,WAAY,WACZC,SAAU,QACVC,WAAY,QACZpD,QAAS,YACTqD,OAAQ,WACRtD,WAAY,UAGdlB,EAAAC,EAAAC,cAAA,gBACCuD,EAAQgB,IAAI,SAAAC,EAASC,GAAT,IAAAC,EAAArB,OAAAC,EAAA,EAAAD,CAAAmB,EAAA,GAAEG,EAAFD,EAAA,GAAKE,EAALF,EAAA,UACX5E,EAAAC,EAAAC,cAAA,OACE6E,IAAKJ,EACL1D,MAAO,CACL+D,YAAa,QAHjB,IAOEhF,EAAAC,EAAAC,cAAA,QACEe,MAAO,CACLgE,QAAS,eACTC,MAAO,MACPC,UAAW,UAGZC,iBAAO,MAAPA,CAAcP,IAdnB,IAiBE7E,EAAAC,EAAAC,cAAA,QACEe,MAAO,CACLgE,QAAS,eACTC,MAAO,MACPC,UAAW,UAGZC,iBAAO,MAAPA,CAAcN,IAxBnB,QA6BF9E,EAAAC,EAAAC,cAAA,qBAKRF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACbH,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAMC,QAAQ,EAAO3E,gBAAgB,EAAOW,QAAS,IAClDuC,MAMT7D,EAAAC,EAAAC,cAAA,iDACuCF,EAAAC,EAAAC,cAACK,GAAD,iBADvC,iEAKAP,EAAAC,EAAAC,cAACM,GAAD,CACEC,KAAM8E,EACNjE,QAAS,CAAC,CAAC,EAAG,GAAI,IAAK,CAAC,IAAK,CAAC,GAAI,GAAI,GAAI,KAC1CV,SAAS,2BACTW,MAAM,QACNV,QAAS,SAACW,GAAD,OACPxB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACEf,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACsF,EAAD,MAEAxF,EAAAC,EAAAC,cAAA,iFAKAF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEvB,UAAU,0BACVwB,MAAO,CACL3B,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,qCACoCxB,EAAAC,EAAAC,cAACK,GAAD,iBADpC,yCAE+B,IAC7BP,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,qDACPN,EAAAC,EAAAC,cAACK,GAAD,iBACM,IALV,8CAQAP,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,yCACwCxB,EAAAC,EAAAC,cAACK,GAAD,gBADxC,YAGAP,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,eACcxB,EAAAC,EAAAC,cAACK,GAAD,sBADd,oBACoD,IAClDP,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,qBAAT,2BAFF,yBAGsBN,EAAAC,EAAAC,cAACK,GAAD,gBAHtB,uBAMFqB,YAAU,IAGZ5B,EAAAC,EAAAC,cAACE,EAAA,EAAD,kBACYJ,EAAAC,EAAAC,cAACK,GAAD,cADZ,mEAE6B,IAC3BP,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMoF,IAAI,sEACRzF,EAAAC,EAAAC,cAACK,GAAD,iBACM,IALV,iFAUAP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,eAKNF,EAAAC,EAAAC,cAAA,sEAC6D,IAC3DF,EAAAC,EAAAC,cAAA,uBAFF,KAEqBF,EAAAC,EAAAC,cAAA,oBAFrB,SAEyCF,EAAAC,EAAAC,cAAA,kBAFzC,yDAGsCF,EAAAC,EAAAC,cAACK,GAAD,iBAHtC,MAMAP,EAAAC,EAAAC,cAACM,GAAD,CACEC,KAAMiF,EACNpE,QAAS,CACP,CAAC,GAAI,IACL,CAAC,GAAI,GAAI,GAAI,GAAI,KAEnBV,SAAS,8BACTC,QAAS,SAACW,GAAD,OACPxB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACEf,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACyF,EAAD,MAEA3F,EAAAC,EAAAC,cAAA,iDAEAF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEvB,UAAU,0BACVwB,MAAO,CACL3B,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,qCAGAxB,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,eACcxB,EAAAC,EAAAC,cAACK,GAAD,gBADd,OACoCP,EAAAC,EAAAC,cAACK,GAAD,iBAGtCqB,YAAU,IAGZ5B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,eAKNF,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAYC,OAAO,iBAAnB,4DAIA9B,EAAAC,EAAAC,cAAA,iJAEiE,IAC/DF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,mCAAT,eAHF,KAMAN,EAAAC,EAAAC,cAAA,uDAEAF,EAAAC,EAAAC,cAACM,GAAD,CACEC,KAAMmF,EACNtE,QAAS,CAACsB,QAAS,GAAI,IAAKA,QAAS,GAAI,IAAKA,QAAS,GAAI,KAC3DhC,SAAS,+BACTW,MAAM,QACNsE,KAAK,IACLhF,QAAS,SAACW,GAAD,OACPxB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACEf,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAC4F,EAAD,MAEA9F,EAAAC,EAAAC,cAAA,wCAEAF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,yDADF,kCAEiBF,EAAAC,EAAAC,cAACK,GAAD,iBAFjB,yEAMAP,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEvB,UAAU,0BACVwB,MAAO,CACL3B,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,0CAC0C,IACxCxB,EAAAC,EAAAC,cAAA,QAAMe,MAAO,CAAEG,MAAO,iBAAkB2E,WAAY,MAApD,QAFF,KAOA/F,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,6CAC6C,IAC3CxB,EAAAC,EAAAC,cAAA,QAAMe,MAAO,CAAEG,MAAO,YAAa2E,WAAY,MAA/C,QAFF,KAOA/F,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,2DAC2D,IACzDxB,EAAAC,EAAAC,cAAA,QAAMe,MAAO,CAAEG,MAAO,SAAU2E,WAAY,MAA5C,OAFF,MAKFnE,YAAU,IAGZ5B,EAAAC,EAAAC,cAAA,eAKNF,EAAAC,EAAAC,cAAA,6GAKAF,EAAAC,EAAAC,cAACM,GAAD,CACEC,KAAMuF,EACN1E,QAAS,CACPsB,QAAS,GAAI,IACb,CAAC,IACD,CAAC,GAAI,GAAI,GAAI,IACbA,QAAS,GAAI,IACb,CAAC,KAEHhC,SAAS,+BAETC,QAAS,SAACW,GAAD,OACPxB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACEf,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAC+F,EAAD,MAEAjG,EAAAC,EAAAC,cAAA,+BACqBF,EAAAC,EAAAC,cAAA,gBADrB,mEAEkCF,EAAAC,EAAAC,cAACK,GAAD,iBAFlC,gCAGeP,EAAAC,EAAAC,cAACK,GAAD,gBAHf,mDAOAP,EAAAC,EAAAC,cAAA,8BAEAF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEvB,UAAU,0BACVwB,MAAO,CACL3B,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,iBACgBxB,EAAAC,EAAAC,cAACK,GAAD,mBADhB,sBACqD,IACnDP,EAAAC,EAAAC,cAACK,GAAD,yBAFF,mBAIAP,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,YACWxB,EAAAC,EAAAC,cAACK,GAAD,uBADX,kCACgE,IAC9DP,EAAAC,EAAAC,cAACK,GAAD,cAFF,2BAEsCP,EAAAC,EAAAC,cAACK,GAAD,mBAEtCP,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,kBACiBxB,EAAAC,EAAAC,cAACK,GAAD,kBADjB,qCAEMP,EAAAC,EAAAC,cAACK,GAAD,iBAFN,2BAIAP,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,WACUxB,EAAAC,EAAAC,cAACK,GAAD,kBADV,aACqC,IACnCP,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,+BAAT,gBAFF,mBAGcN,EAAAC,EAAAC,cAACK,GAAD,iBAHd,MAGoCP,EAAAC,EAAAC,cAAA,mBAHpC,OAGsD,IACpDF,EAAAC,EAAAC,cAAA,qBAEFF,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,OACMxB,EAAAC,EAAAC,cAACK,GAAD,iBADN,QAC2B,IACzBP,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,+BAAT,gBAFF,mBAGcN,EAAAC,EAAAC,cAACK,GAAD,iBAHd,4DAOFqB,YAAU,IAGZ5B,EAAAC,EAAAC,cAAA,eAKNF,EAAAC,EAAAC,cAAA,mDACyCF,EAAAC,EAAAC,cAAA,oBADzC,oDAUAmD,EAAkB,kBACtB6C,MAAM,IACHC,KAAK,GACL1B,IAAI,iBAAM,CAAiB,GAAhB2B,KAAKC,SAAgB,GAAoB,GAAhBD,KAAKC,SAAgB,OACxDxC,EAAmB,0IAOnByC,EAAgB,WAAM,IAAAC,EACFC,IADEC,EAAAlD,OAAAC,EAAA,EAAAD,CAAAgD,EAAA,GACnB/D,EADmBiE,EAAA,GACdC,EADcD,EAAA,GAAAE,EAEIvD,mBAASC,KAFbuD,EAAArD,OAAAC,EAAA,EAAAD,CAAAoD,EAAA,GAEnBlD,EAFmBmD,EAAA,GAEVlD,EAFUkD,EAAA,GAsB1B,OAlBAC,YACE,WACEnD,EAAWL,MAEbqD,EAAW,IAAO,MAGpBhE,oBAAU,WACWE,SAAUJ,EAAIK,SAE9BiE,UAAU,UACVC,KAAKtD,GACLuD,KAAK,UACL/D,KAAK,KAAM,SAACgE,GAAD,OAAOA,EAAE,KACpBhE,KAAK,KAAM,SAACgE,GAAD,OAAOA,EAAE,KACpBhE,KAAK,IAAK,IACZ,CAACQ,IAEGzD,EAAAC,EAAAC,cAAA,OAAKgH,QAAQ,aAAahC,MAAM,OAAO1C,IAAKA,KAE/C+C,EAAiB,yjBA6BjBiB,EAAc,WAAoB,IAAnBhC,EAAmB2C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAV,MAAUG,EACIlE,oBAAS,GADbmE,EAAAhE,OAAAC,EAAA,EAAAD,CAAA+D,EAAA,GAC/BE,EAD+BD,EAAA,GACfE,EADeF,EAAA,GAEhC/E,EAAMC,mBAaZ,OAZAC,oBAAU,WACR,IAAMgF,EAAW,IAAIC,qBACnB,SAAAC,GAAa,IAAXC,EAAWtE,OAAAC,EAAA,EAAAD,CAAAqE,EAAA,MACXH,EAAgBI,EAAML,iBAExB,CAAEM,WAAYtD,IAGhB,OADIhC,EAAIK,SAAS6E,EAASK,QAAQvF,EAAIK,SAC/B,WACL6E,EAASM,UAAUxF,EAAIK,WAExB,IACI,CAACL,EAAKgF,IAGTS,EAAmB,WAAM,IAAAC,EACL1B,IADK2B,EAAA5E,OAAAC,EAAA,EAAAD,CAAA2E,EAAA,GACtB1F,EADsB2F,EAAA,GACjBzB,EADiByB,EAAA,GAAAC,EAEChF,mBAASC,KAFVgF,EAAA9E,OAAAC,EAAA,EAAAD,CAAA6E,EAAA,GAEtB3E,EAFsB4E,EAAA,GAEb3E,EAFa2E,EAAA,GAW7B,OAPAxB,YACE,WACEnD,EAAWL,MAEbqD,EAAW,IAAO,MAIlB1G,EAAAC,EAAAC,cAAA,OAAKgH,QAAQ,aAAahC,MAAM,OAAO1C,IAAKA,GACzCiB,EAAQgB,IAAI,SAAA6D,EAAS3D,GAAT,IAAA4D,EAAAhF,OAAAC,EAAA,EAAAD,CAAA+E,EAAA,GAAEzD,EAAF0D,EAAA,GAAKzD,EAALyD,EAAA,UACXvI,EAAAC,EAAAC,cAAA,UAAQkC,GAAIyC,EAAGxC,GAAIyC,EAAGxC,EAAE,UAK1BoD,EAAoB,gZAuBpB8C,EAAaC,gBAAM,EAAG,GACtBC,EAAkB,kBAAMF,EAAWG,OAAO,kBAAMvC,KAAKC,SAAW,MAChEuC,EAAoB,WAAM,IAAAC,EACNrC,IADMsC,EAAAvF,OAAAC,EAAA,EAAAD,CAAAsF,EAAA,GACvBrG,EADuBsG,EAAA,GAClBpC,EADkBoC,EAAA,GAAAC,EAEA3F,mBAASsF,KAFTM,EAAAzF,OAAAC,EAAA,EAAAD,CAAAwF,EAAA,GAEvBtF,EAFuBuF,EAAA,GAEdtF,EAFcsF,EAAA,GA+C9B,OA3CAnC,YACE,WACEnD,EAAWgF,MAEbhC,EAAW,IAAO,MAGpBhE,oBAAU,WACWE,SAAUJ,EAAIK,SAE9BiE,UAAU,UACVC,KAAKtD,EAAS,SAACwD,GAAD,OAAOA,IACrBD,KACC,SAACiC,GAAD,OACEA,EACGjG,OAAO,UACPC,KAAK,KAAM,SAACgE,GAAD,OAAW,GAAJA,EAAS,KAC3BhE,KAAK,KAAM,IACXA,KAAK,IAAK,GACVA,KAAK,OAAQ,kBACbiG,KAAK,SAACD,GAAD,OACJA,EACGE,aACAC,SAAS,MACTnG,KAAK,KAAM,IACXA,KAAK,IAAK,GACVhC,MAAM,UAAW,MAE1B,SAACoI,GAAD,OAAYA,EAAOpG,KAAK,OAAQ,cAChC,SAACqG,GAAD,OACEA,EACGrG,KAAK,OAAQ,UACbiG,KAAK,SAACI,GAAD,OACJA,EACGH,aACAC,SAAS,MACTnG,KAAK,IAAK,GACVhC,MAAM,UAAW,GACjBsI,cAGZ,CAAC9F,IAEGzD,EAAAC,EAAAC,cAAA,OAAKgH,QAAQ,aAAahC,MAAM,OAAO1C,IAAKA,KAE/CoD,EAAqB,ytCAmDrB4D,EAAuB,WAAM,IAAAC,EACTjD,IADSkD,EAAAnG,OAAAC,EAAA,EAAAD,CAAAkG,EAAA,GAC1BjH,EAD0BkH,EAAA,GACrBhD,EADqBgD,EAAA,GAAAC,EAEHvG,mBAASsF,KAFNkB,EAAArG,OAAAC,EAAA,EAAAD,CAAAoG,EAAA,GAE1BlG,EAF0BmG,EAAA,GAEjBlG,EAFiBkG,EAAA,GAWjC,OAPA/C,YACE,WACEnD,EAAWgF,MAEbhC,EAAW,IAAO,MAIlB1G,EAAAC,EAAAC,cAAA,OAAKgH,QAAQ,aAAahC,MAAM,OAAO1C,IAAKA,GACzCgG,EAAW/D,IAAI,SAACwC,GAAD,OACdjH,EAAAC,EAAAC,cAAC2J,EAAD,CACE9E,IAAKkC,EACL6C,MAAO7C,EACP8C,UAAWtG,EAAQuG,SAAS/C,SAOhCgD,EAA6B,SAAAC,GAA0B,IAAvBJ,EAAuBI,EAAvBJ,MAAOC,EAAgBG,EAAhBH,UACrCI,EAAa1H,kBAAO,GAE1BC,oBAAU,WACRyH,EAAWtH,QAAUkH,GACpB,CAACA,IAEJ,IAAM9I,EAAQmJ,YAAU,CACtBC,OAAQ,CACNjB,SAAU,MAEZ9G,EAAGyH,EAAY,EAAI,EACnBO,QAASP,EAAY,EAAI,IAG3B,OACE/J,EAAAC,EAAAC,cAACqK,EAAA,EAASC,OAAVjH,OAAAkH,OAAA,CACErI,GAAY,GAAR0H,EAAa,GACjBzH,GAAG,KACH8D,KACG4D,EAEII,EAAWtH,QAEZ,YADA,iBAFA,UAKF5B,KAKJ+E,EAAwB,kiCC1af0E,EA9MF,WACX,OACE1K,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACEf,EAAAC,EAAAC,cAAA,0LAKAF,EAAAC,EAAAC,cAAA,6BACmBF,EAAAC,EAAAC,cAACK,GAAD,sBADnB,+DAKAP,EAAAC,EAAAC,cAACM,GAAD,CACEC,KAAMkK,EACNrJ,QAAS,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,CAAC,IAAK,CAAC,IAAK,CAAC,KAC9CV,SAAS,wBACTW,MAAM,QACNV,QAAS,SAACW,GAAD,OACPxB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACEf,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAC0K,EAAD,MAEA5K,EAAAC,EAAAC,cAAA,mEAEAF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEvB,UAAU,0BACVwB,MAAO,CACL3B,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,sDAEExB,EAAAC,EAAAC,cAACK,GAAD,gBAFF,6CAGEP,EAAAC,EAAAC,cAACK,GAAD,qBAHF,IAIEP,EAAAC,EAAAC,cAACE,EAAA,EAAD,gCAC0BJ,EAAAC,EAAAC,cAAA,mBAD1B,IAEEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAHF,4CAI4C,IAC1CF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,uCAAT,uCALF,8BAQ8B,IAC5BN,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,kCAAT,oBAKJN,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,aACYxB,EAAAC,EAAAC,cAACK,GAAD,cADZ,iBAC0CP,EAAAC,EAAAC,cAACK,GAAD,YAD1C,iBAEIP,EAAAC,EAAAC,cAAA,gCAFJ,kBAIAF,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,qBACoBxB,EAAAC,EAAAC,cAACK,GAAD,sBADpB,gBACsD,IACpDP,EAAAC,EAAAC,cAACK,GAAD,uBAEFP,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,gBACexB,EAAAC,EAAAC,cAACK,GAAD,YADf,4CAIAP,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GACjCxB,EAAAC,EAAAC,cAACK,GAAD,gBADF,QACqBP,EAAAC,EAAAC,cAACK,GAAD,sBADrB,cACqD,IACnDP,EAAAC,EAAAC,cAACK,GAAD,YAFF,4DAIEP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAM1E,gBAAgB,GAAtB,4DALF,sDAYFiB,YAAU,QAMlB5B,EAAAC,EAAAC,cAAA,kJAKAF,EAAAC,EAAAC,cAAA,+BACqBF,EAAAC,EAAAC,cAACK,GAAD,sBADrB,0CAEOP,EAAAC,EAAAC,cAAA,gBAFP,WAKAF,EAAAC,EAAAC,cAACM,GAAD,CACEC,KAAMoK,GACNvJ,QAAS,CACP,CAAC,EAAG,EAAG,GACP,CAAC,GACD,CAAC,EAAG,EAAG,GAAI,IACX,CAAC,GAAI,GAAI,GAAI,IACbsB,QAAS,GAAI,KAEfhC,SAAS,2BACTC,QAAS,SAACW,GAAD,OACPxB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACEf,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAC4K,GAAD,MAEA9K,EAAAC,EAAAC,cAAA,8EAEEF,EAAAC,EAAAC,cAACK,GAAD,sBAFF,SAE4BP,EAAAC,EAAAC,cAAA,gBAF5B,+DAMAF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEvB,UAAU,0BACVwB,MAAO,CACL3B,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,sDAEExB,EAAAC,EAAAC,cAACK,GAAD,gBAFF,6CAGEP,EAAAC,EAAAC,cAACK,GAAD,qBAHF,KAKAP,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,sBACqBxB,EAAAC,EAAAC,cAACK,GAAD,iBADrB,UAEEP,EAAAC,EAAAC,cAACE,EAAA,EAAD,YACMJ,EAAAC,EAAAC,cAACK,GAAD,iBADN,2GAGUP,EAAAC,EAAAC,cAACK,GAAD,eAHV,sBAG2C,IACzCP,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,mDAAT,aANJ,OAUMN,EAAAC,EAAAC,cAACK,GAAD,eAVN,MAUsBP,EAAAC,EAAAC,cAACK,GAAD,iBAVtB,uBAWEP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAMQ,KAAK,IAAIlF,gBAAgB,GAA/B,iDAIFX,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,4EAEexB,EAAAC,EAAAC,cAACK,GAAD,cAFf,QAEgCP,EAAAC,EAAAC,cAACK,GAAD,gBAFhC,oBAEgE,IAC9DP,EAAAC,EAAAC,cAACK,GAAD,eAHF,KAKAP,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,YACWxB,EAAAC,EAAAC,cAACK,GAAD,eADX,0DAEqBP,EAAAC,EAAAC,cAACK,GAAD,eAFrB,6BAE6D,IAC3DP,EAAAC,EAAAC,cAACK,GAAD,kBAEFP,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,8CAC6CxB,EAAAC,EAAAC,cAAA,kBAD7C,kEAGEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAJF,0CAKyCF,EAAAC,EAAAC,cAACK,GAAD,eALzC,OAK+D,IAC7DP,EAAAC,EAAAC,cAACK,GAAD,eANF,+BASFqB,YAAU,QAMlB5B,EAAAC,EAAAC,cAAA,8JAKAF,EAAAC,EAAAC,cAAA,kCACwBF,EAAAC,EAAAC,cAAA,8CADxB,mEAEuDF,EAAAC,EAAAC,cAACK,GAAD,eAAc,IAFrE,kEAGkE,IAChEP,EAAAC,EAAAC,cAACK,GAAD,aAJF,kHAQAP,EAAAC,EAAAC,cAAA,yCAC+BF,EAAAC,EAAAC,cAACK,GAAD,aAD/B,yBAIAP,EAAAC,EAAAC,cAAC6K,EAAD,MAEA/K,EAAAC,EAAAC,cAAA,qBACWF,EAAAC,EAAAC,cAACK,GAAD,aADX,2LAMAP,EAAAC,EAAAC,cAACE,EAAA,EAAD,uEACkE,IAChEJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,uCAAT,wCAKFN,EAAAC,EAAAC,cAAA,gKAGYF,EAAAC,EAAAC,cAAA,wBAHZ,QAGmCF,EAAAC,EAAAC,cAAA,uBAHnC,yHAQAF,EAAAC,EAAAC,cAAA,4GAUA8K,EAAiB,WAAM,IAAA7H,EACGC,mBAAS,GADZE,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACpB8H,EADoB3H,EAAA,GACX4H,EADW5H,EAAA,GAAAqD,EAEGvD,mBAAS,KAFZwD,EAAArD,OAAAC,EAAA,EAAAD,CAAAoD,EAAA,GAEpBwE,EAFoBvE,EAAA,GAEXwE,EAFWxE,EAAA,GAAAU,EAGClE,mBAAS,IAHVmE,EAAAhE,OAAAC,EAAA,EAAAD,CAAA+D,EAAA,GAGpB+D,EAHoB9D,EAAA,GAGZ+D,EAHY/D,EAAA,GAAAa,EAIChF,mBAAS,KAJViF,EAAA9E,OAAAC,EAAA,EAAAD,CAAA6E,EAAA,GAIpBmD,EAJoBlD,EAAA,GAIZmD,EAJYnD,EAAA,GAM3B,OACErI,EAAAC,EAAAC,cAACM,GAAD,CACEC,KAAMgL,GACNnK,QAAS,CACP,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC,CAAC,GAAI,IACL,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAEvBV,SAAS,2BACTC,QAAS,SAACW,GAAD,OACPxB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACEf,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,gBACMF,EAAAC,EAAAC,cAACK,GAAD,aADN,mCACiDP,EAAAC,EAAAC,cAACK,GAAD,eADjD,OACmE,IACjEP,EAAAC,EAAAC,cAACK,GAAD,cAFF,KAIAP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAAf,kCAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCAAf,YADF,IAGEH,EAAAC,EAAAC,cAAA,SACEwL,MAAOT,EACPU,SAAU,SAACC,GAAD,OAAOV,GAAYU,EAAEC,OAAOH,QACtCI,KAAK,WANT,IASE9L,EAAAC,EAAAC,cAAA,SACEwL,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAAOR,GAAYQ,EAAEC,OAAOH,QACtCI,KAAK,WAZT,KAgBA9L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCAAf,WADF,IAGEH,EAAAC,EAAAC,cAAA,SACEwL,MAAOL,EACPM,SAAU,SAACC,GAAD,OAAON,GAAWM,EAAEC,OAAOH,QACrCI,KAAK,WANT,IASE9L,EAAAC,EAAAC,cAAA,SACEwL,MAAOH,EACPI,SAAU,SAACC,GAAD,OAAOJ,GAAWI,EAAEC,OAAOH,QACrCI,KAAK,WAZT,MAkBF9L,EAAAC,EAAAC,cAAC6L,GAAD,CACEC,OAAQ,CAACf,EAASE,GAClB1C,MAAO,CAAC4C,EAAQE,KAGlBvL,EAAAC,EAAAC,cAAA,6FAKAF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEvB,UAAU,0BACVwB,MAAO,CACL3B,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,gIAEmE,IACjExB,EAAAC,EAAAC,cAACK,GAAD,iBAHF,KAIEP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,kBACYJ,EAAAC,EAAAC,cAACK,GAAD,iBADZ,2HAG0BP,EAAAC,EAAAC,cAACK,GAAD,WAH1B,8BALF,iEAYAP,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,+BAC8BxB,EAAAC,EAAAC,cAACK,GAAD,cAD9B,2DAEkCP,EAAAC,EAAAC,cAAA,mBAFlC,UAEuD,IACrDF,EAAAC,EAAAC,cAACK,GAAD,eAHF,QAGoBP,EAAAC,EAAAC,cAACK,GAAD,cAHpB,qDAIsBP,EAAAC,EAAAC,cAACK,GAAD,gBAJtB,uBAKEP,EAAAC,EAAAC,cAAA,WALF,6CAM4CF,EAAAC,EAAAC,cAACK,GAAD,gBAN5C,iBAOOP,EAAAC,EAAAC,cAAA,sBAPP,iBAOqCF,EAAAC,EAAAC,cAACK,GAAD,iBAPrC,IAQEP,EAAAC,EAAAC,cAAA,WARF,+CAS8CF,EAAAC,EAAAC,cAACK,GAAD,eAT9C,QAWWP,EAAAC,EAAAC,cAACK,GAAD,cAXX,kBAWsCP,EAAAC,EAAAC,cAACK,GAAD,aAXtC,wBAcAP,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,mEACmE,IACjExB,EAAAC,EAAAC,cAAA,kBAFF,QAEmBF,EAAAC,EAAAC,cAAA,iBAFnB,sEAGiCF,EAAAC,EAAAC,cAACK,GAAD,eAHjC,IAIEP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACE6D,QAAS,WACPgH,EAAW,GACXE,EAAW,KACXE,EAAU,IACVE,EAAU,OALd,gBAQexL,EAAAC,EAAAC,cAACK,GAAD,iBARf,QAQmCP,EAAAC,EAAAC,cAACK,GAAD,kBACjCP,EAAAC,EAAAC,cAAA,WATF,+BAcJ0B,YAAU,SAQhBqK,EAAO,WACX,IAAMzJ,EAAMC,mBAUZ,OARAC,oBAAU,WACR,IAAMwJ,EAAStJ,gBAAiBoJ,OAAO,CAAC,EAAG,MAAMvD,MAAM,CAAC,GAAI,MAEtD9F,EAAaC,SAAUJ,EAAIK,SAC3BsJ,EAAgBvJ,aAAcsJ,GACpCvJ,EAAWK,OAAO,KAAKkG,KAAKiD,IAC3B,IAEInM,EAAAC,EAAAC,cAAA,OAAKkM,OAAO,KAAK5J,IAAKA,KAGzBmI,EAAa,0XAqBb0B,GAAiB,WACrB,IAAMC,EAAQC,kBAAQ,WACpB,IAAML,EAAStJ,gBAAiBoJ,OAAO,CAAC,EAAG,MAAMvD,MAAM,CAAC,GAAI,MAE5D,OAAOyD,EAAOI,QAAQ7H,IAAI,SAACiH,GAAD,MAAY,CACpCA,QACAc,QAASN,EAAOR,OAEjB,IAEH,OACE1L,EAAAC,EAAAC,cAAA,OAAKkM,OAAO,MACVpM,EAAAC,EAAAC,cAAA,QAAM+G,EAAE,kBAAkBwF,OAAO,iBAChCH,EAAM7H,IAAI,SAAAC,GAAA,IAAGgH,EAAHhH,EAAGgH,MAAOc,EAAV9H,EAAU8H,QAAV,OACTxM,EAAAC,EAAAC,cAAA,KAAG6E,IAAK2G,EAAOgB,UAAS,aAAAC,OAAeH,EAAf,SACtBxM,EAAAC,EAAAC,cAAA,QAAM0M,GAAG,IAAIH,OAAO,iBACpBzM,EAAAC,EAAAC,cAAA,QACE6E,IAAK2G,EACLzK,MAAO,CACLqD,SAAU,OACVuI,WAAY,SACZH,UAAW,qBAGZhB,QAQPb,GAAkB,o3BA2CXiC,GAA0B,SAAAlI,GAGjC,IAAAmI,EAAAnI,EAFJoH,cAEI,IAAAe,EAFK,CAAC,EAAG,KAETA,EAAAC,EAAApI,EADJ6D,aACI,IAAAuE,EADI,CAAC,GAAI,KACTA,EACEV,EAAQC,kBAAQ,WACpB,IAAML,EAAStJ,gBAAiBoJ,OAAOA,GAAQvD,MAAMA,GAE/CvD,EAAQuD,EAAM,GAAKA,EAAM,GAEzBwE,EAAsB7G,KAAK8G,IAAI,EAAG9G,KAAK+G,MAAMjI,EAD7B,KAGtB,OAAOgH,EAAOI,MAAMW,GAAqBxI,IAAI,SAACiH,GAAD,MAAY,CACvDA,QACAc,QAASN,EAAOR,OAEjB,CAACM,EAAOhF,KAAK,KAAMyB,EAAMzB,KAAK,OAEjC,OACEhH,EAAAC,EAAAC,cAAA,OAAKkM,OAAO,KAAKnL,MAAO,CAAEmM,SAAU,YAClCpN,EAAAC,EAAAC,cAAA,QACE+G,EAAG,CAAC,IAAKwB,EAAM,GAAI,EAAG,KAAM,EAAG,IAAKA,EAAM,GAAI,IAAK,GAAGzB,KAAK,KAC3Db,KAAK,OACLsG,OAAO,iBAERH,EAAM7H,IAAI,SAAAmD,GAAA,IAAG8D,EAAH9D,EAAG8D,MAAOc,EAAV5E,EAAU4E,QAAV,OACTxM,EAAAC,EAAAC,cAAA,KAAG6E,IAAK2G,EAAOgB,UAAS,aAAAC,OAAeH,EAAf,SACtBxM,EAAAC,EAAAC,cAAA,QAAM0M,GAAG,IAAIH,OAAO,iBACpBzM,EAAAC,EAAAC,cAAA,QACE6E,IAAK2G,EACLzK,MAAO,CACLqD,SAAU,OACVuI,WAAY,SACZH,UAAW,qBAGZhB,QAQPD,GAA2B,mxCCvMlB4B,YArRA,WAAM,IAAAlK,EACaC,mBAAS,CACvC8B,MAAO,KACPkH,OAAQ,KACRkB,UAAW,KACXC,YAAa,KACbC,aAAc,KACdC,WAAY,KAPKnK,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACZuK,EADYpK,EAAA,GACFqK,EADErK,EAAA,GAUbsK,EAAqBrK,OAAOsK,KAAKC,iBAAOJ,EAAUK,aAAW3G,OAEnE,OACEpH,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACEf,EAAAC,EAAAC,cAAA,gLAG0BF,EAAAC,EAAAC,cAACK,GAAD,cAH1B,SAGgDP,EAAAC,EAAAC,cAACK,GAAD,gBAHhD,KAMAP,EAAAC,EAAAC,cAAA,gJAEgE,IAC9DF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,uCAAT,uCAHF,KASAN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAC8N,GAAD,MACAhO,EAAAC,EAAAC,cAAA,OAAKe,MAAO,CAAEgN,KAAM,WAAY9J,WAAY,UAC1CnE,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEC,MAAO,CACL3B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACEf,EAAAC,EAAAC,cAACgO,GAAD,CAAMC,KAAK,YACXnO,EAAAC,EAAAC,cAAA,WAFF,wDAGwD,IACtDF,EAAAC,EAAAC,cAACK,GAAD,cAJF,YAMAP,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACEf,EAAAC,EAAAC,cAACgO,GAAD,CAAMC,KAAK,WACXnO,EAAAC,EAAAC,cAAA,WAFF,8DAKAF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACEf,EAAAC,EAAAC,cAACgO,GAAD,CAAMC,KAAK,YACXnO,EAAAC,EAAAC,cAAA,WAFF,oCAGmCF,EAAAC,EAAAC,cAACgO,GAAD,CAAMC,KAAK,iBAOtDnO,EAAAC,EAAAC,cAAA,oCAC0BF,EAAAC,EAAAC,cAACgO,GAAD,CAAMC,KAAK,YADrC,OACsD,IACpDnO,EAAAC,EAAAC,cAACgO,GAAD,CAAMC,KAAK,WAFb,oFAGwCnO,EAAAC,EAAAC,cAACK,GAAD,cAHxC,KAMAP,EAAAC,EAAAC,cAACM,GAAD,CACEC,KAAM2N,GAAcV,GACpBpM,QAAS,CACP,CAAC,EAAIsM,GACLnF,gBAAM,EAAImF,EAAoB,GAAKA,GACnC,CAAC,EAAIA,EAAoB,GAAKA,GAC9BnF,gBAAM,GAAKmF,EAAoB,GAAKA,IAEtChN,SAAS,0BACTC,QAAS,SAACW,GAAD,OACPxB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACEf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAAf,oBACmBH,EAAAC,EAAAC,cAACK,GAAD,sBADnB,YAGAP,EAAAC,EAAAC,cAAA,OACEC,UAAU,qBACVc,MAAO,CAAEuM,aAAc,SAEvBxN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACZ,CACC,QACA,SACA,YACA,cACA,eACA,cACAsE,IAAI,SAACM,GAAD,OACJ/E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2B4E,IAAKA,GAC7C/E,EAAAC,EAAAC,cAAA,OACEC,UAAU,iCACVc,MAAO,CAAEiE,MAAO,SAEfH,EAJH,IAIS,KAIT/E,EAAAC,EAAAC,cAACmO,EAAApO,EAAD,CACEE,UAAU,kCACVc,MAAO,CACLiE,MAAO,OAETwG,MAAOgC,EAAS3I,GAChBuJ,IAAY,UAAPvJ,EAAkB,IAAa,SAAPA,EAAiB,IAAM,EACpDmI,IAAY,UAAPnI,EAAkB,IAAa,SAAPA,EAAiB,IAAM,IACpD4G,SAAU,SAACD,GAAD,OACRiC,EAAYpK,OAAAgL,EAAA,EAAAhL,QAAAgL,EAAA,EAAAhL,CAAA,GAAKmK,GAAN,GAAAnK,OAAAiL,EAAA,EAAAjL,CAAA,GAAiBwB,EAAM2G,QAItC1L,EAAAC,EAAAC,cAACuO,EAAA,EAAD,CACEN,KAAK,IACLjK,QAAS,kBAAMyJ,EAAYpK,OAAAgL,EAAA,EAAAhL,QAAAgL,EAAA,EAAAhL,CAAA,GAAKmK,GAAN,GAAAnK,OAAAiL,EAAA,EAAAjL,CAAA,GAAiBwB,EAAM,SACjD9D,MAAO,CACLgN,KAAM,YACNjJ,YAAa,QACb0J,OAAQ,UACRtN,MAAO,UACPkJ,QAASqE,OAAOC,SAASlB,EAAS3I,IAAQ,EAAI,GAEhDc,KAAK,MAGP7F,EAAAC,EAAAC,cAAA,OACEC,UAAU,iCACVc,MAAO,CACLqJ,QAASqE,OAAOC,SAASlB,EAAS3I,IAAQ,EAAI,KAG/C2I,EAAS3I,IAAQ,eAO5B/E,EAAAC,EAAAC,cAAC2O,GAAD,CAAqBnB,SAAUA,IAG/B1N,EAAAC,EAAAC,cAAA,+IAKAF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEvB,UAAU,0BACVwB,MAAO,CACL3B,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,uDACuD,IACrDxB,EAAAC,EAAAC,cAACgO,GAAD,CAAMC,KAAK,YAFb,QAE8BnO,EAAAC,EAAAC,cAACgO,GAAD,CAAMC,KAAK,WAFzC,2BAIEnO,EAAAC,EAAAC,cAACE,EAAA,EAAD,wDACmD,IACjDJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,qBAAT,2BAFF,MAKFN,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,WACUxB,EAAAC,EAAAC,cAACK,GAAD,YADV,+DAIAP,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,iBACgBxB,EAAAC,EAAAC,cAACK,GAAD,YADhB,kCAC0D,IACxDP,EAAAC,EAAAC,cAAA,oBAFF,yBAEuC,IACrCF,EAAAC,EAAAC,cAAA,oCAC0BF,EAAAC,EAAAC,cAACgO,GAAD,CAAMC,KAAK,YADrC,WAIFnO,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,uDACsDxB,EAAAC,EAAAC,cAAA,gBAAW,IADjE,OAEMF,EAAAC,EAAAC,cAAA,iBAFN,IAEkBF,EAAAC,EAAAC,cAACgO,GAAD,CAAMC,KAAK,cAG/BvM,YAAU,QAMlB5B,EAAAC,EAAAC,cAAA,yDAC+CF,EAAAC,EAAAC,cAACgO,GAAD,CAAMC,KAAK,YAD1D,IACwE,IACtEnO,EAAAC,EAAAC,cAACgO,GAAD,CAAMC,KAAK,WAFb,SAE8BnO,EAAAC,EAAAC,cAACgO,GAAD,CAAMC,KAAK,YAFzC,kDAMAnO,EAAAC,EAAAC,cAACM,GAAD,CACEC,KAAMqO,GACNxN,QAAS,CACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,GAAI,GAAI,IACTmH,gBAAM,GAAI,IACVA,gBAAM,GAAI,KAEZ7H,SAAS,wBACTC,QAAS,SAACW,GAAD,OACPxB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACEf,EAAAC,EAAAC,cAAA,wDAC+C,IAC7CF,EAAAC,EAAAC,cAACK,GAAD,2BAFF,qBAKAP,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEvB,UAAU,0BACVwB,MAAO,CACL3B,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,mBACkBxB,EAAAC,EAAAC,cAACgO,GAAD,CAAMC,KAAK,YAD7B,+BAGEnO,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CACEC,QACE5D,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACEf,EAAAC,EAAAC,cAACK,GAAD,+BADF,yBAIFwO,kBACE/O,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,8DAGFf,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAMQ,KAAK,KAAKmJ,MAGpBhP,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,uBACsBxB,EAAAC,EAAAC,cAACK,GAAD,eADtB,QACwCP,EAAAC,EAAAC,cAACK,GAAD,cADxC,yBAEmBP,EAAAC,EAAAC,cAACK,GAAD,wBAEnBP,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,QACQ,IACNxB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAM4O,KAAK,mEACTjP,EAAAC,EAAAC,cAACK,GAAD,wBACM,IAJV,sEAOEP,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACK,GAAD,uBADF,MAC2B,IACzBP,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAM4O,KAAK,4CAAX,2CAFF,mBAKmB,IACjBjP,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAM4O,KAAK,yDAAX,wBAEQ,IARV,sDAYFjP,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,YACWxB,EAAAC,EAAAC,cAAA,mBADX,QAC6BF,EAAAC,EAAAC,cAAA,kBAD7B,mBAC0D,IACxDF,EAAAC,EAAAC,cAACK,GAAD,cAFF,YAE2BP,EAAAC,EAAAC,cAACgO,GAAD,CAAMC,KAAK,YAFtC,eAIAnO,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,mCACkCxB,EAAAC,EAAAC,cAACgO,GAAD,CAAMC,KAAK,WAD7C,UACgE,IAC9DnO,EAAAC,EAAAC,cAACK,GAAD,sBAFF,QAE2BP,EAAAC,EAAAC,cAACK,GAAD,qBAF3B,MAKFqB,YAAU,IAGZ5B,EAAAC,EAAAC,cAAA,8HAEwD,IACtDF,EAAAC,EAAAC,cAACK,GAAD,eAHF,YAGwBP,EAAAC,EAAAC,cAACK,GAAD,2BAHxB,8DAI6CP,EAAAC,EAAAC,cAACK,GAAD,YAJ7C,SAUNP,EAAAC,EAAAC,cAAA,qIAEoD,IAClDF,EAAAC,EAAAC,cAACK,GAAD,2BAHF,wCAG4D,IAC1DP,EAAAC,EAAAC,cAACgO,GAAD,CAAMC,KAAK,YAJb,KAI2BnO,EAAAC,EAAAC,cAACgO,GAAD,CAAMC,KAAK,WAJtC,QAIuD,IACrDnO,EAAAC,EAAAC,cAACgO,GAAD,CAAMC,KAAK,YALb,4CAaAC,GAAgB,SAACV,GAAD,+BAAAf,OACKuC,KAAKC,UAAUrB,iBAAOJ,EAAUK,YAAW,KAAM,GADtD,u7BA0ChBiB,GAA0B,4qBA0B1BI,GAAyB,SAACC,GAC9B,IAAMC,EAAgB/L,OAAAgL,EAAA,EAAAhL,QAAAgL,EAAA,EAAAhL,CAAA,GACjB8L,GADiB,IAEpB/B,UAAW+B,EAAW/B,WAAa,GACnCC,YAAa8B,EAAW9B,aAAe,GACvCC,aAAc6B,EAAW7B,cAAgB,GACzCC,WAAY4B,EAAW5B,YAAc,KAGvC,OAAOlK,OAAAgL,EAAA,EAAAhL,QAAAgL,EAAA,EAAAhL,CAAA,GACF+L,GADL,IAEEC,cAAenJ,KAAK8G,IAClBoC,EAAiBlD,OACfkD,EAAiBhC,UACjBgC,EAAiB9B,aACnB,GAEFgC,aAAcpJ,KAAK8G,IACjBoC,EAAiBpK,MACfoK,EAAiB7B,WACjB6B,EAAiB/B,YACnB,MAKAuB,GAAsB,0nCA8EtBW,GAAsB,SAAA/K,GAAkB,IAAAgL,EAnCnB,SAACC,GAC1B,IAAMnN,EAAMC,mBACN4M,EAAaD,GAAuBO,GAFGhJ,EAInBvD,mBAAS,GAJUwD,EAAArD,OAAAC,EAAA,EAAAD,CAAAoD,EAAA,GAItCzB,EAJsC0B,EAAA,GAI/BgJ,EAJ+BhJ,EAAA,GAAAU,EAKjBlE,mBAAS,GALQmE,EAAAhE,OAAAC,EAAA,EAAAD,CAAA+D,EAAA,GAKtC8E,EALsC7E,EAAA,GAK9BsI,EAL8BtI,EAAA,GAO7C7E,oBAAU,WACR,GAAI2M,EAAWnK,OAASmK,EAAWjD,OAAQ,MAAO,CAAC5J,EAAK6M,GAExD,IAAMS,EAAUtN,EAAIK,QACdkN,EAAiB,IAAIC,IAAe,SAACC,GACzC,GAAK/J,MAAMgK,QAAQD,IACdA,EAAQ7I,OAAb,CAEA,IAAMS,EAAQoI,EAAQ,GAElB/K,GAAS2C,EAAMsI,YAAYjL,OAAO0K,EAAS/H,EAAMsI,YAAYjL,OAC7DkH,GAAUvE,EAAMsI,YAAY/D,QAC9ByD,EAAUhI,EAAMsI,YAAY/D,WAIhC,OAFA2D,EAAehI,QAAQ+H,GAEhB,kBAAMC,EAAe/H,UAAU8H,KACrC,IAEH,IAAMM,EAAchB,GAAuB7L,OAAAgL,EAAA,EAAAhL,QAAAgL,EAAA,EAAAhL,CAAA,GACtC8L,GADqC,IAExCnK,MAAOmK,EAAWnK,OAASA,EAC3BkH,OAAQiD,EAAWjD,QAAUA,KAG/B,MAAO,CAAC5J,EAAK4N,GAIMC,CADyB3L,EAAfgJ,UAAe4C,EAAA/M,OAAAC,EAAA,EAAAD,CAAAmM,EAAA,GACrClN,EADqC8N,EAAA,GAChCC,EADgCD,EAAA,GAGtCpE,EAASK,kBACb,kBAAM3J,gBAAiBoJ,OAAO,CAAC,EAAG,MAAMvD,MAAM,CAAC,EAAG8H,EAAIf,gBACtD,CAACe,EAAIf,eAGP,OACExP,EAAAC,EAAAC,cAAA,OACEC,UAAU,iBACVqC,IAAKA,EACLvB,MAAO,CACLmL,OAAQ,UAGVpM,EAAAC,EAAAC,cAAA,OACEgF,MAAOqL,EAAIrL,MACXkH,OAAQmE,EAAInE,OACZnL,MAAO,CACLC,WAAY,YAGdlB,EAAAC,EAAAC,cAAA,KAAGwM,UAAS,aAAAC,OAAe4D,EAAI9C,WAAnB,MAAAd,OAAkC4D,EAAIjD,UAAtC,MACVtN,EAAAC,EAAAC,cAAA,QACEgF,MAAOqL,EAAIf,aACXpD,OAAQmE,EAAIhB,cACZpJ,KAAK,6BAEPnG,EAAAC,EAAAC,cAAA,KAAGwM,UAAS,gBAAAC,OAAkB4D,EAAIhB,cAAtB,MACVvP,EAAAC,EAAAC,cAAC6L,GAAD,CACEC,OAAQE,EAAOF,SACfvD,MAAOyD,EAAOzD,eAStB+H,GAAc,kBAClBxQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACd,CAAC,MAAO,QAAS,SAAU,QAAQsE,IAAI,SAACgM,GAAD,OACtCzQ,EAAAC,EAAAC,cAAA,OACEC,UAAS,4CAAAwM,OAA8C8D,GACvD1L,IAAK0L,GAELzQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BAA6BsQ,QAM9CC,GAAO,SAAA9L,GAAA,IAAA+L,EAAA/L,EAAGuJ,YAAH,IAAAwC,EAAU,UAAVA,EAAA,OACX3Q,EAAAC,EAAAC,cAAA,KAAGC,UAAS,mBAAAwM,OAAqBwB,IAASA,2CC9X7ByC,GArIF,WAAM,IAAAzN,EAC2BC,mBAAS,gBADpCE,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACV0N,EADUvN,EAAA,GACMwN,EADNxN,EAAA,GAGjB,OACEtD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,2JAKAF,EAAAC,EAAAC,cAAA,6LAMAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,UACEC,UAAU,WACVuL,MAAOmF,EACPlF,SAAU,SAACC,GAAD,OAAOkF,EAAkBlF,EAAEC,OAAOH,SAE3CqF,GAAkBtM,IAAI,SAACuM,GAAD,OACrBhR,EAAAC,EAAAC,cAAA,UAAQ6E,IAAKiM,EAAkBtF,MAAOsF,GACnCA,MAIPhR,EAAAC,EAAAC,cAAC+Q,GAAD,CAAYJ,eAAgBA,KAG9B7Q,EAAAC,EAAAC,cAACE,EAAA,EAAD,0EACqE,IACnEJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,4BAAT,8BAFF,KAKAN,EAAAC,EAAAC,cAACM,GAAD,CACEC,KAAMyQ,GACNrL,KAAK,IACLvE,QAAS,CACPmH,gBAAM,EAAG,IADF,GAAAkE,OAAApJ,OAAA4N,GAAA,EAAA5N,CAEHkF,gBAAM,GAAI,KAFP,CAEY,KAFZ,GAAAkE,OAAApJ,OAAA4N,GAAA,EAAA5N,CAGHkF,gBAAM,GAAI,KAHP,CAGY,KACnBA,gBAAM,GAAI,IACVA,gBAAM,GAAI,IACVA,gBAAM,GAAI,KAEZ7H,SAAS,UACTC,QAAS,SAACW,GAAD,OACPxB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KAGEf,EAAAC,EAAAC,cAAA,gIAKAF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEvB,UAAU,0BACVwB,MAAO,CACL3B,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,8BAC6BxB,EAAAC,EAAAC,cAACK,GAAD,mBAD7B,gHAIEP,EAAAC,EAAAC,cAAA,WAJF,gBAKgB,IACdF,EAAAC,EAAAC,cAACkR,GAAD,CAAUC,GAAG,uBAAb,eAA0D,IAN5D,+EAQgBrR,EAAAC,EAAAC,cAACK,GAAD,sBARhB,qEASmD,IACjDP,EAAAC,EAAAC,cAACkR,GAAD,CAAUC,GAAG,YAVf,KAYArR,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,uDAEExB,EAAAC,EAAAC,cAACK,GAAD,eAFF,uCAEmDP,EAAAC,EAAAC,cAACK,GAAD,eAAc,IAFjE,2CAKAP,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,0GAE8CxB,EAAAC,EAAAC,cAACK,GAAD,iBAF9C,KAIAP,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,kBACiBxB,EAAAC,EAAAC,cAACK,GAAD,sBADjB,oBACuD,IACrDP,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,6DAAT,WAFF,0BAKyBN,EAAAC,EAAAC,cAACK,GAAD,eALzB,IAK2CP,EAAAC,EAAAC,cAACK,GAAD,UAL3C,0EAQAP,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GACjCxB,EAAAC,EAAAC,cAACkR,GAAD,MADF,gCAC4C,IAC1CpR,EAAAC,EAAAC,cAACkR,GAAD,CAAUC,GAAG,mBAFf,2DAKArR,EAAAC,EAAAC,cAAA,MAASsB,EAA0B,GAAnC,6IAGqBxB,EAAAC,EAAAC,cAACK,GAAD,sBAHrB,0CAIkB,IAChBP,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,qHAAT,iCALF,mBAQkBN,EAAAC,EAAAC,cAACK,GAAD,eARlB,gCAWFqB,YAAU,QAMlB5B,EAAAC,EAAAC,cAAA,6IAKAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,mIAGEJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAJF,mIAM4D,IAC1DF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,+CAAT,iBAPF,sFAWiBN,EAAAC,EAAAC,cAACK,GAAD,mBAXjB,gBAmBA2Q,GAAc,0xDAqEdI,GAAa,SAAA5M,GAAyC,IAAA6M,EAAA7M,EAAtCmM,sBAAsC,IAAAU,EAArB,eAAqBA,EAAA7B,EAEvCW,aAAmB,IAFoBC,EAAA/M,OAAAC,EAAA,EAAAD,CAAAmM,EAAA,GAEnDlN,EAFmD8N,EAAA,GAE9CC,EAF8CD,EAAA,GAKpDkB,EAAS,CAAE1F,KAAM,UAIjB2F,GADJ7O,EAAGiO,IAAmBa,GAAgBb,MACAc,SAASpB,EAAIrL,MAAOsM,GACtDI,EAAgBhP,UAAW6O,GAVyBI,EAa7BD,EAAcE,OAAON,GAbQO,EAAAxO,OAAAC,EAAA,EAAAD,CAAAsO,EAAA,GAAAG,EAAAzO,OAAAC,EAAA,EAAAD,CAAAwO,EAAA,MAAAE,GAAAD,EAAA,GAAAA,EAAA,GAAAzO,OAAAC,EAAA,EAAAD,CAAAwO,EAAA,OAcpD3F,GAdoD6F,EAAA,GAAAA,EAAA,IAgB1D,OACEjS,EAAAC,EAAAC,cAAA,OACEsC,IAAKA,EACLvB,MAAO,CACLiE,MAAO,SAGTlF,EAAAC,EAAAC,cAAA,OAAKgF,MAAOqL,EAAIrL,MAAOkH,OAAQA,GAC7BpM,EAAAC,EAAAC,cAAA,YAGEF,EAAAC,EAAAC,cAAA,YAAUmR,GAAG,eACXrR,EAAAC,EAAAC,cAAA,QAAM+G,EAAG2K,EAAcJ,OAI3BxR,EAAAC,EAAAC,cAAA,QAAM+G,EAAG2K,EAAcJ,GAASrL,KAAK,YAErCnG,EAAAC,EAAAC,cAAA,KAAGe,MAAO,CAAEiR,SAAU,sBAEpBlS,EAAAC,EAAAC,cAAA,QACE+G,EAAG2K,EAAchP,oBACjBuD,KAAK,OACLsG,OAAO,SAGR0F,GAAcC,SAAS3N,IAAI,SAAC4N,GAC3B,OACErS,EAAAC,EAAAC,cAAA,QACE6E,IAAKsN,EAAMC,WAAWC,QACtBtL,EAAG2K,EAAcS,GACjBlM,KAAK,UACLsG,OAAO,QAEPzM,EAAAC,EAAAC,cAAA,aAAQmS,EAAMC,WAAWnE,aAUnC4C,GAAoB,CACxB,mBACA,cACA,gBACA,eACA,WACA,cACA,aACA,WACA,aACA,aACA,aACA,eACA,cACA,2BACA,qCACA,yBAOWyB,GAAW,SAAA5K,GAAA,IAAGyJ,EAAHzJ,EAAGyJ,GAAHoB,EAAA7K,EAAO8K,YAAP,IAAAD,EAAc,MAAdA,EAAqBE,EAArB/K,EAAqB+K,SAArB,OACtB3S,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAM4O,KAAI,4BAAAtC,OAA8B+F,GAA9B/F,OAAuC0E,EAAF,IAAA1E,OAAW0E,GAAO,KAC9DsB,GAAYtB,EAAKrR,EAAAC,EAAAC,cAACK,GAAD,KAAIoS,GAAQ,MAAAhG,OAAU0E,EAAV,OAAwBrR,EAAAC,EAAAC,cAAA,eAAOwS,4FCjQpDE,GAjBS,CACpB,CAAC,wBAAyB7S,GAC1B,CAAC,6BAA8BmD,GAC/B,CAAC,OAAQwH,GACT,CAAC,wBAAyB2C,IAK1B,CACE,OAEAuD,IAEF,CAAC,gCCrBa,WACd,OACE5Q,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,0DACAF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEC,MAAO,CACL3B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,iCACAf,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,oBACcf,EAAAC,EAAAC,cAAA,kBADd,iBAGAF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,oFAIAf,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,sCACAf,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,6BAIJf,EAAAC,EAAAC,cAAA,6DACoD,IAClDF,EAAAC,EAAAC,cAAA,6BAFF,4TASAF,EAAAC,EAAAC,cAAA,yFAKAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,GAAG,WACHH,UAAU,6CAEVH,EAAAC,EAAAC,cAAA,OAAK2S,IAAKC,OACV9S,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAAf,mDAIFH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,GAAG,uCACHH,UAAU,qBAEVH,EAAAC,EAAAC,cAAA,OAAK2S,IAAKE,OACV/S,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAAf,+HAKFH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,gCAAgCH,UAAU,qBACjDH,EAAAC,EAAAC,cAAA,OAAK2S,IAAKG,OACVhT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAAf,gFAKFH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,GAAG,iCACHH,UAAU,6CAEVH,EAAAC,EAAAC,cAAA,OAAK2S,IAAKI,OACVjT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAAf,qKAQJH,EAAAC,EAAAC,cAAA,mEACAF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEC,MAAO,CACL3B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,gDACAf,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,uCACAf,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,kEAGJf,EAAAC,EAAAC,cAAA,2GAKAF,EAAAC,EAAAC,cAAA,4EACmE,IACjEF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,oCAAT,cAFF,SD9DgCmE,IACpC,SAAAC,GAAA,IAAAE,EAAArB,OAAAC,EAAA,EAAAD,CAAAmB,EAAA,GAAEwO,EAAFtO,EAAA,GAAAuO,EAAAvO,EAAA,SAAuC,CACrCsO,QACAE,eAFF,IAAAD,EAAqB,kBAAMnT,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,OAA3BoS,EAGEE,KAAMC,oBAAUJ,MAIPK,GAAI,SAAA3L,GAAA,IAAG+K,EAAH/K,EAAG+K,SAAaa,EAAhBjQ,OAAAkQ,EAAA,EAAAlQ,CAAAqE,EAAA,qBACf5H,EAAAC,EAAAC,cAAA,OAAAqD,OAAAkH,OAAA,CAAMtK,UAAU,KAAQqT,GACrBb,IAIQe,GAAiB,SAAAC,GASxB,IARJlT,EAQIkT,EARJlT,KACAa,EAOIqS,EAPJrS,QACAT,EAMI8S,EANJ9S,QACAD,EAKI+S,EALJ/S,SACAW,EAIIoS,EAJJpS,MACAsE,EAGI8N,EAHJ9N,KACA+N,EAEID,EAFJC,iBAEIC,EAAAF,EADJhT,sBACI,IAAAkT,KAAA1Q,EAC8CC,mBAAS,MADvDE,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACG2Q,EADHxQ,EAAA,GACsBxC,EADtBwC,EAAA,GAAAqD,EAEsCvD,mBAAS,MAF/CwD,EAAArD,OAAAC,EAAA,EAAAD,CAAAoD,EAAA,GAEGoN,EAFHnN,EAAA,GAEkBoN,EAFlBpN,EAAA,GAgBJ,OACE5G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2CACbH,EAAAC,EAAAC,cAAA,OACEC,UAAS,kEAAAwM,OAAoEmH,IAE7E9T,EAAAC,EAAAC,cAACmF,EAAA,EAAD9B,OAAAkH,OACM,CACFnJ,UACAwS,oBACAlT,WACAW,QACAsE,OACA+N,mBACAjT,kBARJ,CAUER,UAAS,4BAAAwM,OAA8BoH,GACvCzO,QAAQ,EACR2O,iBAAiB,EACjBpO,KAAMqO,OAAOC,WAAa,KAAO,MAEhC1T,IAGLT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACZU,EApC2B,SAACiJ,GAAD,MAAY,CAC5CsK,aAAc,kBAAMJ,EAAiBlK,IACrCuK,aAAc,WACZL,EAAiB,MACjBlT,EAAqB,OAEvBoD,QAAS,kBAAMpD,EAAqBgJ,IACpC7I,MAAO,CACLyN,OAAQ,oEE+OC4F,UA5SI,WAAM,IAAAnR,EACyBC,mBAAS,IADlCE,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAChByQ,EADgBtQ,EAAA,GACEiR,EADFjR,EAAA,GAAAqD,EAEiCvD,qBAFjCwD,EAAArD,OAAAC,EAAA,EAAAD,CAAAoD,EAAA,GAEhB6N,EAFgB5N,EAAA,GAEM6N,EAFN7N,EAAA,GAAAU,EAGClE,mBAAS,MAHVmE,EAAAhE,OAAAC,EAAA,EAAAD,CAAA+D,EAAA,GAGhB7G,EAHgB8G,EAAA,GAGVmN,EAHUnN,EAAA,GAAAoN,EAICC,YAAQ,MAJTC,EAAAtR,OAAAC,EAAA,EAAAD,CAAAoR,EAAA,GAIhBG,EAJgBD,EAAA,GAIVE,EAJUF,EAAA,GAAAzM,EAKShF,mBAAS,MALlBiF,EAAA9E,OAAAC,EAAA,EAAAD,CAAA6E,EAAA,GAKhBxH,EALgByH,EAAA,GAAAU,GAAAV,EAAA,GAMiBjF,mBAAS,KAN1B4F,EAAAzF,OAAAC,EAAA,EAAAD,CAAAwF,EAAA,GAMhBiM,EANgBhM,EAAA,GAMFiM,EANEjM,EAAA,GAAAW,EAOmBvG,mBAAS,IAP5BwG,EAAArG,OAAAC,EAAA,EAAAD,CAAAoG,EAAA,GAOhBuL,EAPgBtL,EAAA,GAQjBpH,GARiBoH,EAAA,GAQXnH,oBAEN0S,EAAY,SAACC,EAASxJ,GAE1B,GADIA,GAAGA,EAAEyJ,iBACJD,EAAL,CAEA,IAAME,EAAOC,SAASC,eAAeJ,GACrC,GAAKE,EAAL,CACA,IAAMxQ,EACJwQ,EAAKG,wBAAwBxR,IAC7BsR,SAASG,gBAAgBC,UACzB,IACFC,aAAS9Q,EAAG,KACZiQ,EAAQK,MAyBV,OAtBA1S,oBAAU,WACJoS,GAAMK,EAAUL,IACnB,IAEHpS,oBAAU,WACR,IAAMmT,EAAgBN,SAASO,kBAAoBP,SAASG,gBAItDK,EAA2BC,mBAHT,WACtBH,EAAcI,UAAU1M,OAAO,iBAE0B,KACrD2M,EAAW,WACML,EAAcI,UAAUE,SAAS,iBACnCN,EAAcI,UAAUG,IAAI,gBAC/CL,KAIF,OAFA7B,OAAOmC,iBAAiB,SAAUH,GAE3B,WACLhC,OAAOoC,oBAAoB,SAAUJ,KAEtC,IAGDlW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaqC,IAAKA,GAC/BxC,EAAAC,EAAAC,cAACqW,EAAA,OAAD,KACEvW,EAAAC,EAAAC,cAAA,QAAMsW,QAAQ,UACdxW,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,QACEuW,IAAI,YACJxH,KAAK,+CAEPjP,EAAAC,EAAAC,cAAA,QAAMwW,SAAS,UAAUC,QAAQ,YACjC3W,EAAAC,EAAAC,cAAA,QACEiO,KAAK,cACLwI,QAAQ,iPAIV3W,EAAAC,EAAAC,cAAA,QAAMiO,KAAK,QAAQwI,QAASC,OAG9B5W,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACVM,GACDT,EAAAC,EAAAC,cAACmF,EAAA,EAAD9B,OAAAkH,OAAA,CACEtK,UAAU,mBACVS,SAAUA,GACN,CACFgT,mBACAoB,eACAE,gBACAV,yBAGD/T,KAMTT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAC2W,GAAD,MACA7W,EAAAC,EAAAC,cAAA,2BAEAF,EAAAC,EAAAC,cAAA,uFAEQF,EAAAC,EAAAC,cAAA,kBAFR,gBAEiCF,EAAAC,EAAAC,cAAA,qBAFjC,iBAIAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kEACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACbH,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAASC,QAAQ,qBACf5D,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,wBAAT,YADF,mHAKAN,EAAAC,EAAAC,cAAA,2GAEoC,IAClCF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,8CAAT,yBAEQ,IALV,8BAOEN,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,mCAAT,yCAPF,2DAcJN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACbH,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAASC,QAAQ,kBACf5D,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,oBAAT,SADF,UACkD,IAChDN,EAAAC,EAAAC,cAAA,qBAFF,wLAKaF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,YAAT,sBALb,KAQAN,EAAAC,EAAAC,cAAA,4JAG+B,IAC7BF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,mCAAT,0CAJF,yCAaNN,EAAAC,EAAAC,cAAC4W,EAAA,EAAD,CACEC,eAAgB,SAAC9P,GACXA,EAAI,IAERyN,EAAQ,MACRD,EAAwB,MACxBF,EAAoB,CAAC,IACrBU,EAAgB,MAElB+B,cAAc,GAEdhX,EAAAC,EAAAC,cAAA,oGAEuBF,EAAAC,EAAAC,cAAA,6CAFvB,MAMFF,EAAAC,EAAAC,cAAA,oDAEC0S,GAASnO,IAAI,SAAAC,GAAA,IAAG2O,EAAH3O,EAAG2O,KAAMH,EAATxO,EAASwO,MAAOE,EAAhB1O,EAAgB0O,UAAhB,OACZpT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsB4E,IAAKsO,EAAMhC,GAAIgC,GAClDrT,EAAAC,EAAAC,cAAA,MAAIC,UAAU,+BACZH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEF,UAAU,sCACVG,GAAE,IAAAqM,OAAM0G,GACRnP,QAAS,SAAC0H,GAAD,OAAOuJ,EAAU9B,EAAMzH,KAHlC,KAOCsH,GAEHlT,EAAAC,EAAAC,cAACkT,EAAD,aAzKd,IAgTa6D,GAAS,gwDAgFhBC,GAAY,CAChB,CAAC,UAAW,UAAW,WACvB,CAAC,UAAW,UAAW,WACvB,CAAC,UAAW,UAAW,YAGnBC,GAAqB,GACrBC,GAAU,kBACdC,iBACGxS,EAAE,SAAAD,GAAA,IAAAgD,EAAArE,OAAAC,EAAA,EAAAD,CAAAqB,EAAA,GAAEC,EAAF+C,EAAA,GAAAA,EAAA,UAAY/C,IACdyS,GAAG,SAAA3D,GAAA,IAAArL,EAAA/E,OAAAC,EAAA,EAAAD,CAAAoQ,EAAA,GAAArL,EAAA,UAAAA,EAAA,KACHiP,GAAG,SAAAhP,GAAA,IAAA2B,EAAA3G,OAAAC,EAAA,EAAAD,CAAAgF,EAAA,GAAA2B,EAAA,GAAAA,EAAA,UAAAA,EAAA,KACHsN,MAAMC,aAJTJ,CAKEK,gBARoB,GAQG,SAAC/S,GAAD,MAAO,CAE5BA,EACAyB,KAAK8G,IACH,EACCiK,GAAqB,GACnB,GAAK/Q,KAAKuR,IAAIhT,EAAIiT,KAAwB,IAC3CC,uBAAa,EAAG,EAAhBA,GACA,GAEJzR,KAAKkI,IACH,GACE6I,GAAqB,GACpB,GAAK/Q,KAAKuR,IAAIhT,EAAIiT,KAAwB,IAC3CC,uBAAa,EAAG,EAAhBA,GACA,QAIJC,GAAe,CACnB1O,SAAU,KAEN2O,GAAmB,WACvB,IAAMC,EAAczL,kBAClB,kBAAMmL,gBAAM,EAAG,mDAAA/K,OAAwCsL,yBACvD,IAH2BC,EAMH9U,mBAASgU,IANNe,EAAA5U,OAAAC,EAAA,EAAAD,CAAA2U,EAAA,GAMtBE,EANsBD,EAAA,GAMfE,EANeF,EAAA,GAAAG,EAOHlV,mBAASgU,IAPNmB,EAAAhV,OAAAC,EAAA,EAAAD,CAAA+U,EAAA,GAOtBE,EAPsBD,EAAA,GAOfE,EAPeF,EAAA,GAAAG,EAQHtV,mBAASgU,IARNuB,EAAApV,OAAAC,EAAA,EAAAD,CAAAmV,EAAA,GAQtBE,EARsBD,EAAA,GAQfE,EAReF,EAAA,GAU7B9R,YAAY,WACVwR,EAASjB,MACTqB,EAASrB,MACTyB,EAASzB,OACR,KAEH,IAAM0B,EAAU1O,YAAU,CAAEC,OAAQyN,GAAc7Q,EAAGmR,IAC/CW,EAAU3O,YAAU,CAAEC,OAAQyN,GAAc7Q,EAAGuR,IAC/CQ,EAAU5O,YAAU,CAAEC,OAAQyN,GAAc7Q,EAAG2R,IAErD,OACE5Y,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,wBACV+G,QAAS,CACP,GACCiQ,GAAqB,EACtBS,GACAT,IACAnQ,KAAK,KACPiS,oBAAoB,QAEpBjZ,EAAAC,EAAAC,cAAA,YACGgX,GAAUzS,IAAI,SAACyU,EAAQC,GAAT,OACbnZ,EAAAC,EAAAC,cAAA,kBAAgBmR,GAAI2G,EAAYmB,IAC7BD,EAAOzU,IAAI,SAACrD,EAAOgY,GAAR,OACVpZ,EAAAC,EAAAC,cAAA,QACE6E,IAAK,CAACoU,EAAeC,GAAYpS,KAAK,KACtCqS,UAAWjY,EACXkY,OAAM,GAAA3M,OAAMyM,GAAcF,EAAO9R,OAAS,GAAM,IAA1C,aAMhBpH,EAAAC,EAAAC,cAACqK,EAAA,EAASgP,KAAVhW,OAAAkH,OAAA,CACEtK,UAAU,0BACN2Y,EAFN,CAGE3S,KAAI,QAAAwG,OAAUqL,EAAY,GAAtB,QAENhY,EAAAC,EAAAC,cAACqK,EAAA,EAASgP,KAAVhW,OAAAkH,OAAA,CACEtK,UAAU,0BACN4Y,EAFN,CAGE5S,KAAI,QAAAwG,OAAUqL,EAAY,GAAtB,QAENhY,EAAAC,EAAAC,cAACqK,EAAA,EAASgP,KAAVhW,OAAAkH,OAAA,CACEtK,UAAU,0BACN6Y,EAFN,CAGE7S,KAAI,QAAAwG,OAAUqL,EAAY,GAAtB,+GCnbCrU,IArDC,SAAAe,GAA4F,IAAzFd,EAAyFc,EAAzFd,QAASmL,EAAgFrK,EAAhFqK,kBAA4C5O,GAAoCuE,EAA7D8U,kBAA6D9U,EAApCvE,WAAWwS,EAAyBjO,EAAzBiO,SAAaa,EAAYjQ,OAAAkW,EAAA,EAAAlW,CAAAmB,EAAA,4EAAAvB,EACpEC,oBAAS,GAD2DE,EAAAC,OAAAmW,EAAA,EAAAnW,CAAAJ,EAAA,GACjGwW,EADiGrW,EAAA,GACrFsW,EADqFtW,EAAA,GAElGd,EAAMC,mBAeZ,OACIoX,EAAA5Z,EAAAC,cAAA,UAAAqD,OAAAkH,OAAA,CAAStK,UAAS,uBAAAwM,OAAyBgN,EAAa,WAAa,YAAnD,KAAAhN,OAAkExM,IAAiBqT,EAArG,CAA4GhR,IAAKA,EAC7GsX,SAAU,SAAAlO,GACN,IAAM+N,EAAa/N,EAAEC,OAAOkO,KAC5BH,EAAcD,MAElBE,EAAA5Z,EAAAC,cAAA,eACA2Z,EAAA5Z,EAAAC,cAAA,OAAKC,UAAU,yCACX0Z,EAAA5Z,EAAAC,cAAA,OAAKC,UAAU,0BACX0Z,EAAA5Z,EAAAC,cAAA,SAAK0D,GACLiW,EAAA5Z,EAAAC,cAAA,OAAKC,UAAU,0BACT4O,GAAiB,UAAApC,OAAcgN,EAAa,UAAY,WAAvC,cAG3BE,EAAA5Z,EAAAC,cAAA,OAAKC,UAAU,0BAAf,WAGJ0Z,EAAA5Z,EAAAC,cAAC8Z,EAAA,EAAD,CACI7Z,UAAU,kBACV8Z,SAAUJ,EAAA5Z,EAAAC,cAAA,UAAQC,UAAU,wBAAwBwZ,EAAa,cAAgB,cAEjFE,EAAA5Z,EAAAC,cAAA,OAAKC,UAAU,qDACX0Z,EAAA5Z,EAAAC,cAACga,EAAA,EAAD,CAAM/L,KAAK,QAAQgM,UAAU,IAAItU,KAAK,OAE1CgU,EAAA5Z,EAAAC,cAAA,OAAKC,UAAU,uDACX0Z,EAAA5Z,EAAAC,cAACga,EAAA,EAAD,CAAM/L,KAAK,QAAQgM,UAAU,IAAItU,KAAK,SAI9CgU,EAAA5Z,EAAAC,cAAA,OAAKC,UAAU,qBACVwS,6DCtDjB,ICAA/O,ECAAwW,EFAAC,EAAA,qBAAAnG,OAAiD,GAAMA,OCCnDoG,EAAS,GAQbC,EAAA,SAAAC,GACA,IAAA5W,EAAA,CACA,IAAA6W,EAAAlF,SAAAmF,eAAA,IAIA,IAAAC,iBAAA,WACA,OAZSL,EAASM,OAAA,GAAAC,QAAA,SAAAC,GAClB,OAAAA,QAYK/S,QAAA0S,EALL,CACAM,eAAA,IAMAnX,EAAA,WACA6W,EAAAO,YAAA,IAIEV,EAASW,KAAAT,GACX5W,KErBAsX,EAAA,CACAC,YAAA,EACAJ,eAAA,EACAK,WAAA,EACAC,SAAA,GAEAC,EAAA,qKACAC,GAAA,EAuFAC,EAAA,IArFa,WACb,SAAAC,IACA,IAAAC,EAAAC,KAEAA,KAAAC,SAAA,EAEAD,KAAAE,SAAA,WACA,OAAAH,EAAAI,YA2EA,OAvEAL,EAAAM,UAAAC,IAAA,SAAAC,GACA,ICvBuBnB,EDuBvBY,EAAAC,KAEAJ,IAIAA,GAAA,EC7BuBT,ED8BA,WACvB,IAAAoB,GAAA,EAEA,IACAA,EAA8BC,IACvB,QAGP,GAFAZ,GAAA,GAEaa,IACb,OAGAF,EACAR,EAAAM,IAAA,IACSC,EACTP,EAAAM,IAAAC,EAAA,GAEAP,EAAAW,UC9CE9B,EAAc,WAChB+B,sBAAAxB,ODmDAW,EAAAM,UAAAD,SAAA,WACAH,KAAAY,OACAZ,KAAAK,IAtDA,KAyDAP,EAAAM,UAAAhU,QAAA,WACA,IAAA2T,EAAAC,KAEAb,EAAA,WACA,OAAAY,EAAAhU,UAAAgU,EAAAhU,SAAAK,QAAAwN,SAAAiH,KAAAtB,IAGA3F,SAAAiH,KAAA1B,IAA2BT,EAAMhE,iBAAA,mBAAAyE,IAGjCW,EAAAM,UAAAM,MAAA,WACA,IAAAX,EAAAC,KAEAA,KAAAC,UACAD,KAAAC,SAAA,EACAD,KAAAjU,SAAA,IAAAiT,iBAAAgB,KAAAE,UACAF,KAAA5T,UACAuT,EAAAT,QAAA,SAAA1M,GACA,OAAekM,EAAMhE,iBAAAlI,EAAAuN,EAAAG,UAAA,OAKrBJ,EAAAM,UAAAQ,KAAA,WACA,IAAAb,EAAAC,KAEAA,KAAAC,UACAD,KAAAjU,UAAAiU,KAAAjU,SAAA+U,aACAnB,EAAAT,QAAA,SAAA1M,GACA,OAAekM,EAAM/D,oBAAAnI,EAAAuN,EAAAG,UAAA,KAErBF,KAAAC,SAAA,IAIAH,EAlFa,KDXb,SAAArB,GACAA,EAAA,wBACAA,EAAA,0BAFA,CAGCA,MAAA,KGLD,IAAAsC,EAAA,WACA,SAAAA,EAAA7X,EAAAC,EAAAI,EAAAkH,GASA,OARAuP,KAAA9W,IACA8W,KAAA7W,IACA6W,KAAAzW,QACAyW,KAAAvP,SACAuP,KAAA1X,IAAA0X,KAAA7W,EACA6W,KAAAgB,KAAAhB,KAAA9W,EACA8W,KAAAiB,OAAAjB,KAAA1X,IAAA0X,KAAAvP,OACAuP,KAAA3X,MAAA2X,KAAAgB,KAAAhB,KAAAzW,MACA3B,OAAAsZ,OAAAlB,MAOA,OAJAe,EAAAI,SAAA,SAAAC,GACA,WAAAL,EAAAK,EAAAlY,EAAAkY,EAAAjY,EAAAiY,EAAA7X,MAAA6X,EAAA3Q,SAGAsQ,EAjBA,GCAAM,EAAA,SAAAnR,GACA,OAAAA,aAAAoR,YAAA,YAAApR,GAGAqR,EAAA,SAAArR,GACA,GAAAmR,EAAAnR,GAAA,CACA,IAAAsR,EAAAtR,EAAAuR,UACAlY,EAAAiY,EAAAjY,MACAkH,EAAA+Q,EAAA/Q,OAEA,OAAAlH,IAAAkH,EAGA,IAAAiR,EAAAxR,EACAyR,EAAAD,EAAAC,YACAC,EAAAF,EAAAE,aACA,QAAAD,GAAAC,GAAA1R,EAAA2R,iBAAApW,SCZAqW,EAAA,IAAAC,IACAC,EAAA,cACAC,EAAA,eACAC,EAAA,gBAAAC,KAA8BzD,EAAM0D,WAAc1D,EAAM0D,UAAAC,WAExDC,EAAA,SAAAC,GACA,OAAAC,WAAAD,GAAA,MAGIE,EAAI,SAAAC,EAAAC,EAAAC,GAaR,YAZA,IAAAF,IACAA,EAAA,QAGA,IAAAC,IACAA,EAAA,QAGA,IAAAC,IACAA,GAAA,GAGAhb,OAAAsZ,OAAA,CACAwB,YAAAE,EAAAD,EAAAD,IAAA,EACAC,WAAAC,EAAAF,EAAAC,IAAA,KAIAE,EAAAjb,OAAAsZ,OAAA,CACA4B,cAAiBL,IACjBM,eAAkBN,IAClBjO,YAAA,IAAmBuM,EAAe,WAG9BiC,EAAiB,SAAA9S,GACrB,GAAA4R,EAAAmB,IAAA/S,GACA,OAAA4R,EAAAoB,IAAAhT,GAGA,GAAMqR,EAAQrR,GAEd,OADA4R,EAAAqB,IAAAjT,EAAA2S,GACAA,EAGA,IAAAO,EAAAC,iBAAAnT,GACAoT,EAAYjC,EAAKnR,MAAAuR,UACjB8B,GAAArB,GAAA,eAAAkB,EAAAI,UACAZ,EAAAX,EAAAE,KAAAiB,EAAAK,aAAA,IACAC,GAAAJ,GAAAtB,EAAAG,KAAAiB,EAAAO,WAAA,IACAC,GAAAN,GAAAtB,EAAAG,KAAAiB,EAAAS,WAAA,IACArb,EAAA8a,EAAA,EAAAhB,EAAAc,EAAA5a,YACAsb,EAAAR,EAAA,EAAAhB,EAAAc,EAAAU,cACAC,EAAAT,EAAA,EAAAhB,EAAAc,EAAAW,eACA1a,EAAAia,EAAA,EAAAhB,EAAAc,EAAA/Z,aACA2a,EAAAV,EAAA,EAAAhB,EAAAc,EAAAa,gBACAC,EAAAZ,EAAA,EAAAhB,EAAAc,EAAAe,kBACAC,EAAAd,EAAA,EAAAhB,EAAAc,EAAAiB,mBAEAC,EAAAjb,EAAAya,EACAS,EAAA/b,EAAAub,EACAS,GAHAlB,EAAA,EAAAhB,EAAAc,EAAAqB,kBAGAP,EACAQ,EAAAV,EAAAI,EACAO,EAAAf,EAAA1T,EAAA0R,aAAA8C,EAAAxU,EAAA0U,aAAA,EACAC,EAAAnB,EAAAxT,EAAAyR,YAAA6C,EAAAtU,EAAA4U,YAAA,EACAC,EAAAxB,EAAAe,EAAAE,EAAA,EACAQ,EAAAzB,EAAAgB,EAAAG,EAAA,EACAO,EAAA3B,IAAA/Z,MAAA+Y,EAAAc,EAAA7Z,OAAAwb,EAAAF,EACAK,EAAA5B,IAAA7S,OAAA6R,EAAAc,EAAA3S,QAAAuU,EAAAL,EACAQ,EAAAF,EAAAX,EAAAO,EAAAL,EACAY,EAAAF,EAAAX,EAAAI,EAAAD,EACAW,EAAAzd,OAAAsZ,OAAA,CACA4B,cAAmBL,EAAI0C,EAAAC,EAAAxC,GACvBG,eAAoBN,EAAIwC,EAAAC,EAAAtC,GACxBpO,YAAA,IAAqBuM,EAAe1X,EAAAb,EAAAyc,EAAAC,KAGpC,OADApD,EAAAqB,IAAAjT,EAAAmV,GACAA,GAGIC,EAAgB,SAAApV,EAAAqV,GACpB,IAAA/D,EAAWwB,EAAiB9S,GAC5B4S,EAAAtB,EAAAsB,cACAC,EAAAvB,EAAAuB,eAEA,OAAAwC,IAAyB9G,EAAwB+G,WAAA1C,EAAAC,GChF7C0C,EAAiB,WACrB,SAAAC,EAAAxV,EAAAqV,GACAvF,KAAA9P,SACA8P,KAAAuF,eAAsC9G,EAAwBkH,YAC9D3F,KAAA4F,iBAAA,CACAlD,WAAA,EACAC,UAAA,GAkBA,OAdA+C,EAAAtF,UAAAyF,SAAA,WACA,IAfuB3V,EAevBhG,EAAeob,EAAgBtF,KAAA9P,OAAA8P,KAAAuF,aAM/B,OArBuBrV,EAiBI8P,KAAA9P,OAhBjBmR,EAAKnR,IFcf,SAAAA,GACA,OAAAA,EAAA4V,SACA,YACA,aAAA5V,EAAAC,KACA,MAGA,YACA,YACA,YACA,aACA,aACA,aACA,UACA,SAGA,SE/B4B4V,CAAiB7V,IAAA,WAAAmT,iBAAAnT,GAAA5G,UAiB7C0W,KAAA4F,iBAAA1b,GAGA8V,KAAA4F,iBAAAlD,aAAAxY,EAAAwY,YAAA1C,KAAA4F,iBAAAjD,YAAAzY,EAAAyY,WAOA+C,EAxBqB,GCRrBM,EAAA,WASA,OARA,SAAA5R,EAAAyK,GACAmB,KAAAiG,cAAA,GACAjG,KAAAkG,eAAA,GACAlG,KAAAmG,mBAAA,GACAnG,KAAAjU,SAAAqI,EACA4L,KAAAnB,YANA,GCAAuH,EAAA,gECEIC,EAAmB,WASvB,OARA,SAAAnW,GACA,IAAAmV,EAAgBrC,EAAiB9S,GACjC8P,KAAA9P,SACA8P,KAAAxL,YAAA6Q,EAAA7Q,YACAwL,KAAA8C,cAAAuC,EAAAvC,cACA9C,KAAA+C,eAAAsC,EAAAtC,gBANuB,GCAnBuD,EAAqB,SAAAC,GACzB,GAAMhF,EAAQgF,GACd,OAAAC,IAMA,IAHA,IAAAC,EAAA,EACAC,EAAAH,EAAAI,WAEAD,GACAD,GAAA,EACAC,IAAAC,WAGA,OAAAF,GCVIG,EAA2B,WAC/B,IAAAC,EAAAL,IACAM,EAAA,GACEC,EAAe7H,QAAA,SAAA8H,GACjB,OAAAA,EAAAf,cAAAxa,OAAA,CAIA,IAAA6I,EAAA,GACA0S,EAAAf,cAAA/G,QAAA,SAAA+H,GACA,IAAA/a,EAAA,IAAsBma,EAAmBY,EAAA/W,QACzCgX,EAAwBZ,EAAqBW,EAAA/W,QAC7CoE,EAAAgL,KAAApT,GACA+a,EAAArB,iBAA4BN,EAAgB2B,EAAA/W,OAAA+W,EAAA1B,aAE5C2B,EAAAL,IACAA,EAAAK,KAGAJ,EAAAxH,KAAA,WACA0H,EAAAnI,SAAAtR,KAAAyZ,EAAAjb,SAAAuI,EAAA0S,EAAAjb,YAEAib,EAAAf,cAAAhH,OAAA,EAAA+H,EAAAf,cAAAxa,WAGA,QAAA0b,EAAA,EAAAC,EAAAN,EAA2CK,EAAAC,EAAA3b,OAAyB0b,IAAA,EAEpEtI,EADAuI,EAAAD,MAIA,OAAAN,GC/BIQ,EAA+B,SAAAZ,GACjC3E,EAASwF,QACTP,EAAe7H,QAAA,SAAA8H,GACjBA,EAAAf,cAAAhH,OAAA,EAAA+H,EAAAf,cAAAxa,QACAub,EAAAd,eAAAjH,OAAA,EAAA+H,EAAAd,eAAAza,QACAub,EAAAb,mBAAAjH,QAAA,SAAA+H,GACAA,EAAApB,aACYS,EAAqBW,EAAA/W,QAAAuW,EACjCO,EAAAf,cAAA3G,KAAA2H,GAEAD,EAAAd,eAAA5G,KAAA2H,SCNAF,EAAA,GACAQ,EAAA,IAAAxF,IACAyF,EAAA,EAEIC,EAAW,SAAAC,IACfF,GAAAE,EAAA,GAAwB7H,EAASa,UACjC8G,GAAAE,IACe7H,EAASe,QAGxB+G,EAAA,SAAAxB,EAAAjW,GACA,QAAAlH,EAAA,EAAiBA,EAAAmd,EAAA1a,OAA+BzC,GAAA,EAChD,GAAAmd,EAAAnd,GAAAkH,WACA,OAAAlH,EAIA,UAGIwX,EAAO,WACX,IAAAiG,EAAA,EAGA,IAFEY,EAA+BZ,GC3BxBM,EAAea,KAAA,SAAAZ,GACxB,OAAAA,EAAAf,cAAAxa,OAAA,KD6BAgb,EAAYG,IACRS,EAA+BZ,GAOnC,OEtCSM,EAAea,KAAA,SAAAZ,GACxB,OAAAA,EAAAd,eAAAza,OAAA,KPFA,WACA,IAAAoc,EAEA,oBAAAC,WACAD,EAAA,IAAAC,WAAA,SACAC,QAAA3B,MAGAyB,EAAAjO,SAAAoO,YAAA,UACAC,UAAA,eACAJ,EAAAE,QAAA3B,GAGA7N,OAAA2P,cAAAL,GKuBIM,GAGJ1B,EAAA,GAGI2B,EAAwB,WAC5B,SAAAC,KAyCA,OAvCAA,EAAAC,QAAA,SAAAlU,EAAAyK,GACA,IAAA0J,EAAA,IAAqBvC,EAAoB5R,EAAAyK,GACzCkI,EAAAzH,KAAAiJ,GACAhB,EAAApE,IAAA/O,EAAAmU,IAGAF,EAAAjc,QAAA,SAAAgI,EAAAlE,EAAAsY,GACA,GAAAjB,EAAAtE,IAAA7O,GAAA,CACA,IAAAmU,EAAAhB,EAAArE,IAAA9O,GAEAuT,EAAAY,EAAApC,mBAAAjW,GAAA,IACAqY,EAAApC,mBAAA7G,KAAA,IAA2CmG,EAAiBvV,EAAAsY,KAAAC,MACpDhB,EAAW,GACX5H,EAASM,cAKjBkI,EAAAhc,UAAA,SAAA+H,EAAAlE,GACA,GAAAqX,EAAAtE,IAAA7O,GAAA,CACA,IAAAmU,EAAAhB,EAAArE,IAAA9O,GACAjG,EAAAwZ,EAAAY,EAAApC,mBAAAjW,GAEA/B,GAAA,IACAoa,EAAApC,mBAAAlH,OAAA9Q,EAAA,GACQsZ,GAAW,MAKnBY,EAAAvH,WAAA,SAAA1M,GACA,GAAAmT,EAAAtE,IAAA7O,GAAA,CACA,IAAAmU,EAAAhB,EAAArE,IAAA9O,GACA2S,EAAA9H,OAAA8H,EAAA2B,QAAAH,GAAA,GACAhB,EAAAoB,OAAAvU,GACMqT,GAAWc,EAAApC,mBAAA1a,UAIjB4c,EA1C4B,GA6C5B5H,EAAA,WACA,QAAA+G,GGxFIoB,EAAc,WAClB,SAAAvU,EAAAwK,GACA,OAAArT,UAAAC,OACA,UAAAod,UAAA,kFAGA,uBAAAhK,EACA,UAAAgK,UAAA,iGAGIT,EAAwBE,QAAAtI,KAAAnB,GAmC5B,OAhCAxK,EAAA+L,UAAAhU,QAAA,SAAA8D,EAAAsY,GACA,OAAAhd,UAAAC,OACA,UAAAod,UAAA,6FAGA,GAAA3Y,aAAA4Y,WAAA,EACA,UAAAD,UAAA,wFAGIT,EAAwBhc,QAAA4T,KAAA9P,EAAAsY,IAG5BnU,EAAA+L,UAAA/T,UAAA,SAAA6D,GACA,OAAA1E,UAAAC,OACA,UAAAod,UAAA,+FAGA,GAAA3Y,aAAA4Y,WAAA,EACA,UAAAD,UAAA,0FAGIT,EAAwB/b,UAAA2T,KAAA9P,IAG5BmE,EAAA+L,UAAAU,WAAA,WACIsH,EAAwBtH,WAAAd,OAG5B3L,EAAA0U,SAAA,WACA,wDAGA1U,EA7CkB,GAgDH2U,EAAA,2HCnCFvV,GAVTwV,IAAUvS,MAAM,CACZjG,OAAQwY,IAAUC,OAClB3f,MAAO0f,IAAUC,OACjBvX,UAAWsX,IAAUC,OACrBtX,YAAaqX,IAAUC,OACvBrX,aAAcoX,IAAUC,OACxBpX,WAAYmX,IAAUC,SAIQ,SAAAxV,GAClC,IAAIC,EAAgB/L,OAAAuhB,EAAA,EAAAvhB,CAAA,CAChB+J,UAAW,GACXC,YAAa,GACbC,aAAc,GACdC,WAAY,IACT4B,GAGP,OAAO9L,OAAAuhB,EAAA,EAAAvhB,QAAAuhB,EAAA,EAAAvhB,CAAA,GACA+L,GADP,IAEIC,cAAenJ,KAAK8G,IAAIoC,EAAiBlD,OAASkD,EAAiBhC,UAAYgC,EAAiB9B,aAAc,GAC9GgC,aAAcpJ,KAAK8G,IAAIoC,EAAiBpK,MAAQoK,EAAiB7B,WAAa6B,EAAiB/B,YAAa,OAIvG8C,EAAqB,SAAAV,GAC9B,IAAMnN,EAAMC,mBACN4M,EAAaD,EAAuBO,GAFMxM,EAInBC,mBAAS,GAJUE,EAAAC,OAAAmW,EAAA,EAAAnW,CAAAJ,EAAA,GAIzC+B,EAJyC5B,EAAA,GAIlCyhB,EAJkCzhB,EAAA,GAAAqD,EAKjBvD,mBAAS,GALQwD,EAAArD,OAAAmW,EAAA,EAAAnW,CAAAoD,EAAA,GAKzCyF,EALyCxF,EAAA,GAKjCoe,EALiCpe,EAAA,GAOhDlE,oBAAU,WACN,GAAI2M,EAAWnK,OAASmK,EAAWjD,OAAQ,MAAO,CAAC5J,EAAK6M,GAExD,IAAMS,EAAUtN,EAAIK,QACdkN,EAAiB,IAAIC,IAAe,SAAAC,GACtC,GAAK/J,MAAMgK,QAAQD,IACdA,EAAQ7I,OAAb,CAEA,IAAMS,EAAQoI,EAAQ,GAElB/K,GAAS2C,EAAMsI,YAAYjL,OAAO6f,EAAYld,EAAMsI,YAAYjL,OAChEkH,GAAUvE,EAAMsI,YAAY/D,QAAQ4Y,EAAand,EAAMsI,YAAY/D,WAK3E,OAFA2D,EAAehI,QAAQ+H,GAEhB,kBAAMC,EAAe/H,UAAU8H,KACvC,IAEH,IAAMM,EAAchB,EAAuB7L,OAAAuhB,EAAA,EAAAvhB,QAAAuhB,EAAA,EAAAvhB,CAAA,GACpC8L,GADmC,IAEtCnK,MAAOmK,EAAWnK,OAASA,EAC3BkH,OAAQiD,EAAWjD,QAAUA,KAGjC,MAAO,CAAC5J,EAAK4N,yEChDFvO,IAXI,SAAA6C,GAAA,IAAG5C,EAAH4C,EAAG5C,OAAHmjB,EAAAvgB,EAAWwgB,eAAX,IAAAD,KAAyBtS,EAAzBjO,EAAyBiO,SAAaa,EAAtCjQ,OAAA4hB,EAAA,EAAA5hB,CAAAmB,EAAA,wCACjB0gB,EAAAnlB,EAAAC,cAAA,aAAAqD,OAAAkH,OAAA,GAAgB+I,EAAhB,CAAuBrT,UAAS,6BAAAwM,OAA+BuY,EAAU,QAAU,eAC/EvS,EACD7Q,GACCsjB,EAAAnlB,EAAAC,cAAA,OAAKC,UAAU,sBACX2B,gDCTVnC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/36.4266bf87.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/state-of-js.0eb21bca.png\";","module.exports = __webpack_public_path__ + \"static/media/js-tools.98138b79.png\";","module.exports = __webpack_public_path__ + \"static/media/lunar-missions.3489faf5.png\";","import React, { useEffect, useRef } from \"react\"\nimport * as d3 from \"d3\"\n\nimport Code from \"components/_ui/Code/Code\"\nimport Aside from \"components/_ui/Aside/Aside\"\nimport List from \"components/_ui/List/List\"\nimport Link from \"components/_ui/Link/Link\"\nimport Blockquote from \"components/_ui/Blockquote/Blockquote\"\nimport { P, CodeAndExample } from \"./examples\"\n\n// import \"./CreatingSVGElements.scss\"\n\nconst CreatingSVGElements = () => {\n  return (\n    <div className=\"CreatingSVGElements\">\n      <p>\n        When visualizing data in the browser, we'll usually want to work with{\" \"}\n        <b>SVG</b> elements, since they're much more expressive and are\n        absolutely positioned.\n        <Aside>\n          Not totally sure what <b>SVG</b> is?\n          <br />\n          Check out the{\" \"}\n          <Link to=\"https://developer.mozilla.org/en-US/docs/Web/SVG/\">\n            MDN docs on SVG\n          </Link>\n          , or learn about{\" \"}\n          <Link to=\"/blog/d3#drawing-svg-shapes\">\n            the different ways to draw in a web browser\n          </Link>\n          .\n        </Aside>\n      </p>\n      <p>\n        To start, we'll just render a simple <P>{`<svg>`}</P> element.\n      </p>\n\n      <CodeAndExample\n        code={SvgCode}\n        hasLineNumbers={false}\n        fileName=\"Svg.jsx\"\n        example={(setHighlightedMarker) => (\n          <>\n            <Svg />\n            <Aside>\n              We've added a{\" \"}\n              <span\n                style={{\n                  background: \"gold\",\n                  padding: \"0.3em 0.5em\",\n                  color: \"darkgoldenrod\",\n                }}\n              >\n                gold\n              </span>{\" \"}\n              border so we can see our <P>{`<svg>`}</P> element.\n            </Aside>\n          </>\n        )}\n      />\n\n      <p>Easy as 🥧, right?</p>\n\n      <p>\n        To visualize data, we'll want to represent data points as shapes. Let's\n        start with a simple basic shape: a{\" \"}\n        <Link to=\"https://developer.mozilla.org/en-US/docs/Web/SVG/Element/circle\">\n          <P>{`<circle>`}</P>\n        </Link>\n        .\n      </p>\n\n      <CodeAndExample\n        code={CircleWithD3Code}\n        markers={[[2, 14], [4, 10], [5], [6, 7, 8, 9]]}\n        fileName=\"Circle.jsx (d3 version)\"\n        theme=\"light\"\n        example={(getHighlightedMarkerProps) => (\n          <>\n            <CircleWithD3 />\n\n            <p>Our component does a few new things:</p>\n            <List\n              className=\"D3AndReact__marked-list\"\n              items={[\n                <div {...getHighlightedMarkerProps(0)}>\n                  uses a <P>ref</P> to store a reference to our rendered{\" \"}\n                  <P>{`<svg>`}</P> element\n                </div>,\n                <div {...getHighlightedMarkerProps(1)}>\n                  runs d3 code when the Component mounts\n                </div>,\n                <div {...getHighlightedMarkerProps(2)}>\n                  uses <P>d3.select()</P> to turn our <P>ref</P> into a{\" \"}\n                  <b>d3 selection object</b>\n                </div>,\n                <div {...getHighlightedMarkerProps(3)}>\n                  uses our <b>d3 selection object</b> to <P>append</P> a{\" \"}\n                  <P>{`<circle>`}</P> element\n                </div>,\n              ]}\n              hasNumbers\n            />\n          </>\n        )}\n      />\n\n      <p>\n        But this is quite a lot of code to draw a single shape, isn't it? And\n        aren't we supposed to use React <b>ref</b>s as sparingly as possible?\n      </p>\n\n      <Blockquote\n        source={\n          <Link to=\"https://reactjs.org/docs/refs-and-the-dom.html#when-to-use-refs\">\n            the React docs\n          </Link>\n        }\n      >\n        Avoid using refs for anything that can be done declaratively.\n      </Blockquote>\n\n      <p>\n        Thankfully, all <b>SVG</b> elements have been supported in JSX since{\" \"}\n        <Link to=\"https://reactjs.org/blog/2016/04/07/react-v15.html\">\n          React v15\n        </Link>\n        . Which means that creating a <P>{`<circle>`}</P> element is as easy\n        as...\n      </p>\n\n      <CodeAndExample\n        code={CircleCode}\n        hasLineNumbers={false}\n        // highlightedLines={[4, 5, 6, 7, 8]}\n        fileName=\"Circle.jsx (React version)\"\n        example={(setHighlightedMarker) => <Circle />}\n      />\n\n      <p>\n        What are the benefits of using standard JSX instead of running d3 code\n        on mount?\n      </p>\n\n      <List\n        items={[\n          <>\n            <b>\n              <i>Declarative</i> instead of <i>imperative</i>\n            </b>\n            <br />\n            The code describes <i>what</i> is being drawn, instead of <i>how</i>{\" \"}\n            to draw it.\n          </>,\n          <>\n            <b>Less code</b>\n            <br />\n            Our second <P>Circle</P> component has fewer than two-thirds the\n            number of lines as our first iteration/\n          </>,\n          <>\n            <b>Less hacky</b>\n            <br />\n            React is, chiefly, a rendering library, and has many optimizations\n            to keep our web apps performant. When adding elements using d3,\n            we're hacking around React, and essentially have to fight{\" \"}\n            <i>against</i> those optimizations. Hacking around your JS framework\n            is a recipe for future frustration, especially if the framework's\n            API changes.\n          </>,\n        ]}\n      />\n\n      <p>This is all well and good, but what about rendering many elements?</p>\n    </div>\n  )\n}\n\nexport default CreatingSVGElements\n\nconst Svg = () => {\n  return <svg style={{ border: \"2px solid gold\" }} />\n}\n\nconst Circle = () => {\n  return (\n    <svg>\n      <circle cx=\"150\" cy=\"77\" r=\"40\" />\n    </svg>\n  )\n}\n\nconst CircleWithD3 = () => {\n  const ref = useRef()\n\n  useEffect(() => {\n    const svgElement = d3.select(ref.current)\n    console.log(svgElement)\n    svgElement.append(\"circle\").attr(\"cx\", 150).attr(\"cy\", 70).attr(\"r\", 50)\n  }, [])\n\n  return <svg ref={ref} />\n}\n\nexport const SvgCode = `const Svg = () => {\n  return (\n    <svg style={{\n      border: \"2px solid gold\"\n    }} />\n  )\n}`\n\nexport const CircleWithD3Code = `const Circle = () => {\n  const ref = useRef()\n\n  useEffect(() => {\n    const svgElement = d3.select(ref.current)\n    svgElement.append(\"circle\")\n      .attr(\"cx\", 150)\n      .attr(\"cy\", 70)\n      .attr(\"r\",  50)\n  }, [])\n\n  return (\n    <svg\n      ref={ref}\n    />\n  )\n}`\n\nexport const CircleCode = `const Circle = () => {\n  return (\n    <svg>\n      <circle\n        cx=\"150\"\n        cy=\"77\"\n        r=\"40\"\n      />\n    </svg>\n  )\n}`\n","import React, { useEffect, useRef, useState } from \"react\"\nimport { useSpring, animated } from \"react-spring\"\nimport * as d3 from \"d3\"\nimport { format, range } from \"d3\"\nimport { times } from \"lodash\"\n\nimport { useInterval } from \"utils/utils.js\"\nimport Aside from \"components/_ui/Aside/Aside\"\nimport Button from \"components/_ui/Button/Button\"\nimport Code from \"components/_ui/Code/Code\"\nimport Expandy from \"components/_ui/Expandy/Expandy\"\nimport Link from \"components/_ui/Link/Link\"\nimport List from \"components/_ui/List/List\"\nimport Blockquote from \"components/_ui/Blockquote/Blockquote\"\nimport { P, CodeAndExample } from \"./examples\"\n\nconst CreatingManySVGElements = () => {\n  const [dataset, setDataset] = useState(generateDataset())\n\n  return (\n    <div className=\"CreatingManySVGElements\">\n      <p>\n        One of the core concepts of d3.js is <b>binding data to DOM elements</b>\n        .\n        <Aside>\n          If you're unfamiliar with d3.s data binding concept, I'd recommend\n          reading up on it{\" \"}\n          <Link to=\"https://observablehq.com/@d3/selection-join\">\n            on Observable\n          </Link>{\" \"}\n          or getting a full rundown with{\" \"}\n          <Link to=\"https://newline.co/fullstack-d3\">\n            Fullstack Data Visualization and D3\n          </Link>\n          .\n        </Aside>\n      </p>\n\n      <p>\n        Let's generate a dataset of 10 random <P>[x, y]</P> coordinates.\n      </p>\n\n      <Expandy trigger=\"How are we generating this data?\">\n        <p>\n          We've created a <P>generateDataset()</P> function that outputs an\n          array of 10 arrays.\n        </p>\n\n        <CodeAndExample\n          code={generateDatasetCode}\n          hasLineNumbers={false}\n          example={(getHighlightedMarkerProps) => (\n            <>\n              <Button\n                style={{\n                  position: \"absolute\",\n                  right: \"2em\",\n                  top: \"14.5em\",\n                }}\n                onClick={() => setDataset(generateDataset())}\n              >\n                Re-generate data\n              </Button>\n\n              <div\n                style={{\n                  paddingTop: \"2em\",\n                  fontFamily: \"monospace\",\n                  whiteSpace: \"pre-line\",\n                  fontSize: \"0.9em\",\n                  lineHeight: \"1.4em\",\n                  padding: \"1em 1.6em\",\n                  margin: \"0 -1.6em\",\n                  background: \"white\",\n                }}\n              >\n                <div>[</div>\n                {dataset.map(([x, y], i) => (\n                  <div\n                    key={i}\n                    style={{\n                      paddingLeft: \"1em\",\n                    }}\n                  >\n                    [\n                    <span\n                      style={{\n                        display: \"inline-block\",\n                        width: \"4em\",\n                        textAlign: \"right\",\n                      }}\n                    >\n                      {format(\".2f\")(x)}\n                    </span>\n                    ,\n                    <span\n                      style={{\n                        display: \"inline-block\",\n                        width: \"4em\",\n                        textAlign: \"right\",\n                      }}\n                    >\n                      {format(\".2f\")(y)}\n                    </span>\n                    ],\n                  </div>\n                ))}\n                <div>]</div>\n              </div>\n            </>\n          )}\n        />\n        <div className=\"D3AndReact__side-by-side\">\n          <div className=\"D3AndReact__side-by-side__section\">\n            <Code doWrap={false} hasLineNumbers={false} markers={[]}>\n              {generateDatasetCode}\n            </Code>\n          </div>\n        </div>\n      </Expandy>\n\n      <p>\n        What would it look like if we drew a <P>{`<circle>`}</P> at each of\n        these locations? Starting with the naive d3 code:\n      </p>\n\n      <CodeAndExample\n        code={CirclesWithD3Code}\n        markers={[[9, 10, 11], [15], [17, 18, 19, 20]]}\n        fileName=\"Circles.jsx (d3 version)\"\n        theme=\"light\"\n        example={(getHighlightedMarkerProps) => (\n          <>\n            <br />\n\n            <CirclesWithD3 />\n\n            <p>\n              This code looks very similar to our previous code, with two\n              changes:\n            </p>\n\n            <List\n              className=\"D3AndReact__marked-list\"\n              items={[\n                <div {...getHighlightedMarkerProps(0)}>\n                  We're creating a selection of all <P>{`<circle>`}</P> elements\n                  and using our d3 selection's{\" \"}\n                  <Link to=\"https://github.com/d3/d3-selection#selection_join\">\n                    <P>.join()</P>\n                  </Link>{\" \"}\n                  method to add a circle for each data point\n                </div>,\n                <div {...getHighlightedMarkerProps(1)}>\n                  We're re-running our d3 code whenever <P>dataset</P> changes\n                </div>,\n                <div {...getHighlightedMarkerProps(2)}>\n                  We're using <P>useInterval()</P> (from the end of{\" \"}\n                  <Link to=\"/blog/react-hooks\">Thinking in React Hooks</Link>)\n                  to re-calculate our <P>dataset</P> every two seconds\n                </div>,\n              ]}\n              hasNumbers\n            />\n\n            <Aside>\n              Note that <P>{`<svg>`}</P>s are, by default, 300px x 150px - in\n              this case, we're using the{\" \"}\n              <Link kto=\"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox\">\n                <P>viewBox</P>\n              </Link>{\" \"}\n              element to re-define our working grid, just so we can use\n              friendlier numbers.\n            </Aside>\n\n            <br />\n            <br />\n          </>\n        )}\n      />\n\n      <p>\n        Okay, we're back to our original issues: our code is a bit{\" \"}\n        <b>imperative</b>, <b>verbose</b>, and <b>hacky</b>. What would this\n        look like using React to render our <P>{`<circle>`}</P>s?\n      </p>\n\n      <CodeAndExample\n        code={CirclesWithReactCode}\n        markers={[\n          [13, 19],\n          [14, 15, 16, 17, 18],\n        ]}\n        fileName=\"Circles.jsx (React version)\"\n        example={(getHighlightedMarkerProps) => (\n          <>\n            <br />\n\n            <CirclesWithReact />\n\n            <p>Much clearer! In this code, we're...</p>\n\n            <List\n              className=\"D3AndReact__marked-list\"\n              items={[\n                <div {...getHighlightedMarkerProps(0)}>\n                  Looping over each data point, and\n                </div>,\n                <div {...getHighlightedMarkerProps(1)}>\n                  rendering a <P>{`<circle`}</P> at <P>[x, y]</P>\n                </div>,\n              ]}\n              hasNumbers\n            />\n\n            <br />\n            <br />\n          </>\n        )}\n      />\n\n      <Blockquote source=\"you, probably\">\n        But d3 is great at animating enter and exit transitions!\n      </Blockquote>\n\n      <p>\n        We all know that d3 is great at keeping track of what elements are new\n        and animating elements in and out. And if you don't you should{\" \"}\n        <Link to=\"https://newline.co/fullstack-d3\">read a book</Link>.\n      </p>\n\n      <p>Let's look at an example with transitions:</p>\n\n      <CodeAndExample\n        code={TransitionsWithD3Code}\n        markers={[d3.range(16, 29), d3.range(29, 32), d3.range(32, 41)]}\n        fileName=\"Transitions.jsx (d3 version)\"\n        theme=\"light\"\n        size=\"s\"\n        example={(getHighlightedMarkerProps) => (\n          <>\n            <br />\n\n            <TransitionsWithD3 />\n\n            <p>Wow, this is a lot of code!</p>\n\n            <p>\n              <b>Don't feel the need to run through all of it</b> -- the gist is\n              that we have 6 <P>{`<circle>`}</P>s, and every two seconds, we\n              randomly choose some of them to show up.\n            </p>\n\n            <List\n              className=\"D3AndReact__marked-list\"\n              items={[\n                <div {...getHighlightedMarkerProps(0)}>\n                  circles that are new are animated in in{\" \"}\n                  <span style={{ color: \"cornflowerblue\", fontWeight: 600 }}>\n                    blue\n                  </span>\n                  ,\n                </div>,\n                <div {...getHighlightedMarkerProps(1)}>\n                  circles that stay for multiple rounds turn{\" \"}\n                  <span style={{ color: \"lightgrey\", fontWeight: 600 }}>\n                    grey\n                  </span>\n                  ,\n                </div>,\n                <div {...getHighlightedMarkerProps(2)}>\n                  circles that aren't in the new round are animated out in{\" \"}\n                  <span style={{ color: \"tomato\", fontWeight: 600 }}>red</span>,\n                </div>,\n              ]}\n              hasNumbers\n            />\n\n            <br />\n          </>\n        )}\n      />\n\n      <p>\n        Okay, so we can see that this code is hard to scan, but how would we\n        implement this using React?\n      </p>\n\n      <CodeAndExample\n        code={TransitionsWithReactCode}\n        markers={[\n          d3.range(12, 19),\n          [23],\n          [24, 26, 27, 28],\n          d3.range(30, 37),\n          [39],\n        ]}\n        fileName=\"Transitions.jsx (d3 version)\"\n        // size=\"s\"\n        example={(getHighlightedMarkerProps) => (\n          <>\n            <br />\n\n            <TransitionsWithReact />\n\n            <p>\n              Animating elements <i>out</i> is not very straightforward in\n              React, so let's keep all of the <P>{`<circle>`}</P>s rendered, and\n              give them an <P>opacity</P> if they're not in the currently shown\n              circles.\n            </p>\n\n            <p>In this code, we:</p>\n\n            <List\n              className=\"D3AndReact__marked-list\"\n              items={[\n                <div {...getHighlightedMarkerProps(0)}>\n                  loop over our <P>allCircles</P> array and create a{\" \"}\n                  <P>{`<AnimatedCircle>`}</P> for each item,\n                </div>,\n                <div {...getHighlightedMarkerProps(1)}>\n                  define a <P>AnimatedCircle</P> component that takes to props:{\" \"}\n                  <P>index</P> (for positioning), and <P>isShowing</P>\n                </div>,\n                <div {...getHighlightedMarkerProps(2)}>\n                  cache the last <P>isShowing</P> value, so we can see whether\n                  the <P>{`<circle>`}</P> is entering or exiting\n                </div>,\n                <div {...getHighlightedMarkerProps(3)}>\n                  use the <P>useSpring</P> hook from{\" \"}\n                  <Link to=\"https://www.react-spring.io\">react-spring</Link> to\n                  animate the <P>{`<circle>`}</P>'s <b>radius</b> and{\" \"}\n                  <b>opacity</b>\n                </div>,\n                <div {...getHighlightedMarkerProps(4)}>\n                  use <P>animated</P> from{\" \"}\n                  <Link to=\"https://www.react-spring.io\">react-spring</Link> to\n                  animate our <P>{`<circle>`}</P>'s and spread our animated\n                  values as element attributes\n                </div>,\n              ]}\n              hasNumbers\n            />\n\n            <br />\n          </>\n        )}\n      />\n\n      <p>\n        While this code isn't necessarily much <i>shorter</i> than the d3 code,\n        it is a lot easier to read.\n      </p>\n    </div>\n  )\n}\n\nexport default CreatingManySVGElements\n\nconst generateDataset = () =>\n  Array(10)\n    .fill(0)\n    .map(() => [Math.random() * 80 + 10, Math.random() * 35 + 10])\nconst generateDatasetCode = `const generateDataset = () => (\n  Array(10).fill(0).map(() => ([\n    Math.random() * 80 + 10,\n    Math.random() * 35 + 10,\n  ]))\n)`\n\nconst CirclesWithD3 = () => {\n  const [ref, isInView] = useIsInView()\n  const [dataset, setDataset] = useState(generateDataset())\n\n  useInterval(\n    () => {\n      setDataset(generateDataset())\n    },\n    isInView ? 2000 : null\n  )\n\n  useEffect(() => {\n    const svgElement = d3.select(ref.current)\n    svgElement\n      .selectAll(\"circle\")\n      .data(dataset)\n      .join(\"circle\")\n      .attr(\"cx\", (d) => d[0])\n      .attr(\"cy\", (d) => d[1])\n      .attr(\"r\", 3)\n  }, [dataset])\n\n  return <svg viewBox=\"0 0 100 50\" width=\"100%\" ref={ref} />\n}\nconst CirclesWithD3Code = `const Circles = () => {\n  const [dataset, setDataset] = useState(\n    generateDataset()\n  )\n  const ref = useRef()\n\n  useEffect(() => {\n    const svgElement = d3.select(ref.current)\n    svgElement.selectAll(\"circle\")\n      .data(dataset)\n      .join(\"circle\")\n        .attr(\"cx\", d => d[0])\n        .attr(\"cy\", d => d[1])\n        .attr(\"r\",  3)\n  }, [dataset])\n\n  useInterval(() => {\n    const newDataset = generateDataset()\n    setDataset(newDataset)\n  }, 2000)\n\n  return (\n    <svg\n      viewBox=\"0 0 100 50\"\n      ref={ref}\n    />\n  )\n}`\n\nconst useIsInView = (margin = \"0px\") => {\n  const [isIntersecting, setIntersecting] = useState(false)\n  const ref = useRef()\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        setIntersecting(entry.isIntersecting)\n      },\n      { rootMargin: margin }\n    )\n    if (ref.current) observer.observe(ref.current)\n    return () => {\n      observer.unobserve(ref.current)\n    }\n  }, [])\n  return [ref, isIntersecting]\n}\n\nconst CirclesWithReact = () => {\n  const [ref, isInView] = useIsInView()\n  const [dataset, setDataset] = useState(generateDataset())\n\n  useInterval(\n    () => {\n      setDataset(generateDataset())\n    },\n    isInView ? 2000 : null\n  )\n\n  return (\n    <svg viewBox=\"0 0 100 50\" width=\"100%\" ref={ref}>\n      {dataset.map(([x, y], i) => (\n        <circle cx={x} cy={y} r=\"3\" />\n      ))}\n    </svg>\n  )\n}\nconst CirclesWithReactCode = `const Circles = () => {\n  const [dataset, setDataset] = useState(\n    generateDataset()\n  )\n\n  useInterval(() => {\n    const newDataset = generateDataset()\n    setDataset(newDataset)\n  }, 2000)\n\n  return (\n    <svg viewBox=\"0 0 100 50\">\n      {dataset.map(([x, y], i) => (\n        <circle\n          cx={x}\n          cy={y}\n          r=\"3\"\n        />\n      ))}\n    </svg>\n  )\n}`\n\nconst allCircles = range(0, 6)\nconst generateCircles = () => allCircles.filter(() => Math.random() < 0.5)\nconst TransitionsWithD3 = () => {\n  const [ref, isInView] = useIsInView()\n  const [dataset, setDataset] = useState(generateCircles())\n\n  useInterval(\n    () => {\n      setDataset(generateCircles())\n    },\n    isInView ? 2000 : null\n  )\n\n  useEffect(() => {\n    const svgElement = d3.select(ref.current)\n    svgElement\n      .selectAll(\"circle\")\n      .data(dataset, (d) => d)\n      .join(\n        (enter) =>\n          enter\n            .append(\"circle\")\n            .attr(\"cx\", (d) => d * 15 + 10)\n            .attr(\"cy\", 10)\n            .attr(\"r\", 0)\n            .attr(\"fill\", \"cornflowerblue\")\n            .call((enter) =>\n              enter\n                .transition()\n                .duration(1200)\n                .attr(\"cy\", 10)\n                .attr(\"r\", 6)\n                .style(\"opacity\", 1)\n            ),\n        (update) => update.attr(\"fill\", \"lightgrey\"),\n        (exit) =>\n          exit\n            .attr(\"fill\", \"tomato\")\n            .call((exit) =>\n              exit\n                .transition()\n                .duration(1200)\n                .attr(\"r\", 0)\n                .style(\"opacity\", 0)\n                .remove()\n            )\n      )\n  }, [dataset])\n\n  return <svg viewBox=\"0 0 100 20\" width=\"100%\" ref={ref} />\n}\nconst TransitionsWithD3Code = `const AnimatedCircles = () => {\n  const [visibleCircles, setVisibleCircles] = useState(\n    generateCircles()\n  )\n  const ref = useRef()\n\n  useInterval(() => {\n    setVisibleCircles(generateCircles())\n  }, 2000)\n\n  useEffect(() => {\n    const svgElement = d3.select(ref.current)\n    svgElement.selectAll(\"circle\")\n      .data(visibleCircles, d => d)\n      .join(\n        enter => (\n          enter.append(\"circle\")\n              .attr(\"cx\", d => d * 15 + 10)\n              .attr(\"cy\", 10)\n              .attr(\"r\", 0)\n              .attr(\"fill\", \"cornflowerblue\")\n            .call(enter => (\n              enter.transition().duration(1200)\n                .attr(\"cy\", 10)\n                .attr(\"r\", 6)\n                .style(\"opacity\", 1)\n            ))\n        ),\n        update => (\n          update.attr(\"fill\", \"lightgrey\")\n        ),\n        exit => (\n          exit.attr(\"fill\", \"tomato\")\n            .call(exit => (\n              exit.transition().duration(1200)\n                .attr(\"r\", 0)\n                .style(\"opacity\", 0)\n                .remove()\n            ))\n        ),\n      )\n  }, [dataset])\n\n  return (\n    <svg\n      viewBox=\"0 0 100 20\"\n      ref={ref}\n    />\n  )\n}`\n\nconst TransitionsWithReact = () => {\n  const [ref, isInView] = useIsInView()\n  const [dataset, setDataset] = useState(generateCircles())\n\n  useInterval(\n    () => {\n      setDataset(generateCircles())\n    },\n    isInView ? 2000 : null\n  )\n\n  return (\n    <svg viewBox=\"0 0 100 20\" width=\"100%\" ref={ref}>\n      {allCircles.map((d) => (\n        <TransitionsWithReactCircle\n          key={d}\n          index={d}\n          isShowing={dataset.includes(d)}\n        />\n      ))}\n    </svg>\n  )\n}\n\nconst TransitionsWithReactCircle = ({ index, isShowing }) => {\n  const wasShowing = useRef(false)\n\n  useEffect(() => {\n    wasShowing.current = isShowing\n  }, [isShowing])\n\n  const style = useSpring({\n    config: {\n      duration: 1200,\n    },\n    r: isShowing ? 6 : 0,\n    opacity: isShowing ? 1 : 0,\n  })\n\n  return (\n    <animated.circle\n      cx={index * 15 + 10}\n      cy=\"10\"\n      fill={\n        !isShowing\n          ? \"tomato\"\n          : !wasShowing.current\n          ? \"cornflowerblue\"\n          : \"lightgrey\"\n      }\n      {...style}\n    />\n  )\n}\n\nconst TransitionsWithReactCode = `const AnimatedCircles = () => {\n  const [visibleCircles, setVisibleCircles] = useState(\n    generateCircles()\n  )\n\n  useInterval(() => {\n    setVisibleCircles(generateCircles())\n  }, 2000)\n\n  return (\n    <svg viewBox=\"0 0 100 20\">\n      {allCircles.map(d => (\n        <AnimatedCircle\n          key={d}\n          index={d}\n          isShowing={visibleCircles.includes(d)}\n        />\n      ))}\n    </svg>\n  )\n}\n\nconst AnimatedCircle = ({ index, isShowing }) => {\n  const wasShowing = useRef(false)\n\n  useEffect(() => {\n    wasShowing.current = isShowing\n  }, [isShowing])\n\n  const style = useSpring({\n    config: {\n      duration: 1200,\n    },\n    r: isShowing ? 6 : 0,\n    opacity: isShowing ? 1 : 0,\n  })\n\n  return (\n    <animated.circle {...style}\n      cx={index * 15 + 10}\n      cy=\"10\"\n      fill={\n        !isShowing          ? \"tomato\" :\n        !wasShowing.current ? \"cornflowerblue\" :\n                              \"lightgrey\"\n      }\n    />\n  )\n}`\n","import React, { useEffect, useMemo, useRef, useState } from \"react\"\nimport * as d3 from \"d3\"\n\nimport Code from \"components/_ui/Code/Code\"\nimport Aside from \"components/_ui/Aside/Aside\"\nimport List from \"components/_ui/List/List\"\nimport Link from \"components/_ui/Link/Link\"\nimport { P, CodeAndExample } from \"./examples\"\n\nconst Axes = () => {\n  return (\n    <>\n      <p>\n        The d3.js API is expansive, and we can become reliant on it to do the\n        heavy lifting for us. Especially with the several methods that will\n        create several DOM elements for us.\n      </p>\n      <p>\n        For example, the <P>.axisBottom()</P> method will create a whole chart\n        axis in one line of code!\n      </p>\n\n      <CodeAndExample\n        code={ChartAxisCode}\n        markers={[[5, 6, 7], [2, 9, 17], [10], [11], [12]]}\n        fileName=\"Axis.jsx (d3 version)\"\n        theme=\"light\"\n        example={(getHighlightedMarkerProps) => (\n          <>\n            <br />\n\n            <Axis />\n\n            <p>So easy! All we need to do to create a bottom axis is:</p>\n\n            <List\n              className=\"D3AndReact__marked-list\"\n              items={[\n                <div {...getHighlightedMarkerProps(0)}>\n                  create a scale that converts from the data values (\n                  <P>0 - 100</P>) to the corresponding physical location (\n                  <P>10px - 290px</P>)\n                  <Aside>\n                    Not super familiar with <b>scales</b>?\n                    <br />\n                    <br />\n                    Really understand them by working through{\" \"}\n                    <Link to=\"https://www.newline.co/fullstack-d3\">\n                      Fullstack D3 and Data Visualization\n                    </Link>\n                    , or get the details in the{\" \"}\n                    <Link to=\"https://github.com/d3/d3-scale\">\n                      technical docs\n                    </Link>\n                  </Aside>\n                </div>,\n                <div {...getHighlightedMarkerProps(1)}>\n                  store the <P>{`<svg>`}</P> element in a <P>ref</P> and create\n                  a <b>d3 selection object</b> containing it\n                </div>,\n                <div {...getHighlightedMarkerProps(2)}>\n                  pass our scale to <P>.axisBottom()</P> to create an{\" \"}\n                  <P>axisGenerator</P>\n                </div>,\n                <div {...getHighlightedMarkerProps(3)}>\n                  create a new <P>{`<g>`}</P> element to house our axis' DOM\n                  elements\n                </div>,\n                <div {...getHighlightedMarkerProps(4)}>\n                  <P>.call()</P> our <P>axisGenerator</P> on our new{\" \"}\n                  <P>{`<g>`}</P> element. This is effectively the same as the\n                  expression:\n                  <br />\n                  <Code hasLineNumbers={false}>\n                    {`const newG = svgElement.append(\"g\")\naxisGenerator(newG)`}\n                  </Code>\n                  but it lets us keep the chain of d3 methods going\n                </div>,\n              ]}\n              hasNumbers\n            />\n          </>\n        )}\n      />\n\n      <p>\n        Well that was pretty easy, wasn't it? Unfortunately, we would prefer to\n        keep things React-y (for all of the reasons mentioned above).\n      </p>\n\n      <p>\n        So if we can't use <P>.axisBottom()</P> to create our axis DOM elements,\n        what <i>can</i> we do?\n      </p>\n\n      <CodeAndExample\n        code={ChartAxisReactCode}\n        markers={[\n          [3, 4, 5],\n          [7],\n          [8, 9, 10, 11],\n          [16, 17, 18, 19],\n          d3.range(20, 40),\n        ]}\n        fileName=\"Axis.jsx (React version)\"\n        example={(getHighlightedMarkerProps) => (\n          <>\n            <br />\n\n            <ChartAxisReact />\n\n            <p>\n              While we don't want to use a d3 method that creates DOM elements (\n              <P>.axisBottom()</P>), we <i>can</i> use the d3 methods that d3\n              uses internally to create axes!\n            </p>\n\n            <List\n              className=\"D3AndReact__marked-list\"\n              items={[\n                <div {...getHighlightedMarkerProps(0)}>\n                  create a scale that converts from the data values (\n                  <P>0 - 100</P>) to the corresponding physical location (\n                  <P>10px - 290px</P>)\n                </div>,\n                <div {...getHighlightedMarkerProps(1)}>\n                  use our d3 scale's <P>.ticks()</P> method\n                  <Aside>\n                    The <P>.ticks()</P> method of a scale will return an array\n                    of approximately 10 equally-spaced values that span the\n                    scale's <P>domain</P>. Learn more in the{\" \"}\n                    <Link to=\"https://github.com/d3/d3-scale#continuous_ticks\">\n                      d3 docs.\n                    </Link>\n                  </Aside>\n                  Our <P>xScale</P>'s <P>.ticks()</P> method will return:\n                  <br />\n                  <Code size=\"s\" hasLineNumbers={false}>\n                    {`[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]`}\n                  </Code>\n                </div>,\n                <div {...getHighlightedMarkerProps(2)}>\n                  map over our array of tick values and create an object that\n                  contains the <P>value</P> and <P>xOffset</P> (converted using{\" \"}\n                  <P>xScale</P>)\n                </div>,\n                <div {...getHighlightedMarkerProps(3)}>\n                  create a <P>{`<path>`}</P> element that marks that top of our\n                  axis. It starts at <P>[9, 0]</P> and moves horizontally to{\" \"}\n                  <P>[290, 0]</P>\n                </div>,\n                <div {...getHighlightedMarkerProps(4)}>\n                  for each of our ticks, we want to create a <b>group</b> that\n                  is shifted the appropriate number of pixels to the right.\n                  <br />\n                  <br />\n                  Each of our groups will contain a tick <P>{`<line>`}</P> and{\" \"}\n                  <P>{`<text>`}</P> containing the tick value\n                </div>,\n              ]}\n              hasNumbers\n            />\n          </>\n        )}\n      />\n\n      <p>\n        Okay! So this is definitely more code. But that makes sense, since we're\n        basically duplicating some of the d3 library code, in our own code base.\n      </p>\n\n      <p>\n        But here's the thing: <i>our new code is way more readable</i> - we know\n        what elements we're rendering just by looking at the <P>return</P>{\" \"}\n        statement. Plus, we can extract all of this logic into a single{\" \"}\n        <P>Axis</P> component. This we we can customize it however we like,\n        without having to think about this extra logic again.\n      </p>\n\n      <p>\n        What would a more re-useable <P>Axis</P> component look like?\n      </p>\n\n      <AxisPlayground />\n\n      <p>\n        Now, our <P>Axis</P> component really only works for axes at the bottom\n        of a chart, at the moment. But hopefully this gives you enough of an\n        idea of how easy it is to duplicate d3's axis drawing methods.\n      </p>\n\n      <Aside>\n        For a full example that covers all axis orientations, check out{\" \"}\n        <Link to=\"https://www.newline.co/fullstack-d3\">\n          Fullstack D3 and Data Visualization\n        </Link>\n      </Aside>\n\n      <p>\n        I use this method for recreating any d3 methods that create multiple\n        elements. In addition to the usual benefits of using React to render\n        elements (<b>declarative</b> and <b>less hacky</b>), I find that this\n        code is easier for other developers who are less familiar with the d3\n        API to understand the code.\n      </p>\n\n      <p>\n        We truly get the best of both worlds, since the d3 API surfaces many of\n        its internal methods.\n      </p>\n    </>\n  )\n}\n\nexport default Axes\n\nconst AxisPlayground = () => {\n  const [domain0, setDomain0] = useState(0)\n  const [domain1, setDomain1] = useState(100)\n  const [range0, setRange0] = useState(10)\n  const [range1, setRange1] = useState(290)\n\n  return (\n    <CodeAndExample\n      code={ChartAxisReactComponentCode}\n      markers={[\n        [10, 11, 12, 13, 14, 15, 16, 17, 19],\n        [25, 26],\n        [32, 33, 34, 35, 36, 37],\n      ]}\n      fileName=\"Axis.jsx (React version)\"\n      example={(getHighlightedMarkerProps) => (\n        <>\n          <br />\n          <p>\n            Our <P>Axis</P> component will take two props: <P>domain</P> and{\" \"}\n            <P>range</P>.\n          </p>\n          <div className=\"D3AndReact__inputs__note\">\n            Try updating the props values:\n          </div>\n          <div className=\"D3AndReact__inputs\">\n            <div className=\"D3AndReact__inputs__row\">\n              <div className=\"D3AndReact__inputs__row__label\">domain: </div>\n              [\n              <input\n                value={domain0}\n                onChange={(e) => setDomain0(+e.target.value)}\n                type=\"number\"\n              />\n              ,\n              <input\n                value={domain1}\n                onChange={(e) => setDomain1(+e.target.value)}\n                type=\"number\"\n              />\n              ]\n            </div>\n            <div className=\"D3AndReact__inputs__row\">\n              <div className=\"D3AndReact__inputs__row__label\">range: </div>\n              [\n              <input\n                value={range0}\n                onChange={(e) => setRange0(+e.target.value)}\n                type=\"number\"\n              />\n              ,\n              <input\n                value={range1}\n                onChange={(e) => setRange1(+e.target.value)}\n                type=\"number\"\n              />\n              ]\n            </div>\n          </div>\n\n          <ChartAxisReactComponent\n            domain={[domain0, domain1]}\n            range={[range0, range1]}\n          />\n\n          <p>\n            We really didn't have to make many changes here! Let's look at the\n            main updates:\n          </p>\n\n          <List\n            className=\"D3AndReact__marked-list\"\n            items={[\n              <div {...getHighlightedMarkerProps(0)}>\n                we check the range to dynamically change the number of ticks\n                that we're aiming for (which we can set by passing the number to{\" \"}\n                <P>.ticks()</P>).\n                <br />\n                <Aside>\n                  Note that <P>.ticks()</P> will aim for the passed number of\n                  ticks, but will also defer to friendlier, round numbers. For\n                  example, you could pass <P>10</P> but end up with 12 ticks.\n                </Aside>\n                We're aiming for one tick per 30 pixels, with a minimum of 1.\n              </div>,\n              <div {...getHighlightedMarkerProps(1)}>\n                we want to re-calculate our <P>ticks</P> when our props change.\n                We want to pay attention to the <b>values</b> of our{\" \"}\n                <P>domain</P> and <P>range</P> arrays, instead of the array\n                reference, so we'll <P>.join()</P> them into a string.\n                <br />\n                For example, we want to check a string of <P>\"0-100\"</P> instead\n                of a <b>reference</b> to the array <P>[0, 100]</P>.\n                <br />\n                This will give us the ability to create the <P>\n                  domain\n                </P> and <P>range</P> arrays within <P>Axis</P>'s parent\n                component.\n              </div>,\n              <div {...getHighlightedMarkerProps(2)}>\n                a small change, but potentially important. We'll add a duplicate{\" \"}\n                <i>first</i> and <i>last</i> tick mark, in case our ticks don't\n                cover the top or bottom of our <P>domain</P>.\n                <br />\n                <Link\n                  onClick={() => {\n                    setDomain0(0)\n                    setDomain1(110)\n                    setRange0(10)\n                    setRange1(150)\n                  }}\n                >\n                  For example, <P>[0, 100]</P> and <P>[10, 150]</P>\n                  <br />\n                  (click to update example)\n                </Link>\n              </div>,\n            ]}\n            hasNumbers\n          />\n        </>\n      )}\n    />\n  )\n}\n\nconst Axis = () => {\n  const ref = useRef()\n\n  useEffect(() => {\n    const xScale = d3.scaleLinear().domain([0, 100]).range([10, 290])\n\n    const svgElement = d3.select(ref.current)\n    const axisGenerator = d3.axisBottom(xScale)\n    svgElement.append(\"g\").call(axisGenerator)\n  }, [])\n\n  return <svg height=\"30\" ref={ref} />\n}\n\nconst ChartAxisCode = `const Axis = () => {\n  const ref = useRef()\n\n  useEffect(() => {\n    const xScale = d3.scaleLinear()\n      .domain([0, 100])\n      .range([10, 290])\n\n    const svgElement = d3.select(ref.current)\n    const axisGenerator = d3.axisBottom(xScale)\n    svgElement.append(\"g\")\n      .call(axisGenerator)\n  }, [])\n\n  return (\n    <svg\n      ref={ref}\n    />\n  )\n}`\n\nconst ChartAxisReact = () => {\n  const ticks = useMemo(() => {\n    const xScale = d3.scaleLinear().domain([0, 100]).range([10, 290])\n\n    return xScale.ticks().map((value) => ({\n      value,\n      xOffset: xScale(value),\n    }))\n  }, [])\n\n  return (\n    <svg height=\"30\">\n      <path d=\"M 9.5 0 H 290.5\" stroke=\"currentColor\" />\n      {ticks.map(({ value, xOffset }) => (\n        <g key={value} transform={`translate(${xOffset}, 0)`}>\n          <line y2=\"6\" stroke=\"currentColor\" />\n          <text\n            key={value}\n            style={{\n              fontSize: \"10px\",\n              textAnchor: \"middle\",\n              transform: \"translateY(20px)\",\n            }}\n          >\n            {value}\n          </text>\n        </g>\n      ))}\n    </svg>\n  )\n}\n\nconst ChartAxisReactCode = `const Axis = () => {\n  const ticks = useMemo(() => {\n    const xScale = d3.scaleLinear()\n      .domain([0, 100])\n      .range([10, 290])\n\n    return xScale.ticks()\n      .map(value => ({\n        value,\n        xOffset: xScale(value)\n      }))\n  }, [])\n\n  return (\n    <svg>\n      <path\n        d=\"M 9.5 0.5 H 290.5\"\n        stroke=\"currentColor\"\n      />\n      {ticks.map(({ value, xOffset }) => (\n        <g\n          key={value}\n          transform={\\`translate($\\{xOffset}, 0)\\`}\n        >\n          <line\n            y2=\"6\"\n            stroke=\"currentColor\"\n          />\n          <text\n            key={value}\n            style={{\n              fontSize: \"10px\",\n              textAnchor: \"middle\",\n              transform: \"translateY(20px)\"\n            }}>\n            { value }\n          </text>\n        </g>\n      ))}\n    </svg>\n  )\n}`\n\nexport const ChartAxisReactComponent = ({\n  domain = [0, 100],\n  range = [10, 290],\n}) => {\n  const ticks = useMemo(() => {\n    const xScale = d3.scaleLinear().domain(domain).range(range)\n\n    const width = range[1] - range[0]\n    const pixelsPerTick = 30\n    const numberOfTicksTarget = Math.max(1, Math.floor(width / pixelsPerTick))\n\n    return xScale.ticks(numberOfTicksTarget).map((value) => ({\n      value,\n      xOffset: xScale(value),\n    }))\n  }, [domain.join(\"-\"), range.join(\"-\")])\n\n  return (\n    <svg height=\"30\" style={{ overflow: \"visible\" }}>\n      <path\n        d={[\"M\", range[0], 6, \"v\", -6, \"H\", range[1], \"v\", 6].join(\" \")}\n        fill=\"none\"\n        stroke=\"currentColor\"\n      />\n      {ticks.map(({ value, xOffset }) => (\n        <g key={value} transform={`translate(${xOffset}, 0)`}>\n          <line y2=\"6\" stroke=\"currentColor\" />\n          <text\n            key={value}\n            style={{\n              fontSize: \"10px\",\n              textAnchor: \"middle\",\n              transform: \"translateY(20px)\",\n            }}\n          >\n            {value}\n          </text>\n        </g>\n      ))}\n    </svg>\n  )\n}\n\nconst ChartAxisReactComponentCode = `const Axis = ({\n  domain=[0, 100],\n  range=[10, 290],\n}) => {\n  const ticks = useMemo(() => {\n    const xScale = d3.scaleLinear()\n      .domain(domain)\n      .range(range)\n\n    const width = range[1] - range[0]\n    const pixelsPerTick = 30\n    const numberOfTicksTarget = Math.max(\n      1,\n      Math.floor(\n        width / pixelsPerTick\n      )\n    )\n\n    return xScale.ticks(numberOfTicksTarget)\n      .map(value => ({\n        value,\n        xOffset: xScale(value)\n      }))\n  }, [\n    domain.join(\"-\"),\n    range.join(\"-\")\n  ])\n\n  return (\n    <svg>\n      <path\n        d={[\n          \"M\", range[0], 6,\n          \"v\", -6,\n          \"H\", range[1],\n          \"v\", 6,\n        ].join(\" \")}\n        fill=\"none\"\n        stroke=\"currentColor\"\n      />\n      {ticks.map(({ value, xOffset }) => (\n        <g\n          key={value}\n          transform={\\`translate($\\{xOffset}, 0)\\`}\n        >\n          <line\n            y2=\"6\"\n            stroke=\"currentColor\"\n          />\n          <text\n            key={value}\n            style={{\n              fontSize: \"10px\",\n              textAnchor: \"middle\",\n              transform: \"translateY(20px)\"\n            }}>\n            { value }\n          </text>\n        </g>\n      ))}\n    </svg>\n  )\n}`\n","import React, { useEffect, useMemo, useRef, useState } from \"react\"\nimport ResizeObserver from \"@juggle/resize-observer\"\nimport { useSpring, animated } from \"react-spring\"\nimport * as d3 from \"d3\"\nimport { format, range } from \"d3\"\nimport { identity, pickBy, times } from \"lodash\"\nimport Slider from \"rc-slider/lib/Slider\"\nimport { useInterval } from \"utils/utils.js\"\nimport Aside from \"components/_ui/Aside/Aside\"\nimport Button from \"components/_ui/Button/Button\"\nimport Code from \"components/_ui/Code/Code\"\nimport Expandy from \"components/_ui/Expandy/Expandy\"\nimport Icon from \"components/_ui/Icon/Icon\"\nimport Link from \"components/_ui/Link/Link\"\nimport List from \"components/_ui/List/List\"\nimport { P, CodeAndExample } from \"./examples\"\nimport { ChartAxisReactComponent } from \"./Axes\"\n\nimport \"./Sizing.scss\"\n\nconst Sizing = () => {\n  const [settings, setSettings] = useState({\n    width: null,\n    height: null,\n    marginTop: null,\n    marginRight: null,\n    marginBottom: null,\n    marginLeft: 75,\n  })\n\n  const settingsKeysLength = Object.keys(pickBy(settings, identity)).length\n\n  return (\n    <>\n      <p>\n        Sizing charts can be tricky! Because we need to exactly position our\n        data elements, we can't use our usual web development tricks that rely\n        on responsive sizing of <P>{`<div>`}</P>s and <P>{`<spans>`}</P>.\n      </p>\n\n      <p>\n        If you've read through many d3.js examples, you'll know that there's a\n        common way of sizing charts. This is the terminology I use in{\" \"}\n        <Link to=\"https://www.newline.co/fullstack-d3\">\n          Fullstack D3 and Data Visualization\n        </Link>\n        :\n      </p>\n\n      <div className=\"Terminology-wrapper\">\n        <Terminology />\n        <div style={{ flex: \"1 1 30em\", paddingTop: \"0.8em\" }}>\n          <List\n            items={[\n              <>\n                <Term name=\"wrapper\" />\n                <br />\n                is the extent of the chart, and the dimensions of the{\" \"}\n                <P>{`<svg>`}</P> element\n              </>,\n              <>\n                <Term name=\"bounds\" />\n                <br />\n                contain the data elements, but exclude margins and legends\n              </>,\n              <>\n                <Term name=\"margins\" />\n                <br />\n                determine the padding around the <Term name=\"bounds\" />\n              </>,\n            ]}\n          />\n        </div>\n      </div>\n\n      <p>\n        We need to separate our <Term name=\"wrapper\" /> and{\" \"}\n        <Term name=\"bounds\" /> boxes because we need to know their exact\n        dimensions when building a chart with <P>{`<svg>`}</P>.\n      </p>\n\n      <CodeAndExample\n        code={getSizingCode(settings)}\n        markers={[\n          [4 + settingsKeysLength],\n          range(6 + settingsKeysLength, 11 + settingsKeysLength),\n          [4 + settingsKeysLength, 15 + settingsKeysLength],\n          range(18 + settingsKeysLength, 22 + settingsKeysLength),\n        ]}\n        fileName=\"ChartWithDimensions.jsx\"\n        example={(getHighlightedMarkerProps) => (\n          <>\n            <div className=\"D3AndReact__inputs__note\">\n              Try updating the <P>chartSettings</P> values:\n            </div>\n            <div\n              className=\"D3AndReact__inputs\"\n              style={{ marginBottom: \"10px\" }}\n            >\n              <div className=\"D3AndReact__inputs__row\">\n                {[\n                  \"width\",\n                  \"height\",\n                  \"marginTop\",\n                  \"marginRight\",\n                  \"marginBottom\",\n                  \"marginLeft\",\n                ].map((key) => (\n                  <div className=\"D3AndReact__inputs__item\" key={key}>\n                    <div\n                      className=\"D3AndReact__inputs__row__label\"\n                      style={{ width: \"16em\" }}\n                    >\n                      {key}:{\" \"}\n                    </div>\n                    {/* <input value={settings[key]} onChange={e => setSettings({...settings, [key]: +e.target.value})} type=\"number\" /> */}\n\n                    <Slider\n                      className=\"D3AndReact__inputs__row__slider\"\n                      style={{\n                        width: \"6em\",\n                      }}\n                      value={settings[key]}\n                      min={key == \"height\" ? 100 : key == \"width\" ? 300 : 0}\n                      max={key == \"height\" ? 300 : key == \"width\" ? 600 : 130}\n                      onChange={(value) =>\n                        setSettings({ ...settings, [key]: value })\n                      }\n                    />\n\n                    <Icon\n                      name=\"x\"\n                      onClick={() => setSettings({ ...settings, [key]: null })}\n                      style={{\n                        flex: \"0 0 1.6em\",\n                        paddingLeft: \"0.5em\",\n                        cursor: \"pointer\",\n                        color: \"#9980FA\",\n                        opacity: Number.isFinite(settings[key]) ? 1 : 0,\n                      }}\n                      size=\"s\"\n                    />\n\n                    <div\n                      className=\"D3AndReact__inputs__row__value\"\n                      style={{\n                        opacity: Number.isFinite(settings[key]) ? 1 : 0.3,\n                      }}\n                    >\n                      {settings[key] || \"—\"}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            <ChartWithDimensions settings={settings} />\n            {/* <br /> */}\n\n            <p>\n              This example is a little complicated - let's walk through what's\n              going on. The main parts to pay attention to here are where we...\n            </p>\n\n            <List\n              className=\"D3AndReact__marked-list\"\n              items={[\n                <div {...getHighlightedMarkerProps(0)}>\n                  use a custom hook to calculate the dimensions of our{\" \"}\n                  <Term name=\"wrapper\" /> and <Term name=\"bounds\" /> (more on\n                  this in a bit)\n                  <Aside>\n                    Not very familiar with React Hooks? Read more in{\" \"}\n                    <Link to=\"/blog/react-hooks\">Thinking in React Hooks</Link>.\n                  </Aside>\n                </div>,\n                <div {...getHighlightedMarkerProps(1)}>\n                  use the <P>dms</P> object with the calculated dimensions to\n                  create an x scale\n                </div>,\n                <div {...getHighlightedMarkerProps(2)}>\n                  use the React <P>ref</P> from our custom hook to pass a{\" \"}\n                  <i>non-svg</i> wrapping element that{\" \"}\n                  <i>\n                    is the size we want our <Term name=\"wrapper\" /> to be\n                  </i>\n                </div>,\n                <div {...getHighlightedMarkerProps(3)}>\n                  transform the main part of our chart to respect our <b>top</b>{\" \"}\n                  and <b>left</b> <Term name=\"margins\" />\n                </div>,\n              ]}\n              hasNumbers\n            />\n          </>\n        )}\n      />\n\n      <p>\n        Now that we have an idea of how we would use <Term name=\"wrapper\" />,{\" \"}\n        <Term name=\"bounds\" />, and <Term name=\"margins\" />, let's look at what\n        our custom hook is doing.\n      </p>\n\n      <CodeAndExample\n        code={useChartDimensionsCode}\n        markers={[\n          [5, 6, 7],\n          [9, 10, 13, 14],\n          [17, 30, 32],\n          range(24, 28),\n          range(35, 40),\n        ]}\n        fileName=\"useChartDimensions.js\"\n        example={(getHighlightedMarkerProps) => (\n          <>\n            <p>\n              When we pass a settings object to our custom{\" \"}\n              <P>useChartDimensions</P> hook, it will...\n            </p>\n\n            <List\n              className=\"D3AndReact__marked-list\"\n              items={[\n                <div {...getHighlightedMarkerProps(0)}>\n                  fill in missing <Term name=\"margins\" /> with preset default\n                  values.\n                  <br />\n                  <Expandy\n                    trigger={\n                      <>\n                        <P>combineChartDimensions</P> is a custom function\n                      </>\n                    }\n                    triggerExpandText={\n                      <>Expand to see what combineChartDimensions looks like</>\n                    }\n                  >\n                    <Code size=\"s\">{combineChartDimensionsCode}</Code>\n                  </Expandy>\n                </div>,\n                <div {...getHighlightedMarkerProps(1)}>\n                  defer to the passed <P>height</P> and <P>width</P>, if\n                  specified in the <P>passedSettings</P>\n                </div>,\n                <div {...getHighlightedMarkerProps(2)}>\n                  use a{\" \"}\n                  <Link href=\"https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver\">\n                    <P>ResizeObserver</P>\n                  </Link>{\" \"}\n                  to re-calculate the dimensions when the passed element changes\n                  size\n                  <Aside>\n                    <P>ResizeObserver</P> is{\" \"}\n                    <Link href=\"https://caniuse.com/#feat=resizeobserver\">\n                      currently not supported in all browsers\n                    </Link>\n                    , so we're using{\" \"}\n                    <Link href=\"https://www.npmjs.com/package/@juggle/resize-observer\">\n                      this resize-observer\n                    </Link>{\" \"}\n                    polyfill to make sure this works in all browsers.\n                  </Aside>\n                </div>,\n                <div {...getHighlightedMarkerProps(3)}>\n                  grab the <b>height</b> and <b>width</b> of a containing{\" \"}\n                  <P>{`<div>`}</P> for our <Term name=\"wrapper\" /> dimensions\n                </div>,\n                <div {...getHighlightedMarkerProps(4)}>\n                  calculate the dimensions of our <Term name=\"bounds\" /> (named{\" \"}\n                  <P>boundedHeight</P> and <P>boundedWidth</P>)\n                </div>,\n              ]}\n              hasNumbers\n            />\n\n            <p>\n              Note that any settings that we don't set are being filled in\n              automatically. For example, we can specify a specific{\" \"}\n              <P>height</P>, or let <P>useChartDimensions</P> grab the value\n              from the wrapping element, using the React <P>ref</P>.\n            </p>\n          </>\n        )}\n      />\n\n      <p>\n        Hopefully this gives you an idea of how to handle chart dimensions in a\n        responsive, easy way. Feel free to grab my custom{\" \"}\n        <P>useChartDimensions</P> hook — I really enjoy having my{\" \"}\n        <Term name=\"wrapper\" />, <Term name=\"bounds\" />, and{\" \"}\n        <Term name=\"margins\" /> calculated, with a simple one-liner.\n      </p>\n    </>\n  )\n}\n\nexport default Sizing\n\nconst getSizingCode = (settings) =>\n  `const chartSettings = ${JSON.stringify(pickBy(settings, identity), null, 2)}\nconst ChartWithDimensions = () => {\n  const [ref, dms] = useChartDimensions(chartSettings)\n\n  const xScale = useMemo(() => (\n    d3.scaleLinear()\n    .domain([0, 100])\n    .range([0, dms.boundedWidth])\n  ), [dms.boundedWidth])\n\n  return (\n    <div\n      className=\"Chart__wrapper\"\n      ref={ref}\n      style={{ height: \"200px\" }}>\n      <svg width={dms.width} height={dms.height}>\n        <g transform={\\`translate(\\${[\n          dms.marginLeft,\n          dms.marginTop\n        ].join(\",\")})\\`}>\n          <rect\n            width={dms.boundedWidth}\n            height={dms.boundedHeight}\n            fill=\"lavender\"\n          />\n          <g transform={\\`translate(\\${[\n            0,\n            dms.boundedHeight,\n          ].join(\",\")})\\`}>\n            <Axis\n              domain={xScale.domain()}\n              range={xScale.range()}\n            />\n          </g>\n        </g>\n      </svg>\n    </div>\n  )\n}\n`\n\nconst combineChartDimensionsCode = `const combineChartDimensions = dimensions => {\n  const parsedDimensions = {\n      ...dimensions,\n      marginTop: dimensions.marginTop || 10,\n      marginRight: dimensions.marginRight || 10,\n      marginBottom: dimensions.marginBottom || 40,\n      marginLeft: dimensions.marginLeft || 75,\n  }\n\n  return {\n      ...parsedDimensions,\n      boundedHeight: Math.max(\n        parsedDimensions.height\n        - parsedDimensions.marginTop\n        - parsedDimensions.marginBottom,\n        0,\n      ),\n      boundedWidth: Math.max(\n        parsedDimensions.width\n        - parsedDimensions.marginLeft\n        - parsedDimensions.marginRight,\n        0,\n      ),\n  }\n}`\n\nconst combineChartDimensions = (dimensions) => {\n  const parsedDimensions = {\n    ...dimensions,\n    marginTop: dimensions.marginTop || 10,\n    marginRight: dimensions.marginRight || 10,\n    marginBottom: dimensions.marginBottom || 40,\n    marginLeft: dimensions.marginLeft || 75,\n  }\n\n  return {\n    ...parsedDimensions,\n    boundedHeight: Math.max(\n      parsedDimensions.height -\n        parsedDimensions.marginTop -\n        parsedDimensions.marginBottom,\n      0\n    ),\n    boundedWidth: Math.max(\n      parsedDimensions.width -\n        parsedDimensions.marginLeft -\n        parsedDimensions.marginRight,\n      0\n    ),\n  }\n}\n\nconst useChartDimensionsCode = `import ResizeObserver from '@juggle/resize-observer'\n\nconst useChartDimensions = passedSettings => {\n  const ref = useRef()\n  const dimensions = combineChartDimensions(\n    passedSettings\n  )\n\n  const [width, setWidth] = useState(0)\n  const [height, setHeight] = useState(0)\n\n  useEffect(() => {\n      if (dimensions.width && dimensions.height)\n        return [ref, dimensions]\n\n      const element = ref.current\n      const resizeObserver = new ResizeObserver(\n        entries => {\n          if (!Array.isArray(entries)) return\n          if (!entries.length) return\n\n          const entry = entries[0]\n\n          if (width != entry.contentRect.width)\n            setWidth(entry.contentRect.width)\n          if (height != entry.contentRect.height)\n            setHeight(entry.contentRect.height)\n        }\n      )\n      resizeObserver.observe(element)\n\n      return () => resizeObserver.unobserve(element)\n  }, [])\n\n  const newSettings = combineChartDimensions({\n      ...dimensions,\n      width: dimensions.width || width,\n      height: dimensions.height || height,\n  })\n\n  return [ref, newSettings]\n}`\n\nconst useChartDimensions = (passedSettings) => {\n  const ref = useRef()\n  const dimensions = combineChartDimensions(passedSettings)\n\n  const [width, setWidth] = useState(0)\n  const [height, setHeight] = useState(0)\n\n  useEffect(() => {\n    if (dimensions.width && dimensions.height) return [ref, dimensions]\n\n    const element = ref.current\n    const resizeObserver = new ResizeObserver((entries) => {\n      if (!Array.isArray(entries)) return\n      if (!entries.length) return\n\n      const entry = entries[0]\n\n      if (width != entry.contentRect.width) setWidth(entry.contentRect.width)\n      if (height != entry.contentRect.height)\n        setHeight(entry.contentRect.height)\n    })\n    resizeObserver.observe(element)\n\n    return () => resizeObserver.unobserve(element)\n  }, [])\n\n  const newSettings = combineChartDimensions({\n    ...dimensions,\n    width: dimensions.width || width,\n    height: dimensions.height || height,\n  })\n\n  return [ref, newSettings]\n}\n\nconst ChartWithDimensions = ({ settings }) => {\n  const [ref, dms] = useChartDimensions(settings)\n\n  const xScale = useMemo(\n    () => d3.scaleLinear().domain([0, 100]).range([0, dms.boundedWidth]),\n    [dms.boundedWidth]\n  )\n\n  return (\n    <div\n      className=\"Chart__wrapper\"\n      ref={ref}\n      style={{\n        height: \"200px\",\n      }}\n    >\n      <svg\n        width={dms.width}\n        height={dms.height}\n        style={{\n          background: \"#E9ECF1\",\n        }}\n      >\n        <g transform={`translate(${dms.marginLeft}, ${dms.marginTop})`}>\n          <rect\n            width={dms.boundedWidth}\n            height={dms.boundedHeight}\n            fill=\"rgba(153, 128, 250, 0.3)\"\n          />\n          <g transform={`translate(0, ${dms.boundedHeight})`}>\n            <ChartAxisReactComponent\n              domain={xScale.domain()}\n              range={xScale.range()}\n            />\n          </g>\n        </g>\n      </svg>\n    </div>\n  )\n}\n\nconst Terminology = () => (\n  <div className=\"Terminology\">\n    <div className=\"Terminology__bounds\" />\n    {[\"top\", \"right\", \"bottom\", \"left\"].map((side) => (\n      <div\n        className={`Terminology__margin Terminology__margin--${side}`}\n        key={side}\n      >\n        <div className=\"Terminology__margin__text\">{side}</div>\n      </div>\n    ))}\n  </div>\n)\n\nconst Term = ({ name = \"wrapper\" }) => (\n  <b className={`Term Term--name-${name}`}>{name}</b>\n)\n","import React, { useState } from \"react\"\nimport countryShapes from \"./countries.json\"\nimport * as d3 from \"d3\"\nimport * as d3GeoProjection from \"d3-geo-projection\"\nimport { range } from \"d3\"\n\nimport Aside from \"components/_ui/Aside/Aside\"\nimport Link from \"components/_ui/Link/Link\"\nimport List from \"components/_ui/List/List\"\nimport { P, CodeAndExample } from \"./examples\"\nimport { useChartDimensions } from \"components/_ui/Chart/utils/utils\"\n\nconst Maps = () => {\n  const [projectionName, setProjectionName] = useState(\"geoArmadillo\")\n\n  return (\n    <div className=\"Maps\">\n      <p>\n        So you've seen awesome examples of people using d3 to create detailed\n        maps, and globes that you can spin around. And you want to do that, too.\n      </p>\n\n      <p>\n        Worry not! We can let d3 do a lot of the heavy lifting, and have a map\n        in no time! First, let's look at our map! Try changing the projection,\n        d3 comes with tons of fun options:\n      </p>\n\n      <div className=\"flex flex-col center\">\n        <select\n          className=\"p-2 mb-2\"\n          value={projectionName}\n          onChange={(e) => setProjectionName(e.target.value)}\n        >\n          {projectionOptions.map((projectionOption) => (\n            <option key={projectionOption} value={projectionOption}>\n              {projectionOption}\n            </option>\n          ))}\n        </select>\n        <MapExample projectionName={projectionName} />\n      </div>\n\n      <Aside>\n        To play with all of the projections built in to d3, check them out{\" \"}\n        <Link to=\"/blog/d3#maps-and-globes\">in this blog post about d3</Link>.\n      </Aside>\n\n      <CodeAndExample\n        code={MapExampleCode}\n        size=\"s\"\n        markers={[\n          range(8, 13),\n          [...range(15, 20), 28],\n          [...range(32, 35), 42],\n          range(44, 49),\n          range(37, 41),\n          range(50, 64),\n        ]}\n        fileName=\"Map.jsx\"\n        example={(getHighlightedMarkerProps) => (\n          <>\n            {/* <br /> */}\n\n            <p>\n              There's a good amount of code in here, but really not much to\n              create a whole map! Let's run through the highlights:\n            </p>\n\n            <List\n              className=\"D3AndReact__marked-list\"\n              items={[\n                <div {...getHighlightedMarkerProps(0)}>\n                  First, we need to create a <P>projection</P>. This is our map\n                  between our country shape definitions and the way we draw\n                  those 3D shapes on our 2D screen.\n                  <br />\n                  We'll use the{\" \"}\n                  <DocsLink id=\"projection_fitWidth\">.fitWidth()</DocsLink>{\" \"}\n                  method to size our map within the width of our component, and\n                  also create a <P>pathGenerator</P> to generate path\n                  definitions for our Earth & country shapes using{\" \"}\n                  <DocsLink id=\"geoPath\" />.\n                </div>,\n                <div {...getHighlightedMarkerProps(1)}>\n                  Next, we'll find the dimensions of the whole Earth (\n                  <P>sphere</P>) in our projection, and assign the <P>height</P>{\" \"}\n                  of our svg to the height of the sphere.\n                </div>,\n                <div {...getHighlightedMarkerProps(2)}>\n                  Some projections' shapes bleed outside of the edges of the\n                  Earth, so we'll keep them in bounds using a <P>clipPath</P>.\n                </div>,\n                <div {...getHighlightedMarkerProps(3)}>\n                  We can use our <P>pathGenerator</P> function to turn{\" \"}\n                  <Link to=\"https://macwright.com/2015/03/23/geojson-second-bite.html\">\n                    GeoJSON\n                  </Link>\n                  shape definitions into <P>{`<path>`}</P> <P>d</P> attribute\n                  strings. First, we'll draw the whole Earth in a light gray.\n                </div>,\n                <div {...getHighlightedMarkerProps(4)}>\n                  <DocsLink /> has some great methods, like{\" \"}\n                  <DocsLink id=\"geoGraticule10\" /> which will help us draw\n                  graticule lines for reference.\n                </div>,\n                <div {...getHighlightedMarkerProps(5)}>\n                  Last but not least, we'll draw our country shapes! We can draw\n                  different types of geographic shapes by passing GeoJSON\n                  definitions to our <P>pathGenerator</P> function. For example,\n                  we're importing{\" \"}\n                  <Link to=\"https://github.com/Wattenberger/Wattenberger-2019/tree/master/src/components/Blog/posts/D3AndReact/countries.json\">\n                    a list of country definitions\n                  </Link>\n                  , then creating <P>{`<path>`}</P> elements with their shape.\n                </div>,\n              ]}\n              hasNumbers\n            />\n          </>\n        )}\n      />\n\n      <p>\n        Once you get the basics down, this is a really flexible way to draw\n        geography! The trick is to think of d3 as a series of tools.\n      </p>\n\n      <Aside>\n        I'll usually draw maps using Canvas, since rendering lots of SVG\n        elements can get slow, and maps often have tons of shapes.\n        <br />\n        <br />\n        If you want an example of Canvas rendering, as well as drawing bubbles\n        on top of countries to visualize a metric, check out this{\" \"}\n        <Link to=\"https://svelte.recipes/components/world-map\">\n          Svelte recipe\n        </Link>\n        . The code is in Svelte.js, but most of it will translate to React!\n        Especially the <P>drawCanvas</P> function.\n      </Aside>\n    </div>\n  )\n}\n\nexport default Maps\n\nconst MapExampleCode = `const Map = ({ projectionName = \"geoArmadillo\" }) => {\n  // grab our custom React hook we defined above\n  const [ref, dms] = useChartDimensions({})\n\n  // this is the definition for the whole Earth\n  const sphere = { type: \"Sphere\" }\n\n  const projectionFunction = d3[projectionName]\n    || d3GeoProjection[projectionName]\n  const projection = projectionFunction()\n    .fitWidth(dms.width, sphere)\n  const pathGenerator = d3.geoPath(projection)\n\n  // size the svg to fit the height of the map\n  const [\n    [x0, y0],\n    [x1, y1]\n  ] = pathGenerator.bounds(sphere)\n  const height = y1\n\n  return (\n    <div\n      ref={ref}\n      style={{\n        width: \"100%\",\n      }}\n    >\n      <svg width={dms.width} height={height}>\n        <defs>\n{/* some projections bleed outside the edges of the Earth's sphere */}\n{/* let's create a clip path to keep things in bounds */}\n          <clipPath id=\"Map__sphere\">\n            <path d={pathGenerator(sphere)} />\n          </clipPath>\n        </defs>\n\n        <path\n          d={pathGenerator(sphere)}\n          fill=\"#f2f2f7\"\n        />\n\n        <g style={{ clipPath: \"url(#Map__sphere)\" }}>\n          {/* we can even have graticules! */}\n          <path\n            d={pathGenerator(d3.geoGraticule10())}\n            fill=\"none\"\n            stroke=\"#fff\"\n          />\n\n          {countryShapes.features.map((shape) => {\n            return (\n              <path\n                key={shape.properties.subunit}\n                d={pathGenerator(shape)}\n                fill=\"#9980FA\"\n                stroke=\"#fff\"\n              >\n                <title>\n                  {shape.properties.name}\n                </title>\n              </path>\n            )\n          })}\n        </g>\n      </svg>\n    </div>\n  )\n}`\n\nconst MapExample = ({ projectionName = \"geoArmadillo\" }) => {\n  // grab our custom React hook we defined above in #Sizing\n  const [ref, dms] = useChartDimensions({})\n\n  // this is the definition for the whole Earth sphere\n  const sphere = { type: \"Sphere\" }\n\n  const projectionFunction =\n    d3[projectionName] || d3GeoProjection[projectionName]\n  const projection = projectionFunction().fitWidth(dms.width, sphere)\n  const pathGenerator = d3.geoPath(projection)\n\n  // size the svg to fit the height of the map\n  const [[x0, y0], [x1, y1]] = pathGenerator.bounds(sphere)\n  const height = y1\n\n  return (\n    <div\n      ref={ref}\n      style={{\n        width: \"100%\",\n      }}\n    >\n      <svg width={dms.width} height={height}>\n        <defs>\n          {/* some projections bleed outside the edges of the Earth's sphere */}\n          {/* let's create a clip path to keep things in bounds */}\n          <clipPath id=\"Map__sphere\">\n            <path d={pathGenerator(sphere)} />\n          </clipPath>\n        </defs>\n\n        <path d={pathGenerator(sphere)} fill=\"#f2f2f7\" />\n\n        <g style={{ clipPath: \"url(#Map__sphere)\" }}>\n          {/* we can even have graticules! */}\n          <path\n            d={pathGenerator(d3.geoGraticule10())}\n            fill=\"none\"\n            stroke=\"#fff\"\n          />\n\n          {countryShapes.features.map((shape) => {\n            return (\n              <path\n                key={shape.properties.subunit}\n                d={pathGenerator(shape)}\n                fill=\"#9980FA\"\n                stroke=\"#fff\"\n              >\n                <title>{shape.properties.name}</title>\n              </path>\n            )\n          })}\n        </g>\n      </svg>\n    </div>\n  )\n}\n\nconst projectionOptions = [\n  \"geoNaturalEarth1\",\n  \"geoMercator\",\n  \"geoEqualEarth\",\n  \"geoArmadillo\",\n  \"geoBaker\",\n  \"geoBerghaus\",\n  \"geoEckert3\",\n  \"geoFahey\",\n  \"geoGilbert\",\n  \"geoGingery\",\n  \"geoHealpix\",\n  \"geoGinzburg9\",\n  \"geoHufnagel\",\n  \"geoInterruptedHomolosine\",\n  \"geoInterruptedMollweideHemispheres\",\n  \"geoPolyhedralWaterman\",\n]\n\nconst Term = ({ name = \"wrapper\" }) => (\n  <b className={`Term Term--name-${name}`}>{name}</b>\n)\n\nexport const DocsLink = ({ id, repo = \"geo\", children }) => (\n  <Link href={`https://github.com/d3/d3-${repo}${!!id ? `#${id}` : \"\"}`}>\n    {children || id ? <P>{children || `d3.${id}()`}</P> : <b>d3-{repo}</b>}\n  </Link>\n)\n","import React, { useState } from \"react\"\nimport { kebabCase } from \"lodash\"\n\nimport CreatingSVGElements from \"./CreatingSVGElements\"\nimport CreatingManySVGElements from \"./CreatingManySVGElements\"\nimport Sizing from \"./Sizing\"\nimport Axes from \"./Axes\"\nimport Maps from \"./Maps\"\nimport Complex from \"./Complex\"\n\nimport Code from \"components/_ui/Code/Code\"\n\n// sharing state across charts\n// maps\n// animated maps\n// animations\n// force-directed diagrams\n// for me stuff gets complicated when there are multiple groups of svg elements (nodes and links)\n// animating lines\n// animating a timeline\n// staggered animations\n// hooks\n// responsive charts\n\n// references\n// ? d4 https://github.com/joelburget/d4\n\nconst sectionLabels = [\n  [\"Creating SVG elements\", CreatingSVGElements],\n  [\"Creating many SVG elements\", CreatingManySVGElements],\n  [\"Axes\", Axes],\n  [\"Sizing & Responsivity\", Sizing],\n  // [\n  //   \"Animations\",\n  //   () => <></>,\n  // ],\n  [\n    \"Maps\",\n    // () => <></>,\n    Maps,\n  ],\n  [\"Complex visualization layouts\", Complex],\n  // [\"Linking multiple charts\", () => <></>],\n]\nexport const sections = sectionLabels.map(\n  ([label, Component = () => <></>]) => ({\n    label,\n    Component,\n    slug: kebabCase(label),\n  })\n)\n\nexport const P = ({ children, ...props }) => (\n  <code className=\"P\" {...props}>\n    {children}\n  </code>\n)\n\nexport const CodeAndExample = ({\n  code,\n  markers,\n  example,\n  fileName,\n  theme,\n  size,\n  highlightedLines,\n  hasLineNumbers = true,\n}) => {\n  const [highlightedMarker, setHighlightedMarker] = useState(null)\n  const [hoveredMarker, setHoveredMarker] = useState(null)\n\n  const getHighlightedMarkerProps = (index) => ({\n    onMouseEnter: () => setHoveredMarker(index),\n    onMouseLeave: () => {\n      setHoveredMarker(null)\n      setHighlightedMarker(null)\n    },\n    onClick: () => setHighlightedMarker(index),\n    style: {\n      cursor: \"zoom-in\",\n    },\n  })\n\n  return (\n    <div className=\"CodeAndExample D3AndReact__side-by-side\">\n      <div\n        className={`D3AndReact__side-by-side__section CodeAndExample__code--marker-${highlightedMarker}`}\n      >\n        <Code\n          {...{\n            markers,\n            highlightedMarker,\n            fileName,\n            theme,\n            size,\n            highlightedLines,\n            hasLineNumbers,\n          }}\n          className={`Code--highlighted-marker-${hoveredMarker}`}\n          doWrap={false}\n          doScrollWrapper={false}\n          size={window.innerWidth < 600 && \"s\"}\n        >\n          {code}\n        </Code>\n      </div>\n      <div className=\"D3AndReact__side-by-side__section\">\n        {example(getHighlightedMarkerProps)}\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useRef, useState } from \"react\"\nimport { useSpring, animated } from \"react-spring\"\nimport * as d3 from \"d3\"\nimport { format, range } from \"d3\"\nimport { times } from \"lodash\"\n\nimport { useInterval } from \"utils/utils.js\"\nimport Aside from \"components/_ui/Aside/Aside\"\nimport Button from \"components/_ui/Button/Button\"\nimport Code from \"components/_ui/Code/Code\"\nimport Expandy from \"components/_ui/Expandy/Expandy\"\nimport Link from \"components/_ui/Link/Link\"\nimport List from \"components/_ui/List/List\"\nimport Blockquote from \"components/_ui/Blockquote/Blockquote\"\nimport { P, CodeAndExample } from \"./examples\"\nimport fishingImg from \"components/Portfolio/Images/fishing.png\"\nimport stateOfJsImg from \"components/Portfolio/Images/state-of-js.png\"\nimport jsToolsImg from \"components/Portfolio/Images/js-tools.png\"\nimport lunarMissionsImg from \"components/Portfolio/Images/lunar-missions.png\"\n\nconst Complex = () => {\n  return (\n    <div className=\"Complex\">\n      <p>We're through with the basics! We've covered:</p>\n      <List\n        items={[\n          <>how to draw svg elements</>,\n          <>\n            how to draw <em>many</em> svg elements\n          </>,\n          <>\n            how to replicate built-in d3 methods for drawing complex elements\n            like axes\n          </>,\n          <>how to size our charts easily</>,\n          <>how to draw maps!</>,\n        ]}\n      />\n\n      <p>\n        From my experience, the most important rule is to{\" \"}\n        <em>know your tools</em>. Once you're comfortable with drawing with SVG,\n        using d3 as a utility library, and building React.js code, you'll truly\n        be able to make whatever you can imagine. This is the beauty of learning\n        the fundamentals, instead of just grabbing a chart library -- it's a lot\n        more work to learn, but is way more powerful.\n      </p>\n\n      <p>\n        For inspiration, here are some more custom visualizations I've put\n        together:\n      </p>\n\n      <div className=\"D3AndReact__slides\">\n        <Link\n          to=\"/fishing\"\n          className=\"D3AndReact__slide D3AndReact__slide--wide\"\n        >\n          <img src={fishingImg} />\n          <div className=\"D3AndReact__slide__text\">\n            Playing around with international fishing data\n          </div>\n        </Link>\n        <Link\n          to=\"https://2019.stateofjs.com/overview/\"\n          className=\"D3AndReact__slide\"\n        >\n          <img src={stateOfJsImg} />\n          <div className=\"D3AndReact__slide__text\">\n            A custom viz for The State of JS 2019 showing how usage & opinion of\n            different Javascript tools has changed over the years\n          </div>\n        </Link>\n        <Link to=\"https://js-tools.netlify.app/\" className=\"D3AndReact__slide\">\n          <img src={jsToolsImg} />\n          <div className=\"D3AndReact__slide__text\">\n            Looking at co-usage between Javascript tools with The State of JS\n            2019 data\n          </div>\n        </Link>\n        <Link\n          to=\"https://loa.mit.edu/#/Database\"\n          className=\"D3AndReact__slide D3AndReact__slide--wide\"\n        >\n          <img src={lunarMissionsImg} />\n          <div className=\"D3AndReact__slide__text\">\n            An animated visualization of missions to the moon, showing\n            interesting metrics like the type of mission, the organization, and\n            whether or not it was successful\n          </div>\n        </Link>\n      </div>\n\n      <p>My favorite parts of the data visualization field are:</p>\n      <List\n        items={[\n          <>how many forms we haven't yet explored,</>,\n          <>how simple sharing can be, and</>,\n          <>the impact they can have, especially when interactable</>,\n        ]}\n      />\n      <p>\n        And we get the best of all worlds when creating custom, interactive\n        visualizations on the web.\n      </p>\n\n      <p>\n        If you found this article useful, I'd love to hear what you make{\" \"}\n        <Link to=\"https://twitter.com/wattenberger\">on Twitter</Link>!\n      </p>\n    </div>\n  )\n}\n\nexport default Complex\n","import React, { useEffect, useMemo, useRef, useState } from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport { useSpring, animated } from \"react-spring\"\nimport { area, curveBasis, randomNormal } from \"d3\"\nimport { debounce, times, uniqueId } from \"lodash\"\nimport \"rc-slider/assets/index.css\"\n\nimport Code from \"components/_ui/Code/Code\"\nimport Expandy from \"components/_ui/Expandy/Expandy\"\nimport Link from \"components/_ui/Link/Link\"\nimport ScrollEvent from \"components/_ui/ScrollEvent/ScrollEvent\"\nimport metaImage from \"./../react-and-d3.png\"\n\nimport \"./D3AndReact.scss\"\nimport { sections } from \"./examples\"\nimport { useInterval, useHash } from \"utils/utils\"\nimport { scrollTo } from \"utils\"\n\nconst D3AndReact = () => {\n  const [highlightedLines, setHighlightedLines] = useState([])\n  const [initialExpandedSteps, setInitialExpandedSteps] = useState()\n  const [code, setCode] = useState(null)\n  const [hash, setHash] = useHash(null)\n  const [fileName, setFileName] = useState(null)\n  const [removedLines, setRemovedLines] = useState([])\n  const [insertedLines, setInsertedLines] = useState([])\n  const ref = useRef()\n\n  const onSetHash = (newHash, e) => {\n    if (e) e.preventDefault()\n    if (!newHash) return\n    // if (newHash == hash) return\n    const elem = document.getElementById(newHash)\n    if (!elem) return\n    const y =\n      elem.getBoundingClientRect().top +\n      document.documentElement.scrollTop -\n      150\n    scrollTo(y, 300)\n    setHash(newHash)\n  }\n\n  useEffect(() => {\n    if (hash) onSetHash(hash)\n  }, [])\n\n  useEffect(() => {\n    const scrollingElem = document.scrollingElement || document.documentElement\n    const onStopScrolling = () => {\n      scrollingElem.classList.remove(\"is-scrolling\")\n    }\n    const debouncedOnStopScrolling = debounce(onStopScrolling, 300)\n    const onScroll = () => {\n      const wasScrolling = scrollingElem.classList.contains(\"is-scrolling\")\n      if (!wasScrolling) scrollingElem.classList.add(\"is-scrolling\")\n      debouncedOnStopScrolling()\n    }\n    window.addEventListener(\"scroll\", onScroll)\n\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll)\n    }\n  }, [])\n\n  return (\n    <div className=\"D3AndReact\" ref={ref}>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>Using React with D3.js</title>\n        <link\n          rel=\"canonical\"\n          href=\"https://wattenberger.com/blog/react-and-d3\"\n        />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta\n          name=\"description\"\n          content=\"When I visualize data on the web, my current favorite environment is\n          using D3.js inside of a React.js application. These two technologies are notoriously tricky to combine. The crux\n          of the issue is that they both want to handle the DOM.\"\n        />\n        <meta name=\"image\" content={metaImage} />\n      </Helmet>\n\n      <div className=\"D3AndReact__fixed-code__wrapper\">\n        <div className=\"D3AndReact__fixed-code\">\n          {!!code && (\n            <Code\n              className=\"D3AndReact__code\"\n              fileName={fileName}\n              {...{\n                highlightedLines,\n                removedLines,\n                insertedLines,\n                initialExpandedSteps,\n              }}\n            >\n              {code}\n            </Code>\n          )}\n        </div>\n      </div>\n\n      <div className=\"D3AndReact__content\">\n        <div className=\"D3AndReact__centered\">\n          <HeaderBackground />\n          <h1>React + D3.js</h1>\n\n          <p>\n            When I visualize data on the web, my current favorite environment is\n            using <b>D3.js</b> inside of a <b>React.js</b> application.\n          </p>\n          <div className=\"D3AndReact__side-by-side D3AndReact__side-by-side--constrained\">\n            <div className=\"D3AndReact__side-by-side__section\">\n              <Expandy trigger=\"What is React.js?\">\n                <p>\n                  <Link to=\"https://reactjs.org/\">React.js</Link> is a\n                  JavaScript library that helps with building complex user\n                  interfaces. This website is written using React!\n                </p>\n                <p>\n                  I would recommend being familiar with React for this article.\n                  It might be worth running through{\" \"}\n                  <Link to=\"https://reactjs.org/tutorial/tutorial.html\">\n                    the official tutorial\n                  </Link>{\" \"}\n                  or running through a book (\n                  <Link to=\"https://www.fullstackreact.com/\">\n                    I've heard good things about this one\n                  </Link>\n                  ) to make sure you don't stumble on anything in here!\n                </p>\n              </Expandy>\n            </div>\n            <div className=\"D3AndReact__side-by-side__section\">\n              <Expandy trigger=\"What is D3.js?\">\n                <p>\n                  <Link to=\"https://d3js.org\">D3.js</Link> is the{\" \"}\n                  <i>de facto</i> library for visualizing data in the browser.\n                  It's basically just a collection of utility methods, but the\n                  API is enormous! To get a birds-eye view of the API, check out\n                  my post on <Link to=\"/blog/d3\">How to Learn D3.js</Link>.\n                </p>\n\n                <p>\n                  D3.js is notorious for being hard to learn. If you're\n                  interested in learning or solidifying your knowledge, I tried\n                  to distill my knowledge into{\" \"}\n                  <Link to=\"https://newline.co/fullstack-d3\">\n                    Fullstack Data Visualization and D3.js\n                  </Link>\n                  . Plus, the first chapter is free!\n                </p>\n              </Expandy>\n            </div>\n          </div>\n\n          <ScrollEvent\n            isInViewChange={(d) => {\n              if (d > 0) return\n\n              setCode(null)\n              setInitialExpandedSteps(null)\n              setHighlightedLines([0])\n              setRemovedLines([])\n            }}\n            hasIndicator={false}\n          >\n            <p>\n              These two technologies are notoriously tricky to combine. The crux\n              of the issue is that <b>they both want to handle the DOM</b>.\n            </p>\n          </ScrollEvent>\n\n          <p>Let's start at the beginning, shall we?</p>\n\n          {sections.map(({ slug, label, Component }) => (\n            <div className=\"D3AndReact__section\" key={slug} id={slug}>\n              <h2 className=\"D3AndReact__section__header\">\n                <Link\n                  className=\"D3AndReact__section__header__anchor\"\n                  to={`#${slug}`}\n                  onClick={(e) => onSetHash(slug, e)}\n                >\n                  #\n                </Link>\n                {label}\n              </h2>\n              <Component />\n            </div>\n          ))}\n        </div>\n\n        {/* <div className=\"D3AndReact__left\">\n\n                    <p>\n                        In this post, we'll be iterating on a scatterplot of estimated hours vs actual hours from a dataset of task estimation.\n                    </p>\n\n                    <D3AndReactExample />\n                    <div className=\"D3AndReact__trigger\" />\n\n                    <Aside>\n                        <p>\n                            Our dataset is pulled from a <Link href=\"https://github.com/Derek-Jones/SiP_dataset\">great repository from Derek M. Jones and Stephen Cullum</Link>, showing commercial development over ten years. The company used an Agile method, and the dataset covers 10,100 unique task estimates made by 22 developers.\n                        </p>\n\n                        <p>\n                            The actual data or chart doesn't matter much in this case, but I do find it funny how inaccurate the time estimates were.\n                        </p>\n                    </Aside>\n\n                    <br />\n\n                    <ScrollEvent isInViewChange={d => {\n                        setCode(d < 0 ? null : d3Example)\n                        setFileName(d < 0 ? null : \"HoursScatterplot.jsx (Method A)\")\n                        setInitialExpandedSteps(null)\n                        setHighlightedLines([3, 4])\n                        setRemovedLines([])\n                    }}>\n                        <h6>Method A</h6>\n                    </ScrollEvent>\n                        <h3>\n                            D3 code on mount\n                        </h3>\n\n                    <p>\n                        To start, let's look at a naïve implementation of using d3 inside of a React component. Our component is named <P>HoursScatterplot</P> and is using the <P>useRef()</P> hook to grab an element that we'll render, to be referred to later.\n                    </p>\n\n                    <Aside>\n                        If you're unfamiliar with React hooks or <P>useRef()</P>, read more <Link to=\"https://reactjs.org/docs/hooks-reference.html#useref\">in the docs</Link>.\n                    </Aside>\n                    <br />\n                    <br />\n\n                    <ScrollEvent isInViewChange={d => {\n                        if (d != 0) return\n\n                        setCode(d3Example)\n                        setFileName(\"HoursScatterplot.jsx (Method A)\")\n                        setInitialExpandedSteps(null)\n                        setHighlightedLines(range(69, 77))\n                        setRemovedLines([])\n                    }}>\n                        <p>\n                            In our <b>return function</b>, we're rendering a single <P>{`<svg>`}</P> element, assigning it to our <P>ref</P>, and setting its <P>height</P> and <P>width</P>.\n                        </p>\n\n                        <Aside>\n                            If you're unfamiliar with <P>{`<svg>`}</P>, read more <Link to=\"https://developer.mozilla.org/en-US/docs/Web/SVG/Element\">in the MDN docs</Link>.\n                        </Aside>\n                    </ScrollEvent>\n\n                    <br />\n                    <br />\n\n                    <ScrollEvent isInViewChange={d => {\n                        if (d != 0) return\n\n                        setCode(d3Example)\n                        setFileName(\"HoursScatterplot.jsx (Method A)\")\n                        setInitialExpandedSteps(null)\n                        setHighlightedLines(range(64, 67))\n                        setRemovedLines([])\n                    }}>\n                        <p>\n                            To draw our chart, we run a <P style={{cursor: \"pointer\"}} onClick={() => {\n                                setHighlightedLines(range(6, 7))\n                            }}><b>drawDots()</b></P> function on component mount, using an <P>useEffect()</P> hook with an empty dependency array.\n                        </p>\n\n                        <Aside>\n                            If you're unfamiliar with <P>useEffect()</P>, read more <Link to=\"https://reactjs.org/docs/hooks-effect.html\">in the docs</Link>.\n                        </Aside>\n                    </ScrollEvent>\n\n                    <br />\n                    <br />\n\n                    <ScrollEvent isInViewChange={d => {\n                        if (d != 0) return\n\n                        setCode(d3Example)\n                        setFileName(\"HoursScatterplot.jsx (Method A)\")\n                        setInitialExpandedSteps(null)\n                        setHighlightedLines(range(6, 63))\n                        setRemovedLines([])\n                    }}>\n                        <p>\n                            If we look at our <P>drawDots()</P> function, we've basically just pasted a whole block of vanilla d3.js code.\n                        </p>\n\n                        <Aside>\n                            This code is adapted from <b>Chapter 3</b> of <Link to=\"https://newline.co/fullstack-d3\">Fullstack Data Visualization and D3.js</Link>. If you are interested in solidifying your d3.js skills, I tried to give readers an easy, but fast-paced, ramp-up, and included tons of tips I've learned during my career designing & developing data visualizations.\n\n                            <br />\n                            <br />\n                            The first chapter is a free download and quickly runs through making a chart, if you're looking for a refresher!\n                        </Aside>\n                    </ScrollEvent>\n\n                    <br />\n                    <br />\n\n                    <p>\n                        This approach definitely works! And it's a great first stab at porting an existing chart into a React app.\n                    </p> */}\n\n        {/* <D3AndReactExample /> */}\n\n        {/* <D3Modules /> */}\n        {/* </div> */}\n      </div>\n    </div>\n  )\n}\n\nexport default D3AndReact\n\nconst resources = [{}]\n\nexport const d3Example = `const width = 500\nconst height = 500\nconst HoursScatterplot = () => {\n  const ref = useRef()\n\n  const drawDots = async () => {\n    const dataset = await d3.csv(dataUrl)\n\n    // set data constants\n    const xAccessor = d => +d.HoursEstimate\n    const yAccessor = d => +d.HoursActual\n\n    // create chart area\n    const bounds = d3.select(ref.current)\n\n    // create scales\n    const xScale = d3.scaleLinear()\n      .domain([0, 250])\n      .range([0, width])\n\n    const yScale = d3.scaleLinear()\n      .domain([0, 250])\n      .range([height, 0])\n\n    // draw the points\n    const dots = bounds.selectAll(\".dot\")\n      .data(dataset, d => d.TaskNumber)\n\n    const newDots = dots.enter()\n      .append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", 3)\n      .attr(\"cx\", d => xScale(xAccessor(d)))\n      .attr(\"cy\", d => yScale(yAccessor(d)))\n\n    // draw axes\n    const xAxisGenerator = d3.axisBottom()\n      .scale(xScale)\n\n    const xAxis = bounds.append(\"g\")\n      .call(xAxisGenerator)\n        .style(\"transform\", \\`translateY(\\${height}px)\\`)\n\n    const xAxisLabel = xAxis.append(\"text\")\n        .attr(\"x\", width - 10)\n        .attr(\"y\", -10)\n        .style(\"text-anchor\", \"end\")\n        .html(\"estimated hours\")\n\n    const yAxisGenerator = d3.axisLeft()\n      .scale(yScale)\n      .ticks(4)\n\n    const yAxis = bounds.append(\"g\")\n        .call(yAxisGenerator)\n\n    const yAxisLabel = yAxis.append(\"text\")\n        .attr(\"x\", 6)\n        .attr(\"y\", 5)\n        .style(\"text-anchor\", \"start\")\n        .text(\"actual hours\")\n  }\n\n  useEffect(() => {\n    drawDots()\n  }, [])\n\n  return (\n    <svg\n      className=\"HoursScatterplot\"\n      ref={ref}\n      style={{\n        width,\n        height,\n      }}\n    />\n  )\n}`\n\nconst colors = [\"#2c3e50\", \"#9980FA\", \"#f2f2f7\"]\nconst gradients = [\n  [\"#f2f2f7\", \"#9980FA\", \"#f2f2f7\"],\n  [\"#f2f2f7\", \"#12CBC4\", \"#f2f2f7\"],\n  [\"#f2f2f7\", \"#FFC312\", \"#f2f2f7\"],\n]\nconst numberOfWiggles = 20\nconst heightOfBackground = 30\nconst getPath = () =>\n  area()\n    .x(([x, y]) => x)\n    .y0(([x, y]) => -y)\n    .y1(([x, y, y1]) => y1)\n    .curve(curveBasis)(\n    times(numberOfWiggles, (i) => [\n      // i + randomNormal(0, 0.5)(), // x\n      i, // x\n      Math.max(\n        0,\n        (heightOfBackground / 2) *\n          (1 / (Math.abs(i - numberOfWiggles / 2) || 1)) +\n          randomNormal(0, 8)() +\n          3\n      ), // y0\n      Math.min(\n        0,\n        (-heightOfBackground / 2) *\n          (1 / (Math.abs(i - numberOfWiggles / 2) || 1)) +\n          randomNormal(0, 8)() -\n          3\n      ), // y1\n    ])\n  )\nconst springConfig = {\n  duration: 3000,\n}\nconst HeaderBackground = () => {\n  const gradientIds = useMemo(\n    () => times(3, () => `HeaderBackground__gradient--id-${uniqueId()}`),\n    []\n  )\n\n  const [path1, setPath1] = useState(getPath)\n  const [path2, setPath2] = useState(getPath)\n  const [path3, setPath3] = useState(getPath)\n\n  useInterval(() => {\n    setPath1(getPath())\n    setPath2(getPath())\n    setPath3(getPath())\n  }, 3000)\n\n  const spring1 = useSpring({ config: springConfig, d: path1 })\n  const spring2 = useSpring({ config: springConfig, d: path2 })\n  const spring3 = useSpring({ config: springConfig, d: path3 })\n\n  return (\n    <div className=\"HeaderBackground\">\n      <svg\n        className=\"HeaderBackground__svg\"\n        viewBox={[\n          0,\n          -heightOfBackground / 2,\n          numberOfWiggles - 1,\n          heightOfBackground,\n        ].join(\" \")}\n        preserveAspectRatio=\"none\"\n      >\n        <defs>\n          {gradients.map((colors, gradientIndex) => (\n            <linearGradient id={gradientIds[gradientIndex]}>\n              {colors.map((color, colorIndex) => (\n                <stop\n                  key={[gradientIndex, colorIndex].join(\"-\")}\n                  stopColor={color}\n                  offset={`${(colorIndex / (colors.length - 1)) * 100}%`}\n                />\n              ))}\n            </linearGradient>\n          ))}\n        </defs>\n        <animated.path\n          className=\"HeaderBackground__path\"\n          {...spring1}\n          fill={`url(#${gradientIds[0]})`}\n        />\n        <animated.path\n          className=\"HeaderBackground__path\"\n          {...spring2}\n          fill={`url(#${gradientIds[1]})`}\n        />\n        <animated.path\n          className=\"HeaderBackground__path\"\n          {...spring3}\n          fill={`url(#${gradientIds[2]})`}\n        />\n      </svg>\n    </div>\n  )\n}\n","import React, { useState, useRef } from 'react'\nimport Icon from \"components/_ui/Icon/Icon\";\nimport Tooltip from \"components/_ui/Tooltip/Tooltip\";\nimport { scrollTo } from \"utils.js\"\n\nimport './Expandy.scss';\n\nconst Expandy = ({ trigger, triggerExpandText, doHideIfCollapsed=false, className, children, ...props }) => {\n    const [isExpanded, setIsExpanded] = useState(false)\n    const ref = useRef()\n\n    // const onToggleExpanded = () => {\n    //     setIsExpanded(!isExpanded)\n\n    //     if (isExpanded) {\n    //         const top = ref.current.getBoundingClientRect().top\n    //         if (top > window.innerHeight * 0.3) return\n    //         const y = top\n    //             + window.scrollY\n    //             - window.innerHeight * 0.3\n    //         scrollTo(y, 600)\n    //     }\n    // }\n\n    return (\n        <details className={`Expandy Expandy--is-${isExpanded ? \"expanded\" : \"collapsed\"} ${className}`} {...props} ref={ref}\n            onToggle={e => {\n                const isExpanded = e.target.open\n                setIsExpanded(isExpanded)\n        }}>\n            <summary>\n            <div className=\"Expandy__trigger button-no-appearance\" >\n                <div className=\"Expandy__trigger__text\">\n                    <b>{ trigger }</b>\n                    <div className=\"Expandy__trigger__info\">\n                        { triggerExpandText || `tap me ${isExpanded ? \"to hide\" : \"for more\" } details` }\n                    </div>\n                </div>\n                <div className=\"Expandy__trigger__mark\">ἰ</div>\n            </div>\n\n            <Tooltip\n                className=\"Expandy__toggle\"\n                contents={<button className=\"button-no-appearance\">{isExpanded ? \"Collapse me\" : \"Expand me\"}</button>}\n                >\n                <div className=\"Expandy__toggle__arrow Expandy__toggle__arrow--up\">\n                    <Icon name=\"arrow\" direction=\"n\" size=\"s\" />\n                </div>\n                <div className=\"Expandy__toggle__arrow Expandy__toggle__arrow--down\">\n                    <Icon name=\"arrow\" direction=\"s\" size=\"s\" />\n                </div>\n                </Tooltip>\n                </summary>\n            <div className=\"Expandy__contents\">\n                {children }\n            </div>\n        </details>\n    )\n}\n\nexport default Expandy\n","var global = typeof window === 'undefined' ? this || {} : window;\nexport { global };","var trigger;\nvar callbacks = [];\n\nvar notify = function notify() {\n  return callbacks.splice(0).forEach(function (cb) {\n    return cb();\n  });\n};\n\nvar queueMicroTask = function queueMicroTask(callback) {\n  if (!trigger) {\n    var el_1 = document.createTextNode('');\n    var config = {\n      characterData: true\n    };\n    new MutationObserver(function () {\n      return notify();\n    }).observe(el_1, config);\n\n    trigger = function trigger() {\n      el_1.textContent = '';\n    };\n  }\n\n  callbacks.push(callback);\n  trigger();\n};\n\nexport { queueMicroTask };","var ResizeObserverBoxOptions;\n\n(function (ResizeObserverBoxOptions) {\n  ResizeObserverBoxOptions[\"BORDER_BOX\"] = \"border-box\";\n  ResizeObserverBoxOptions[\"CONTENT_BOX\"] = \"content-box\";\n})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));\n\nexport { ResizeObserverBoxOptions };","import { process, isWatching } from '../ResizeObserverController';\nimport { global } from './global';\nimport { queueResizeObserver } from './queueResizeObserver';\nvar CATCH_FRAMES = 60 / 5;\nvar observerConfig = {\n  attributes: true,\n  characterData: true,\n  childList: true,\n  subtree: true\n};\nvar events = ['resize', 'load', 'transitionend', 'animationend', 'animationstart', 'animationiteration', 'keyup', 'keydown', 'mouseup', 'mousedown', 'mouseover', 'mouseout', 'blur', 'focus'];\nvar scheduled = false;\n\nvar Scheduler = function () {\n  function Scheduler() {\n    var _this = this;\n\n    this.stopped = true;\n\n    this.listener = function () {\n      return _this.schedule();\n    };\n  }\n\n  Scheduler.prototype.run = function (frames) {\n    var _this = this;\n\n    if (scheduled) {\n      return;\n    }\n\n    scheduled = true;\n    queueResizeObserver(function () {\n      var elementsHaveResized = false;\n\n      try {\n        elementsHaveResized = process();\n      } finally {\n        scheduled = false;\n\n        if (!isWatching()) {\n          return;\n        }\n\n        if (elementsHaveResized) {\n          _this.run(60);\n        } else if (frames) {\n          _this.run(frames - 1);\n        } else {\n          _this.start();\n        }\n      }\n    });\n  };\n\n  Scheduler.prototype.schedule = function () {\n    this.stop();\n    this.run(CATCH_FRAMES);\n  };\n\n  Scheduler.prototype.observe = function () {\n    var _this = this;\n\n    var cb = function cb() {\n      return _this.observer && _this.observer.observe(document.body, observerConfig);\n    };\n\n    document.body ? cb() : global.addEventListener('DOMContentLoaded', cb);\n  };\n\n  Scheduler.prototype.start = function () {\n    var _this = this;\n\n    if (this.stopped) {\n      this.stopped = false;\n      this.observer = new MutationObserver(this.listener);\n      this.observe();\n      events.forEach(function (name) {\n        return global.addEventListener(name, _this.listener, true);\n      });\n    }\n  };\n\n  Scheduler.prototype.stop = function () {\n    var _this = this;\n\n    if (!this.stopped) {\n      this.observer && this.observer.disconnect();\n      events.forEach(function (name) {\n        return global.removeEventListener(name, _this.listener, true);\n      });\n      this.stopped = true;\n    }\n  };\n\n  return Scheduler;\n}();\n\nvar scheduler = new Scheduler();\nexport { scheduler };","import { queueMicroTask } from './queueMicroTask';\n\nvar queueResizeObserver = function queueResizeObserver(cb) {\n  queueMicroTask(function ResizeObserver() {\n    requestAnimationFrame(cb);\n  });\n};\n\nexport { queueResizeObserver };","var DOMRectReadOnly = function () {\n  function DOMRectReadOnly(x, y, width, height) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.top = this.y;\n    this.left = this.x;\n    this.bottom = this.top + this.height;\n    this.right = this.left + this.width;\n    return Object.freeze(this);\n  }\n\n  DOMRectReadOnly.fromRect = function (rectangle) {\n    return new DOMRectReadOnly(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n  };\n\n  return DOMRectReadOnly;\n}();\n\nexport { DOMRectReadOnly };","var isSVG = function isSVG(target) {\n  return target instanceof SVGElement && 'getBBox' in target;\n};\n\nvar isHidden = function isHidden(target) {\n  if (isSVG(target)) {\n    var _a = target.getBBox(),\n        width = _a.width,\n        height = _a.height;\n\n    return !width && !height;\n  }\n\n  var _b = target,\n      offsetWidth = _b.offsetWidth,\n      offsetHeight = _b.offsetHeight;\n  return !(offsetWidth || offsetHeight || target.getClientRects().length);\n};\n\nvar isReplacedElement = function isReplacedElement(target) {\n  switch (target.tagName) {\n    case 'INPUT':\n      if (target.type !== 'image') {\n        break;\n      }\n\n    case 'VIDEO':\n    case 'AUDIO':\n    case 'EMBED':\n    case 'OBJECT':\n    case 'CANVAS':\n    case 'IFRAME':\n    case 'IMG':\n      return true;\n  }\n\n  return false;\n};\n\nexport { isSVG, isHidden, isReplacedElement };","import { ResizeObserverBoxOptions } from '../ResizeObserverBoxOptions';\nimport { DOMRectReadOnly } from '../DOMRectReadOnly';\nimport { isSVG, isHidden } from '../utils/element';\nimport { global } from '../utils/global';\nvar cache = new Map();\nvar scrollRegexp = /auto|scroll/;\nvar verticalRegexp = /^tb|vertical/;\nvar IE = /msie|trident/i.test(global.navigator && global.navigator.userAgent);\n\nvar parseDimension = function parseDimension(pixel) {\n  return parseFloat(pixel || '0');\n};\n\nvar size = function size(inlineSize, blockSize, switchSizes) {\n  if (inlineSize === void 0) {\n    inlineSize = 0;\n  }\n\n  if (blockSize === void 0) {\n    blockSize = 0;\n  }\n\n  if (switchSizes === void 0) {\n    switchSizes = false;\n  }\n\n  return Object.freeze({\n    inlineSize: (switchSizes ? blockSize : inlineSize) || 0,\n    blockSize: (switchSizes ? inlineSize : blockSize) || 0\n  });\n};\n\nvar zeroBoxes = Object.freeze({\n  borderBoxSize: size(),\n  contentBoxSize: size(),\n  contentRect: new DOMRectReadOnly(0, 0, 0, 0)\n});\n\nvar calculateBoxSizes = function calculateBoxSizes(target) {\n  if (cache.has(target)) {\n    return cache.get(target);\n  }\n\n  if (isHidden(target)) {\n    cache.set(target, zeroBoxes);\n    return zeroBoxes;\n  }\n\n  var cs = getComputedStyle(target);\n  var svg = isSVG(target) && target.getBBox();\n  var removePadding = !IE && cs.boxSizing === 'border-box';\n  var switchSizes = verticalRegexp.test(cs.writingMode || '');\n  var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');\n  var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');\n  var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);\n  var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);\n  var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);\n  var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);\n  var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);\n  var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);\n  var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);\n  var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);\n  var horizontalPadding = paddingLeft + paddingRight;\n  var verticalPadding = paddingTop + paddingBottom;\n  var horizontalBorderArea = borderLeft + borderRight;\n  var verticalBorderArea = borderTop + borderBottom;\n  var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;\n  var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;\n  var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;\n  var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;\n  var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;\n  var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;\n  var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;\n  var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;\n  var boxes = Object.freeze({\n    borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),\n    contentBoxSize: size(contentWidth, contentHeight, switchSizes),\n    contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)\n  });\n  cache.set(target, boxes);\n  return boxes;\n};\n\nvar calculateBoxSize = function calculateBoxSize(target, observedBox) {\n  var _a = calculateBoxSizes(target),\n      borderBoxSize = _a.borderBoxSize,\n      contentBoxSize = _a.contentBoxSize;\n\n  return observedBox === ResizeObserverBoxOptions.BORDER_BOX ? borderBoxSize : contentBoxSize;\n};\n\nexport { calculateBoxSize, calculateBoxSizes, cache };","import { ResizeObserverBoxOptions } from './ResizeObserverBoxOptions';\nimport { calculateBoxSize } from './algorithms/calculateBoxSize';\nimport { isSVG, isReplacedElement } from './utils/element';\n\nvar skipNotifyOnElement = function skipNotifyOnElement(target) {\n  return !isSVG(target) && !isReplacedElement(target) && getComputedStyle(target).display === 'inline';\n};\n\nvar ResizeObservation = function () {\n  function ResizeObservation(target, observedBox) {\n    this.target = target;\n    this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;\n    this.lastReportedSize = {\n      inlineSize: 0,\n      blockSize: 0\n    };\n  }\n\n  ResizeObservation.prototype.isActive = function () {\n    var size = calculateBoxSize(this.target, this.observedBox);\n\n    if (skipNotifyOnElement(this.target)) {\n      this.lastReportedSize = size;\n    }\n\n    if (this.lastReportedSize.inlineSize !== size.inlineSize || this.lastReportedSize.blockSize !== size.blockSize) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return ResizeObservation;\n}();\n\nexport { ResizeObservation };","var ResizeObserverDetail = function () {\n  function ResizeObserverDetail(resizeObserver, callback) {\n    this.activeTargets = [];\n    this.skippedTargets = [];\n    this.observationTargets = [];\n    this.observer = resizeObserver;\n    this.callback = callback;\n  }\n\n  return ResizeObserverDetail;\n}();\n\nexport { ResizeObserverDetail };","var msg = 'ResizeObserver loop completed with undelivered notifications.';\n\nvar deliverResizeLoopError = function deliverResizeLoopError() {\n  var event;\n\n  if (typeof ErrorEvent === 'function') {\n    event = new ErrorEvent('error', {\n      message: msg\n    });\n  } else {\n    event = document.createEvent('Event');\n    event.initEvent('error', false, false);\n    event.message = msg;\n  }\n\n  window.dispatchEvent(event);\n};\n\nexport { deliverResizeLoopError };","import { calculateBoxSizes } from './algorithms/calculateBoxSize';\n\nvar ResizeObserverEntry = function () {\n  function ResizeObserverEntry(target) {\n    var boxes = calculateBoxSizes(target);\n    this.target = target;\n    this.contentRect = boxes.contentRect;\n    this.borderBoxSize = boxes.borderBoxSize;\n    this.contentBoxSize = boxes.contentBoxSize;\n  }\n\n  return ResizeObserverEntry;\n}();\n\nexport { ResizeObserverEntry };","import { isHidden } from '../utils/element';\n\nvar calculateDepthForNode = function calculateDepthForNode(node) {\n  if (isHidden(node)) {\n    return Infinity;\n  }\n\n  var depth = 0;\n  var parent = node.parentNode;\n\n  while (parent) {\n    depth += 1;\n    parent = parent.parentNode;\n  }\n\n  return depth;\n};\n\nexport { calculateDepthForNode };","import { resizeObservers } from '../ResizeObserverController';\nimport { ResizeObserverEntry } from '../ResizeObserverEntry';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nimport { calculateBoxSize } from './calculateBoxSize';\n\nvar broadcastActiveObservations = function broadcastActiveObservations() {\n  var shallowestDepth = Infinity;\n  var callbacks = [];\n  resizeObservers.forEach(function processObserver(ro) {\n    if (ro.activeTargets.length === 0) {\n      return;\n    }\n\n    var entries = [];\n    ro.activeTargets.forEach(function processTarget(ot) {\n      var entry = new ResizeObserverEntry(ot.target);\n      var targetDepth = calculateDepthForNode(ot.target);\n      entries.push(entry);\n      ot.lastReportedSize = calculateBoxSize(ot.target, ot.observedBox);\n\n      if (targetDepth < shallowestDepth) {\n        shallowestDepth = targetDepth;\n      }\n    });\n    callbacks.push(function resizeObserverCallback() {\n      ro.callback.call(ro.observer, entries, ro.observer);\n    });\n    ro.activeTargets.splice(0, ro.activeTargets.length);\n  });\n\n  for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {\n    var callback = callbacks_1[_i];\n    callback();\n  }\n\n  return shallowestDepth;\n};\n\nexport { broadcastActiveObservations };","import { resizeObservers } from '../ResizeObserverController';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nimport { cache as sizeCache } from './calculateBoxSize';\n\nvar gatherActiveObservationsAtDepth = function gatherActiveObservationsAtDepth(depth) {\n  sizeCache.clear();\n  resizeObservers.forEach(function processObserver(ro) {\n    ro.activeTargets.splice(0, ro.activeTargets.length);\n    ro.skippedTargets.splice(0, ro.skippedTargets.length);\n    ro.observationTargets.forEach(function processTarget(ot) {\n      if (ot.isActive()) {\n        if (calculateDepthForNode(ot.target) > depth) {\n          ro.activeTargets.push(ot);\n        } else {\n          ro.skippedTargets.push(ot);\n        }\n      }\n    });\n  });\n};\n\nexport { gatherActiveObservationsAtDepth };","import { scheduler } from './utils/scheduler';\nimport { ResizeObservation } from './ResizeObservation';\nimport { ResizeObserverDetail } from './ResizeObserverDetail';\nimport { hasActiveObservations } from './algorithms/hasActiveObservations';\nimport { hasSkippedObservations } from './algorithms/hasSkippedObservations';\nimport { deliverResizeLoopError } from './algorithms/deliverResizeLoopError';\nimport { broadcastActiveObservations } from './algorithms/broadcastActiveObservations';\nimport { gatherActiveObservationsAtDepth } from './algorithms/gatherActiveObservationsAtDepth';\nvar resizeObservers = [];\nvar observerMap = new Map();\nvar watching = 0;\n\nvar updateCount = function updateCount(n) {\n  !watching && n > 0 && scheduler.start();\n  watching += n;\n  !watching && scheduler.stop();\n};\n\nvar getObservationIndex = function getObservationIndex(observationTargets, target) {\n  for (var i = 0; i < observationTargets.length; i += 1) {\n    if (observationTargets[i].target === target) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\nvar process = function process() {\n  var depth = 0;\n  gatherActiveObservationsAtDepth(depth);\n\n  while (hasActiveObservations()) {\n    depth = broadcastActiveObservations();\n    gatherActiveObservationsAtDepth(depth);\n  }\n\n  if (hasSkippedObservations()) {\n    deliverResizeLoopError();\n  }\n\n  return depth > 0;\n};\n\nvar ResizeObserverController = function () {\n  function ResizeObserverController() {}\n\n  ResizeObserverController.connect = function (resizeObserver, callback) {\n    var detail = new ResizeObserverDetail(resizeObserver, callback);\n    resizeObservers.push(detail);\n    observerMap.set(resizeObserver, detail);\n  };\n\n  ResizeObserverController.observe = function (resizeObserver, target, options) {\n    if (observerMap.has(resizeObserver)) {\n      var detail = observerMap.get(resizeObserver);\n\n      if (getObservationIndex(detail.observationTargets, target) < 0) {\n        detail.observationTargets.push(new ResizeObservation(target, options && options.box));\n        updateCount(1);\n        scheduler.schedule();\n      }\n    }\n  };\n\n  ResizeObserverController.unobserve = function (resizeObserver, target) {\n    if (observerMap.has(resizeObserver)) {\n      var detail = observerMap.get(resizeObserver);\n      var index = getObservationIndex(detail.observationTargets, target);\n\n      if (index >= 0) {\n        detail.observationTargets.splice(index, 1);\n        updateCount(-1);\n      }\n    }\n  };\n\n  ResizeObserverController.disconnect = function (resizeObserver) {\n    if (observerMap.has(resizeObserver)) {\n      var detail = observerMap.get(resizeObserver);\n      resizeObservers.splice(resizeObservers.indexOf(detail), 1);\n      observerMap.delete(resizeObserver);\n      updateCount(-detail.observationTargets.length);\n    }\n  };\n\n  return ResizeObserverController;\n}();\n\nvar isWatching = function isWatching() {\n  return !!watching;\n};\n\nexport { ResizeObserverController, resizeObservers, process, isWatching };","import { resizeObservers } from '../ResizeObserverController';\n\nvar hasActiveObservations = function hasActiveObservations() {\n  return resizeObservers.some(function (ro) {\n    return ro.activeTargets.length > 0;\n  });\n};\n\nexport { hasActiveObservations };","import { resizeObservers } from '../ResizeObserverController';\n\nvar hasSkippedObservations = function hasSkippedObservations() {\n  return resizeObservers.some(function (ro) {\n    return ro.skippedTargets.length > 0;\n  });\n};\n\nexport { hasSkippedObservations };","import { ResizeObserverController } from './ResizeObserverController';\n\nvar ResizeObserver = function () {\n  function ResizeObserver(callback) {\n    if (arguments.length === 0) {\n      throw new TypeError(\"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\");\n    }\n\n    if (typeof callback !== 'function') {\n      throw new TypeError(\"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\");\n    }\n\n    ResizeObserverController.connect(this, callback);\n  }\n\n  ResizeObserver.prototype.observe = function (target, options) {\n    if (arguments.length === 0) {\n      throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n    }\n\n    if (target instanceof Element === false) {\n      throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n    }\n\n    ResizeObserverController.observe(this, target, options);\n  };\n\n  ResizeObserver.prototype.unobserve = function (target) {\n    if (arguments.length === 0) {\n      throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n    }\n\n    if (target instanceof Element === false) {\n      throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n    }\n\n    ResizeObserverController.unobserve(this, target);\n  };\n\n  ResizeObserver.prototype.disconnect = function () {\n    ResizeObserverController.disconnect(this);\n  };\n\n  ResizeObserver.toString = function () {\n    return 'function ResizeObserver () { [polyfill code] }';\n  };\n\n  return ResizeObserver;\n}();\n\nexport default ResizeObserver;\nexport { ResizeObserver };","import { useRef, useState, useEffect } from \"react\"\nimport PropTypes from \"prop-types\"\nimport ResizeObserver from '@juggle/resize-observer';\n\nexport const dimensionsPropsType = (\n    PropTypes.shape({\n        height: PropTypes.number,\n        width: PropTypes.number,\n        marginTop: PropTypes.number,\n        marginRight: PropTypes.number,\n        marginBottom: PropTypes.number,\n        marginLeft: PropTypes.number,\n    })\n)\n\nexport const combineChartDimensions = dimensions => {\n    let parsedDimensions = {\n        marginTop: 40,\n        marginRight: 30,\n        marginBottom: 40,\n        marginLeft: 75,\n        ...dimensions,\n    }\n\n    return {\n        ...parsedDimensions,\n        boundedHeight: Math.max(parsedDimensions.height - parsedDimensions.marginTop - parsedDimensions.marginBottom, 0),\n        boundedWidth: Math.max(parsedDimensions.width - parsedDimensions.marginLeft - parsedDimensions.marginRight, 0),\n    }\n}\n\nexport const useChartDimensions = passedSettings => {\n    const ref = useRef()\n    const dimensions = combineChartDimensions(passedSettings)\n\n    const [width, changeWidth] = useState(0)\n    const [height, changeHeight] = useState(0)\n\n    useEffect(() => {\n        if (dimensions.width && dimensions.height) return [ref, dimensions]\n\n        const element = ref.current\n        const resizeObserver = new ResizeObserver(entries => {\n            if (!Array.isArray(entries)) return\n            if (!entries.length) return\n\n            const entry = entries[0]\n\n            if (width != entry.contentRect.width) changeWidth(entry.contentRect.width)\n            if (height != entry.contentRect.height) changeHeight(entry.contentRect.height)\n        })\n\n        resizeObserver.observe(element)\n\n        return () => resizeObserver.unobserve(element)\n    }, [])\n\n    const newSettings = combineChartDimensions({\n        ...dimensions,\n        width: dimensions.width || width,\n        height: dimensions.height || height,\n    })\n\n    return [ref, newSettings]\n}","import React from \"react\"\n\nimport \"./Blockquote.scss\"\n\nconst Blockquote = ({ source, isQuote=true, children, ...props }) => (\n  <blockquote {...props} className={`Blockquote Blockquote--is-${isQuote ? \"quote\" : \"non-quote\"}`}>\n    { children }\n    {source && (\n      <div className=\"Blockquote__source\">\n        { source }\n      </div>\n    )}\n  </blockquote>\n)\n\nexport default Blockquote","module.exports = __webpack_public_path__ + \"static/media/fishing.2b2520e7.png\";"],"sourceRoot":""}