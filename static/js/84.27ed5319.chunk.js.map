{"version":3,"sources":["../node_modules/numeral/numeral.js","../node_modules/@juggle/resize-observer/lib/utils/global.js","../node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js","../node_modules/@juggle/resize-observer/lib/utils/scheduler.js","../node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js","../node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js","../node_modules/@juggle/resize-observer/lib/utils/element.js","../node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js","../node_modules/@juggle/resize-observer/lib/ResizeObservation.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js","../node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js","../node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js","../node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js","../node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverController.js","../node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js","../node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js","../node_modules/@juggle/resize-observer/lib/ResizeObserver.js"],"names":["__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","_numeral","_","formats","locales","defaults","currentLocale","zeroFormat","nullFormat","defaultFormat","scalePercentBy100","options","Numeral","input","number","this","_input","_value","value","kind","unformatFunction","regexp","isNumeral","isNaN","replace","length","regexps","unformat","match","stringToNumber","Number","version","obj","numberToFormat","format","roundingFunction","leadingCount","abbrForce","abs","int","precision","signed","thousands","output","locale","negP","optDec","abbr","decimal","neg","Math","includes","indexOf","RegExp","abbreviations","trillion","billion","million","thousand","toString","split","toFixed","delimiters","slice","String","i","string","abbreviation","stringOriginal","currency","symbol","pow","min","_isNaN","_x","apply","arguments","search","insert","subString","start","reduce","array","callback","TypeError","t","Object","len","k","multiplier","x","parts","correctionFactor","Array","prototype","call","accum","next","mn","maxDecimals","optionals","boundedPrecision","optionalsRegExp","power","splitValue","minDecimals","max","key","toLowerCase","localeData","Error","reset","property","register","type","name","validate","val","culture","_decimalSep","_thousandSep","_currSymbol","_valArray","_abbrObj","_thousandRegEx","temp","console","warn","trim","e","substr","fn","clone","inputString","formatFunction","round","set","add","corrFactor","curr","currI","O","subtract","multiply","divide","difference","ordinal","b","_format","space","splice","join","base","suffixes","binary","unformatRegex","concat","filter","item","_format2","bytes","suffix","bytesMultiplier","_format3","symbols","before","after","_format4","toExponential","_format5","_format6","_format7","hours","floor","minutes","seconds","timeArray","exports","__webpack_require__","module","trigger","ResizeObserverBoxOptions","global","window","queueMicroTask_callbacks","queueMicroTask","el_1","document","createTextNode","MutationObserver","forEach","cb","observe","characterData","textContent","push","observerConfig","attributes","childList","subtree","events","scheduled","scheduler","Scheduler","_this","stopped","listener","schedule","run","frames","elementsHaveResized","ResizeObserverController_process","isWatching","requestAnimationFrame","stop","observer","body","addEventListener","disconnect","removeEventListener","DOMRectReadOnly","y","width","height","top","left","bottom","right","freeze","fromRect","rectangle","isSVG","target","SVGElement","isHidden","_a","getBBox","_b","offsetWidth","offsetHeight","getClientRects","cache","Map","scrollRegexp","verticalRegexp","IE","test","navigator","userAgent","parseDimension","pixel","parseFloat","calculateBoxSize_size","inlineSize","blockSize","switchSizes","zeroBoxes","borderBoxSize","contentBoxSize","contentRect","calculateBoxSize_calculateBoxSizes","has","get","cs","getComputedStyle","svg","removePadding","boxSizing","writingMode","canScrollVertically","overflowY","canScrollHorizontally","overflowX","paddingTop","paddingRight","paddingBottom","paddingLeft","borderTop","borderTopWidth","borderRight","borderRightWidth","borderBottom","borderBottomWidth","horizontalPadding","verticalPadding","horizontalBorderArea","borderLeftWidth","verticalBorderArea","horizontalScrollbarThickness","clientHeight","verticalScrollbarThickness","clientWidth","widthReduction","heightReduction","contentWidth","contentHeight","borderBoxWidth","borderBoxHeight","boxes","calculateBoxSize_calculateBoxSize","observedBox","BORDER_BOX","ResizeObservation_ResizeObservation","ResizeObservation","CONTENT_BOX","lastReportedSize","isActive","size","tagName","isReplacedElement","display","ResizeObserverDetail","resizeObserver","activeTargets","skippedTargets","observationTargets","msg","ResizeObserverEntry_ResizeObserverEntry","calculateDepthForNode_calculateDepthForNode","node","Infinity","depth","parent","parentNode","broadcastActiveObservations_broadcastActiveObservations","shallowestDepth","callbacks","resizeObservers","ro","entries","ot","entry","targetDepth","_i","callbacks_1","gatherActiveObservationsAtDepth_gatherActiveObservationsAtDepth","clear","observerMap","watching","ResizeObserverController_updateCount","n","getObservationIndex","some","event","ErrorEvent","message","createEvent","initEvent","dispatchEvent","deliverResizeLoopError","ResizeObserverController_ResizeObserverController","ResizeObserverController","connect","detail","box","unobserve","index","delete","ResizeObserver_ResizeObserver","ResizeObserver","Element","__webpack_exports__"],"mappings":"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","file":"static/js/84.27ed5319.chunk.js","sourcesContent":["/*! @preserve\n * numeral.js\n * version : 2.0.6\n * author : Adam Draper\n * license : MIT\n * http://adamwdraper.github.com/Numeral-js/\n */\n(function (global, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory();\n  } else {\n    global.numeral = factory();\n  }\n})(this, function () {\n  /************************************\n      Variables\n  ************************************/\n  var _numeral,\n      _,\n      VERSION = '2.0.6',\n      formats = {},\n      locales = {},\n      defaults = {\n    currentLocale: 'en',\n    zeroFormat: null,\n    nullFormat: null,\n    defaultFormat: '0,0',\n    scalePercentBy100: true\n  },\n      options = {\n    currentLocale: defaults.currentLocale,\n    zeroFormat: defaults.zeroFormat,\n    nullFormat: defaults.nullFormat,\n    defaultFormat: defaults.defaultFormat,\n    scalePercentBy100: defaults.scalePercentBy100\n  };\n  /************************************\n      Constructors\n  ************************************/\n  // Numeral prototype object\n\n\n  function Numeral(input, number) {\n    this._input = input;\n    this._value = number;\n  }\n\n  _numeral = function numeral(input) {\n    var value, kind, unformatFunction, regexp;\n\n    if (_numeral.isNumeral(input)) {\n      value = input.value();\n    } else if (input === 0 || typeof input === 'undefined') {\n      value = 0;\n    } else if (input === null || _.isNaN(input)) {\n      value = null;\n    } else if (typeof input === 'string') {\n      if (options.zeroFormat && input === options.zeroFormat) {\n        value = 0;\n      } else if (options.nullFormat && input === options.nullFormat || !input.replace(/[^0-9]+/g, '').length) {\n        value = null;\n      } else {\n        for (kind in formats) {\n          regexp = typeof formats[kind].regexps.unformat === 'function' ? formats[kind].regexps.unformat() : formats[kind].regexps.unformat;\n\n          if (regexp && input.match(regexp)) {\n            unformatFunction = formats[kind].unformat;\n            break;\n          }\n        }\n\n        unformatFunction = unformatFunction || _numeral._.stringToNumber;\n        value = unformatFunction(input);\n      }\n    } else {\n      value = Number(input) || null;\n    }\n\n    return new Numeral(input, value);\n  }; // version number\n\n\n  _numeral.version = VERSION; // compare numeral object\n\n  _numeral.isNumeral = function (obj) {\n    return obj instanceof Numeral;\n  }; // helper functions\n\n\n  _numeral._ = _ = {\n    // formats numbers separators, decimals places, signs, abbreviations\n    numberToFormat: function numberToFormat(value, format, roundingFunction) {\n      var locale = locales[_numeral.options.currentLocale],\n          negP = false,\n          optDec = false,\n          leadingCount = 0,\n          abbr = '',\n          trillion = 1000000000000,\n          billion = 1000000000,\n          million = 1000000,\n          thousand = 1000,\n          decimal = '',\n          neg = false,\n          abbrForce,\n          // force abbreviation\n      abs,\n          min,\n          max,\n          power,\n          int,\n          precision,\n          signed,\n          thousands,\n          output; // make sure we never format a null value\n\n      value = value || 0;\n      abs = Math.abs(value); // see if we should use parentheses for negative number or if we should prefix with a sign\n      // if both are present we default to parentheses\n\n      if (_numeral._.includes(format, '(')) {\n        negP = true;\n        format = format.replace(/[\\(|\\)]/g, '');\n      } else if (_numeral._.includes(format, '+') || _numeral._.includes(format, '-')) {\n        signed = _numeral._.includes(format, '+') ? format.indexOf('+') : value < 0 ? format.indexOf('-') : -1;\n        format = format.replace(/[\\+|\\-]/g, '');\n      } // see if abbreviation is wanted\n\n\n      if (_numeral._.includes(format, 'a')) {\n        abbrForce = format.match(/a(k|m|b|t)?/);\n        abbrForce = abbrForce ? abbrForce[1] : false; // check for space before abbreviation\n\n        if (_numeral._.includes(format, ' a')) {\n          abbr = ' ';\n        }\n\n        format = format.replace(new RegExp(abbr + 'a[kmbt]?'), '');\n\n        if (abs >= trillion && !abbrForce || abbrForce === 't') {\n          // trillion\n          abbr += locale.abbreviations.trillion;\n          value = value / trillion;\n        } else if (abs < trillion && abs >= billion && !abbrForce || abbrForce === 'b') {\n          // billion\n          abbr += locale.abbreviations.billion;\n          value = value / billion;\n        } else if (abs < billion && abs >= million && !abbrForce || abbrForce === 'm') {\n          // million\n          abbr += locale.abbreviations.million;\n          value = value / million;\n        } else if (abs < million && abs >= thousand && !abbrForce || abbrForce === 'k') {\n          // thousand\n          abbr += locale.abbreviations.thousand;\n          value = value / thousand;\n        }\n      } // check for optional decimals\n\n\n      if (_numeral._.includes(format, '[.]')) {\n        optDec = true;\n        format = format.replace('[.]', '.');\n      } // break number and format\n\n\n      int = value.toString().split('.')[0];\n      precision = format.split('.')[1];\n      thousands = format.indexOf(',');\n      leadingCount = (format.split('.')[0].split(',')[0].match(/0/g) || []).length;\n\n      if (precision) {\n        if (_numeral._.includes(precision, '[')) {\n          precision = precision.replace(']', '');\n          precision = precision.split('[');\n          decimal = _numeral._.toFixed(value, precision[0].length + precision[1].length, roundingFunction, precision[1].length);\n        } else {\n          decimal = _numeral._.toFixed(value, precision.length, roundingFunction);\n        }\n\n        int = decimal.split('.')[0];\n\n        if (_numeral._.includes(decimal, '.')) {\n          decimal = locale.delimiters.decimal + decimal.split('.')[1];\n        } else {\n          decimal = '';\n        }\n\n        if (optDec && Number(decimal.slice(1)) === 0) {\n          decimal = '';\n        }\n      } else {\n        int = _numeral._.toFixed(value, 0, roundingFunction);\n      } // check abbreviation again after rounding\n\n\n      if (abbr && !abbrForce && Number(int) >= 1000 && abbr !== locale.abbreviations.trillion) {\n        int = String(Number(int) / 1000);\n\n        switch (abbr) {\n          case locale.abbreviations.thousand:\n            abbr = locale.abbreviations.million;\n            break;\n\n          case locale.abbreviations.million:\n            abbr = locale.abbreviations.billion;\n            break;\n\n          case locale.abbreviations.billion:\n            abbr = locale.abbreviations.trillion;\n            break;\n        }\n      } // format number\n\n\n      if (_numeral._.includes(int, '-')) {\n        int = int.slice(1);\n        neg = true;\n      }\n\n      if (int.length < leadingCount) {\n        for (var i = leadingCount - int.length; i > 0; i--) {\n          int = '0' + int;\n        }\n      }\n\n      if (thousands > -1) {\n        int = int.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + locale.delimiters.thousands);\n      }\n\n      if (format.indexOf('.') === 0) {\n        int = '';\n      }\n\n      output = int + decimal + (abbr ? abbr : '');\n\n      if (negP) {\n        output = (negP && neg ? '(' : '') + output + (negP && neg ? ')' : '');\n      } else {\n        if (signed >= 0) {\n          output = signed === 0 ? (neg ? '-' : '+') + output : output + (neg ? '-' : '+');\n        } else if (neg) {\n          output = '-' + output;\n        }\n      }\n\n      return output;\n    },\n    // unformats numbers separators, decimals places, signs, abbreviations\n    stringToNumber: function stringToNumber(string) {\n      var locale = locales[options.currentLocale],\n          stringOriginal = string,\n          abbreviations = {\n        thousand: 3,\n        million: 6,\n        billion: 9,\n        trillion: 12\n      },\n          abbreviation,\n          value,\n          i,\n          regexp;\n\n      if (options.zeroFormat && string === options.zeroFormat) {\n        value = 0;\n      } else if (options.nullFormat && string === options.nullFormat || !string.replace(/[^0-9]+/g, '').length) {\n        value = null;\n      } else {\n        value = 1;\n\n        if (locale.delimiters.decimal !== '.') {\n          string = string.replace(/\\./g, '').replace(locale.delimiters.decimal, '.');\n        }\n\n        for (abbreviation in abbreviations) {\n          regexp = new RegExp('[^a-zA-Z]' + locale.abbreviations[abbreviation] + '(?:\\\\)|(\\\\' + locale.currency.symbol + ')?(?:\\\\))?)?$');\n\n          if (stringOriginal.match(regexp)) {\n            value *= Math.pow(10, abbreviations[abbreviation]);\n            break;\n          }\n        } // check for negative number\n\n\n        value *= (string.split('-').length + Math.min(string.split('(').length - 1, string.split(')').length - 1)) % 2 ? 1 : -1; // remove non numbers\n\n        string = string.replace(/[^0-9\\.]+/g, '');\n        value *= Number(string);\n      }\n\n      return value;\n    },\n    isNaN: function (_isNaN) {\n      function isNaN(_x) {\n        return _isNaN.apply(this, arguments);\n      }\n\n      isNaN.toString = function () {\n        return _isNaN.toString();\n      };\n\n      return isNaN;\n    }(function (value) {\n      return typeof value === 'number' && isNaN(value);\n    }),\n    includes: function includes(string, search) {\n      return string.indexOf(search) !== -1;\n    },\n    insert: function insert(string, subString, start) {\n      return string.slice(0, start) + subString + string.slice(start);\n    },\n    reduce: function reduce(array, callback\n    /*, initialValue*/\n    ) {\n      if (this === null) {\n        throw new TypeError('Array.prototype.reduce called on null or undefined');\n      }\n\n      if (typeof callback !== 'function') {\n        throw new TypeError(callback + ' is not a function');\n      }\n\n      var t = Object(array),\n          len = t.length >>> 0,\n          k = 0,\n          value;\n\n      if (arguments.length === 3) {\n        value = arguments[2];\n      } else {\n        while (k < len && !(k in t)) {\n          k++;\n        }\n\n        if (k >= len) {\n          throw new TypeError('Reduce of empty array with no initial value');\n        }\n\n        value = t[k++];\n      }\n\n      for (; k < len; k++) {\n        if (k in t) {\n          value = callback(value, t[k], k, t);\n        }\n      }\n\n      return value;\n    },\n\n    /**\n     * Computes the multiplier necessary to make x >= 1,\n     * effectively eliminating miscalculations caused by\n     * finite precision.\n     */\n    multiplier: function multiplier(x) {\n      var parts = x.toString().split('.');\n      return parts.length < 2 ? 1 : Math.pow(10, parts[1].length);\n    },\n\n    /**\n     * Given a variable number of arguments, returns the maximum\n     * multiplier that must be used to normalize an operation involving\n     * all of them.\n     */\n    correctionFactor: function correctionFactor() {\n      var args = Array.prototype.slice.call(arguments);\n      return args.reduce(function (accum, next) {\n        var mn = _.multiplier(next);\n\n        return accum > mn ? accum : mn;\n      }, 1);\n    },\n\n    /**\n     * Implementation of toFixed() that treats floats more like decimals\n     *\n     * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present\n     * problems for accounting- and finance-related software.\n     */\n    toFixed: function toFixed(value, maxDecimals, roundingFunction, optionals) {\n      var splitValue = value.toString().split('.'),\n          minDecimals = maxDecimals - (optionals || 0),\n          boundedPrecision,\n          optionalsRegExp,\n          power,\n          output; // Use the smallest precision value possible to avoid errors from floating point representation\n\n      if (splitValue.length === 2) {\n        boundedPrecision = Math.min(Math.max(splitValue[1].length, minDecimals), maxDecimals);\n      } else {\n        boundedPrecision = minDecimals;\n      }\n\n      power = Math.pow(10, boundedPrecision); // Multiply up by precision, round accurately, then divide and use native toFixed():\n\n      output = (roundingFunction(value + 'e+' + boundedPrecision) / power).toFixed(boundedPrecision);\n\n      if (optionals > maxDecimals - boundedPrecision) {\n        optionalsRegExp = new RegExp('\\\\.?0{1,' + (optionals - (maxDecimals - boundedPrecision)) + '}$');\n        output = output.replace(optionalsRegExp, '');\n      }\n\n      return output;\n    }\n  }; // avaliable options\n\n  _numeral.options = options; // avaliable formats\n\n  _numeral.formats = formats; // avaliable formats\n\n  _numeral.locales = locales; // This function sets the current locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n  _numeral.locale = function (key) {\n    if (key) {\n      options.currentLocale = key.toLowerCase();\n    }\n\n    return options.currentLocale;\n  }; // This function provides access to the loaded locale data.  If\n  // no arguments are passed in, it will simply return the current\n  // global locale object.\n\n\n  _numeral.localeData = function (key) {\n    if (!key) {\n      return locales[options.currentLocale];\n    }\n\n    key = key.toLowerCase();\n\n    if (!locales[key]) {\n      throw new Error('Unknown locale : ' + key);\n    }\n\n    return locales[key];\n  };\n\n  _numeral.reset = function () {\n    for (var property in defaults) {\n      options[property] = defaults[property];\n    }\n  };\n\n  _numeral.zeroFormat = function (format) {\n    options.zeroFormat = typeof format === 'string' ? format : null;\n  };\n\n  _numeral.nullFormat = function (format) {\n    options.nullFormat = typeof format === 'string' ? format : null;\n  };\n\n  _numeral.defaultFormat = function (format) {\n    options.defaultFormat = typeof format === 'string' ? format : '0.0';\n  };\n\n  _numeral.register = function (type, name, format) {\n    name = name.toLowerCase();\n\n    if (this[type + 's'][name]) {\n      throw new TypeError(name + ' ' + type + ' already registered.');\n    }\n\n    this[type + 's'][name] = format;\n    return format;\n  };\n\n  _numeral.validate = function (val, culture) {\n    var _decimalSep, _thousandSep, _currSymbol, _valArray, _abbrObj, _thousandRegEx, localeData, temp; //coerce val to string\n\n\n    if (typeof val !== 'string') {\n      val += '';\n\n      if (console.warn) {\n        console.warn('Numeral.js: Value is not string. It has been co-erced to: ', val);\n      }\n    } //trim whitespaces from either sides\n\n\n    val = val.trim(); //if val is just digits return true\n\n    if (!!val.match(/^\\d+$/)) {\n      return true;\n    } //if val is empty return false\n\n\n    if (val === '') {\n      return false;\n    } //get the decimal and thousands separator from numeral.localeData\n\n\n    try {\n      //check if the culture is understood by numeral. if not, default it to current locale\n      localeData = _numeral.localeData(culture);\n    } catch (e) {\n      localeData = _numeral.localeData(_numeral.locale());\n    } //setup the delimiters and currency symbol based on culture/locale\n\n\n    _currSymbol = localeData.currency.symbol;\n    _abbrObj = localeData.abbreviations;\n    _decimalSep = localeData.delimiters.decimal;\n\n    if (localeData.delimiters.thousands === '.') {\n      _thousandSep = '\\\\.';\n    } else {\n      _thousandSep = localeData.delimiters.thousands;\n    } // validating currency symbol\n\n\n    temp = val.match(/^[^\\d]+/);\n\n    if (temp !== null) {\n      val = val.substr(1);\n\n      if (temp[0] !== _currSymbol) {\n        return false;\n      }\n    } //validating abbreviation symbol\n\n\n    temp = val.match(/[^\\d]+$/);\n\n    if (temp !== null) {\n      val = val.slice(0, -1);\n\n      if (temp[0] !== _abbrObj.thousand && temp[0] !== _abbrObj.million && temp[0] !== _abbrObj.billion && temp[0] !== _abbrObj.trillion) {\n        return false;\n      }\n    }\n\n    _thousandRegEx = new RegExp(_thousandSep + '{2}');\n\n    if (!val.match(/[^\\d.,]/g)) {\n      _valArray = val.split(_decimalSep);\n\n      if (_valArray.length > 2) {\n        return false;\n      } else {\n        if (_valArray.length < 2) {\n          return !!_valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx);\n        } else {\n          if (_valArray[0].length === 1) {\n            return !!_valArray[0].match(/^\\d+$/) && !_valArray[0].match(_thousandRegEx) && !!_valArray[1].match(/^\\d+$/);\n          } else {\n            return !!_valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx) && !!_valArray[1].match(/^\\d+$/);\n          }\n        }\n      }\n    }\n\n    return false;\n  };\n  /************************************\n      Numeral Prototype\n  ************************************/\n\n\n  _numeral.fn = Numeral.prototype = {\n    clone: function clone() {\n      return _numeral(this);\n    },\n    format: function format(inputString, roundingFunction) {\n      var value = this._value,\n          format = inputString || options.defaultFormat,\n          kind,\n          output,\n          formatFunction; // make sure we have a roundingFunction\n\n      roundingFunction = roundingFunction || Math.round; // format based on value\n\n      if (value === 0 && options.zeroFormat !== null) {\n        output = options.zeroFormat;\n      } else if (value === null && options.nullFormat !== null) {\n        output = options.nullFormat;\n      } else {\n        for (kind in formats) {\n          if (format.match(formats[kind].regexps.format)) {\n            formatFunction = formats[kind].format;\n            break;\n          }\n        }\n\n        formatFunction = formatFunction || _numeral._.numberToFormat;\n        output = formatFunction(value, format, roundingFunction);\n      }\n\n      return output;\n    },\n    value: function value() {\n      return this._value;\n    },\n    input: function input() {\n      return this._input;\n    },\n    set: function set(value) {\n      this._value = Number(value);\n      return this;\n    },\n    add: function add(value) {\n      var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n      function cback(accum, curr, currI, O) {\n        return accum + Math.round(corrFactor * curr);\n      }\n\n      this._value = _.reduce([this._value, value], cback, 0) / corrFactor;\n      return this;\n    },\n    subtract: function subtract(value) {\n      var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n      function cback(accum, curr, currI, O) {\n        return accum - Math.round(corrFactor * curr);\n      }\n\n      this._value = _.reduce([value], cback, Math.round(this._value * corrFactor)) / corrFactor;\n      return this;\n    },\n    multiply: function multiply(value) {\n      function cback(accum, curr, currI, O) {\n        var corrFactor = _.correctionFactor(accum, curr);\n\n        return Math.round(accum * corrFactor) * Math.round(curr * corrFactor) / Math.round(corrFactor * corrFactor);\n      }\n\n      this._value = _.reduce([this._value, value], cback, 1);\n      return this;\n    },\n    divide: function divide(value) {\n      function cback(accum, curr, currI, O) {\n        var corrFactor = _.correctionFactor(accum, curr);\n\n        return Math.round(accum * corrFactor) / Math.round(curr * corrFactor);\n      }\n\n      this._value = _.reduce([this._value, value], cback);\n      return this;\n    },\n    difference: function difference(value) {\n      return Math.abs(_numeral(this._value).subtract(value).value());\n    }\n  };\n  /************************************\n      Default Locale && Format\n  ************************************/\n\n  _numeral.register('locale', 'en', {\n    delimiters: {\n      thousands: ',',\n      decimal: '.'\n    },\n    abbreviations: {\n      thousand: 'k',\n      million: 'm',\n      billion: 'b',\n      trillion: 't'\n    },\n    ordinal: function ordinal(number) {\n      var b = number % 10;\n      return ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n    },\n    currency: {\n      symbol: '$'\n    }\n  });\n\n  (function () {\n    _numeral.register('format', 'bps', {\n      regexps: {\n        format: /(BPS)/,\n        unformat: /(BPS)/\n      },\n      format: function format(value, _format, roundingFunction) {\n        var space = _numeral._.includes(_format, ' BPS') ? ' ' : '',\n            output;\n        value = value * 10000; // check for space before BPS\n\n        _format = _format.replace(/\\s?BPS/, '');\n        output = _numeral._.numberToFormat(value, _format, roundingFunction);\n\n        if (_numeral._.includes(output, ')')) {\n          output = output.split('');\n          output.splice(-1, 0, space + 'BPS');\n          output = output.join('');\n        } else {\n          output = output + space + 'BPS';\n        }\n\n        return output;\n      },\n      unformat: function unformat(string) {\n        return +(_numeral._.stringToNumber(string) * 0.0001).toFixed(15);\n      }\n    });\n  })();\n\n  (function () {\n    var decimal = {\n      base: 1000,\n      suffixes: ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n    },\n        binary = {\n      base: 1024,\n      suffixes: ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB']\n    };\n    var allSuffixes = decimal.suffixes.concat(binary.suffixes.filter(function (item) {\n      return decimal.suffixes.indexOf(item) < 0;\n    }));\n    var unformatRegex = allSuffixes.join('|'); // Allow support for BPS (http://www.investopedia.com/terms/b/basispoint.asp)\n\n    unformatRegex = '(' + unformatRegex.replace('B', 'B(?!PS)') + ')';\n\n    _numeral.register('format', 'bytes', {\n      regexps: {\n        format: /([0\\s]i?b)/,\n        unformat: new RegExp(unformatRegex)\n      },\n      format: function format(value, _format2, roundingFunction) {\n        var output,\n            bytes = _numeral._.includes(_format2, 'ib') ? binary : decimal,\n            suffix = _numeral._.includes(_format2, ' b') || _numeral._.includes(_format2, ' ib') ? ' ' : '',\n            power,\n            min,\n            max; // check for space before\n\n        _format2 = _format2.replace(/\\s?i?b/, '');\n\n        for (power = 0; power <= bytes.suffixes.length; power++) {\n          min = Math.pow(bytes.base, power);\n          max = Math.pow(bytes.base, power + 1);\n\n          if (value === null || value === 0 || value >= min && value < max) {\n            suffix += bytes.suffixes[power];\n\n            if (min > 0) {\n              value = value / min;\n            }\n\n            break;\n          }\n        }\n\n        output = _numeral._.numberToFormat(value, _format2, roundingFunction);\n        return output + suffix;\n      },\n      unformat: function unformat(string) {\n        var value = _numeral._.stringToNumber(string),\n            power,\n            bytesMultiplier;\n\n        if (value) {\n          for (power = decimal.suffixes.length - 1; power >= 0; power--) {\n            if (_numeral._.includes(string, decimal.suffixes[power])) {\n              bytesMultiplier = Math.pow(decimal.base, power);\n              break;\n            }\n\n            if (_numeral._.includes(string, binary.suffixes[power])) {\n              bytesMultiplier = Math.pow(binary.base, power);\n              break;\n            }\n          }\n\n          value *= bytesMultiplier || 1;\n        }\n\n        return value;\n      }\n    });\n  })();\n\n  (function () {\n    _numeral.register('format', 'currency', {\n      regexps: {\n        format: /(\\$)/\n      },\n      format: function format(value, _format3, roundingFunction) {\n        var locale = _numeral.locales[_numeral.options.currentLocale],\n            symbols = {\n          before: _format3.match(/^([\\+|\\-|\\(|\\s|\\$]*)/)[0],\n          after: _format3.match(/([\\+|\\-|\\)|\\s|\\$]*)$/)[0]\n        },\n            output,\n            symbol,\n            i; // strip format of spaces and $\n\n        _format3 = _format3.replace(/\\s?\\$\\s?/, ''); // format the number\n\n        output = _numeral._.numberToFormat(value, _format3, roundingFunction); // update the before and after based on value\n\n        if (value >= 0) {\n          symbols.before = symbols.before.replace(/[\\-\\(]/, '');\n          symbols.after = symbols.after.replace(/[\\-\\)]/, '');\n        } else if (value < 0 && !_numeral._.includes(symbols.before, '-') && !_numeral._.includes(symbols.before, '(')) {\n          symbols.before = '-' + symbols.before;\n        } // loop through each before symbol\n\n\n        for (i = 0; i < symbols.before.length; i++) {\n          symbol = symbols.before[i];\n\n          switch (symbol) {\n            case '$':\n              output = _numeral._.insert(output, locale.currency.symbol, i);\n              break;\n\n            case ' ':\n              output = _numeral._.insert(output, ' ', i + locale.currency.symbol.length - 1);\n              break;\n          }\n        } // loop through each after symbol\n\n\n        for (i = symbols.after.length - 1; i >= 0; i--) {\n          symbol = symbols.after[i];\n\n          switch (symbol) {\n            case '$':\n              output = i === symbols.after.length - 1 ? output + locale.currency.symbol : _numeral._.insert(output, locale.currency.symbol, -(symbols.after.length - (1 + i)));\n              break;\n\n            case ' ':\n              output = i === symbols.after.length - 1 ? output + ' ' : _numeral._.insert(output, ' ', -(symbols.after.length - (1 + i) + locale.currency.symbol.length - 1));\n              break;\n          }\n        }\n\n        return output;\n      }\n    });\n  })();\n\n  (function () {\n    _numeral.register('format', 'exponential', {\n      regexps: {\n        format: /(e\\+|e-)/,\n        unformat: /(e\\+|e-)/\n      },\n      format: function format(value, _format4, roundingFunction) {\n        var output,\n            exponential = typeof value === 'number' && !_numeral._.isNaN(value) ? value.toExponential() : '0e+0',\n            parts = exponential.split('e');\n        _format4 = _format4.replace(/e[\\+|\\-]{1}0/, '');\n        output = _numeral._.numberToFormat(Number(parts[0]), _format4, roundingFunction);\n        return output + 'e' + parts[1];\n      },\n      unformat: function unformat(string) {\n        var parts = _numeral._.includes(string, 'e+') ? string.split('e+') : string.split('e-'),\n            value = Number(parts[0]),\n            power = Number(parts[1]);\n        power = _numeral._.includes(string, 'e-') ? power *= -1 : power;\n\n        function cback(accum, curr, currI, O) {\n          var corrFactor = _numeral._.correctionFactor(accum, curr),\n              num = accum * corrFactor * (curr * corrFactor) / (corrFactor * corrFactor);\n\n          return num;\n        }\n\n        return _numeral._.reduce([value, Math.pow(10, power)], cback, 1);\n      }\n    });\n  })();\n\n  (function () {\n    _numeral.register('format', 'ordinal', {\n      regexps: {\n        format: /(o)/\n      },\n      format: function format(value, _format5, roundingFunction) {\n        var locale = _numeral.locales[_numeral.options.currentLocale],\n            output,\n            ordinal = _numeral._.includes(_format5, ' o') ? ' ' : ''; // check for space before\n\n        _format5 = _format5.replace(/\\s?o/, '');\n        ordinal += locale.ordinal(value);\n        output = _numeral._.numberToFormat(value, _format5, roundingFunction);\n        return output + ordinal;\n      }\n    });\n  })();\n\n  (function () {\n    _numeral.register('format', 'percentage', {\n      regexps: {\n        format: /(%)/,\n        unformat: /(%)/\n      },\n      format: function format(value, _format6, roundingFunction) {\n        var space = _numeral._.includes(_format6, ' %') ? ' ' : '',\n            output;\n\n        if (_numeral.options.scalePercentBy100) {\n          value = value * 100;\n        } // check for space before %\n\n\n        _format6 = _format6.replace(/\\s?\\%/, '');\n        output = _numeral._.numberToFormat(value, _format6, roundingFunction);\n\n        if (_numeral._.includes(output, ')')) {\n          output = output.split('');\n          output.splice(-1, 0, space + '%');\n          output = output.join('');\n        } else {\n          output = output + space + '%';\n        }\n\n        return output;\n      },\n      unformat: function unformat(string) {\n        var number = _numeral._.stringToNumber(string);\n\n        if (_numeral.options.scalePercentBy100) {\n          return number * 0.01;\n        }\n\n        return number;\n      }\n    });\n  })();\n\n  (function () {\n    _numeral.register('format', 'time', {\n      regexps: {\n        format: /(:)/,\n        unformat: /(:)/\n      },\n      format: function format(value, _format7, roundingFunction) {\n        var hours = Math.floor(value / 60 / 60),\n            minutes = Math.floor((value - hours * 60 * 60) / 60),\n            seconds = Math.round(value - hours * 60 * 60 - minutes * 60);\n        return hours + ':' + (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds);\n      },\n      unformat: function unformat(string) {\n        var timeArray = string.split(':'),\n            seconds = 0; // turn hours and minutes into seconds and add them all up\n\n        if (timeArray.length === 3) {\n          // hours\n          seconds = seconds + Number(timeArray[0]) * 60 * 60; // minutes\n\n          seconds = seconds + Number(timeArray[1]) * 60; // seconds\n\n          seconds = seconds + Number(timeArray[2]);\n        } else if (timeArray.length === 2) {\n          // minutes\n          seconds = seconds + Number(timeArray[0]) * 60; // seconds\n\n          seconds = seconds + Number(timeArray[1]);\n        }\n\n        return Number(seconds);\n      }\n    });\n  })();\n\n  return _numeral;\n});","var global = typeof window === 'undefined' ? this || {} : window;\nexport { global };","var trigger;\nvar callbacks = [];\n\nvar notify = function notify() {\n  return callbacks.splice(0).forEach(function (cb) {\n    return cb();\n  });\n};\n\nvar queueMicroTask = function queueMicroTask(callback) {\n  if (!trigger) {\n    var el_1 = document.createTextNode('');\n    var config = {\n      characterData: true\n    };\n    new MutationObserver(function () {\n      return notify();\n    }).observe(el_1, config);\n\n    trigger = function trigger() {\n      el_1.textContent = '';\n    };\n  }\n\n  callbacks.push(callback);\n  trigger();\n};\n\nexport { queueMicroTask };","var ResizeObserverBoxOptions;\n\n(function (ResizeObserverBoxOptions) {\n  ResizeObserverBoxOptions[\"BORDER_BOX\"] = \"border-box\";\n  ResizeObserverBoxOptions[\"CONTENT_BOX\"] = \"content-box\";\n})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));\n\nexport { ResizeObserverBoxOptions };","import { process, isWatching } from '../ResizeObserverController';\nimport { global } from './global';\nimport { queueResizeObserver } from './queueResizeObserver';\nvar CATCH_FRAMES = 60 / 5;\nvar observerConfig = {\n  attributes: true,\n  characterData: true,\n  childList: true,\n  subtree: true\n};\nvar events = ['resize', 'load', 'transitionend', 'animationend', 'animationstart', 'animationiteration', 'keyup', 'keydown', 'mouseup', 'mousedown', 'mouseover', 'mouseout', 'blur', 'focus'];\nvar scheduled = false;\n\nvar Scheduler = function () {\n  function Scheduler() {\n    var _this = this;\n\n    this.stopped = true;\n\n    this.listener = function () {\n      return _this.schedule();\n    };\n  }\n\n  Scheduler.prototype.run = function (frames) {\n    var _this = this;\n\n    if (scheduled) {\n      return;\n    }\n\n    scheduled = true;\n    queueResizeObserver(function () {\n      var elementsHaveResized = false;\n\n      try {\n        elementsHaveResized = process();\n      } finally {\n        scheduled = false;\n\n        if (!isWatching()) {\n          return;\n        }\n\n        if (elementsHaveResized) {\n          _this.run(60);\n        } else if (frames) {\n          _this.run(frames - 1);\n        } else {\n          _this.start();\n        }\n      }\n    });\n  };\n\n  Scheduler.prototype.schedule = function () {\n    this.stop();\n    this.run(CATCH_FRAMES);\n  };\n\n  Scheduler.prototype.observe = function () {\n    var _this = this;\n\n    var cb = function cb() {\n      return _this.observer && _this.observer.observe(document.body, observerConfig);\n    };\n\n    document.body ? cb() : global.addEventListener('DOMContentLoaded', cb);\n  };\n\n  Scheduler.prototype.start = function () {\n    var _this = this;\n\n    if (this.stopped) {\n      this.stopped = false;\n      this.observer = new MutationObserver(this.listener);\n      this.observe();\n      events.forEach(function (name) {\n        return global.addEventListener(name, _this.listener, true);\n      });\n    }\n  };\n\n  Scheduler.prototype.stop = function () {\n    var _this = this;\n\n    if (!this.stopped) {\n      this.observer && this.observer.disconnect();\n      events.forEach(function (name) {\n        return global.removeEventListener(name, _this.listener, true);\n      });\n      this.stopped = true;\n    }\n  };\n\n  return Scheduler;\n}();\n\nvar scheduler = new Scheduler();\nexport { scheduler };","import { queueMicroTask } from './queueMicroTask';\n\nvar queueResizeObserver = function queueResizeObserver(cb) {\n  queueMicroTask(function ResizeObserver() {\n    requestAnimationFrame(cb);\n  });\n};\n\nexport { queueResizeObserver };","var DOMRectReadOnly = function () {\n  function DOMRectReadOnly(x, y, width, height) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.top = this.y;\n    this.left = this.x;\n    this.bottom = this.top + this.height;\n    this.right = this.left + this.width;\n    return Object.freeze(this);\n  }\n\n  DOMRectReadOnly.fromRect = function (rectangle) {\n    return new DOMRectReadOnly(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n  };\n\n  return DOMRectReadOnly;\n}();\n\nexport { DOMRectReadOnly };","var isSVG = function isSVG(target) {\n  return target instanceof SVGElement && 'getBBox' in target;\n};\n\nvar isHidden = function isHidden(target) {\n  if (isSVG(target)) {\n    var _a = target.getBBox(),\n        width = _a.width,\n        height = _a.height;\n\n    return !width && !height;\n  }\n\n  var _b = target,\n      offsetWidth = _b.offsetWidth,\n      offsetHeight = _b.offsetHeight;\n  return !(offsetWidth || offsetHeight || target.getClientRects().length);\n};\n\nvar isReplacedElement = function isReplacedElement(target) {\n  switch (target.tagName) {\n    case 'INPUT':\n      if (target.type !== 'image') {\n        break;\n      }\n\n    case 'VIDEO':\n    case 'AUDIO':\n    case 'EMBED':\n    case 'OBJECT':\n    case 'CANVAS':\n    case 'IFRAME':\n    case 'IMG':\n      return true;\n  }\n\n  return false;\n};\n\nexport { isSVG, isHidden, isReplacedElement };","import { ResizeObserverBoxOptions } from '../ResizeObserverBoxOptions';\nimport { DOMRectReadOnly } from '../DOMRectReadOnly';\nimport { isSVG, isHidden } from '../utils/element';\nimport { global } from '../utils/global';\nvar cache = new Map();\nvar scrollRegexp = /auto|scroll/;\nvar verticalRegexp = /^tb|vertical/;\nvar IE = /msie|trident/i.test(global.navigator && global.navigator.userAgent);\n\nvar parseDimension = function parseDimension(pixel) {\n  return parseFloat(pixel || '0');\n};\n\nvar size = function size(inlineSize, blockSize, switchSizes) {\n  if (inlineSize === void 0) {\n    inlineSize = 0;\n  }\n\n  if (blockSize === void 0) {\n    blockSize = 0;\n  }\n\n  if (switchSizes === void 0) {\n    switchSizes = false;\n  }\n\n  return Object.freeze({\n    inlineSize: (switchSizes ? blockSize : inlineSize) || 0,\n    blockSize: (switchSizes ? inlineSize : blockSize) || 0\n  });\n};\n\nvar zeroBoxes = Object.freeze({\n  borderBoxSize: size(),\n  contentBoxSize: size(),\n  contentRect: new DOMRectReadOnly(0, 0, 0, 0)\n});\n\nvar calculateBoxSizes = function calculateBoxSizes(target) {\n  if (cache.has(target)) {\n    return cache.get(target);\n  }\n\n  if (isHidden(target)) {\n    cache.set(target, zeroBoxes);\n    return zeroBoxes;\n  }\n\n  var cs = getComputedStyle(target);\n  var svg = isSVG(target) && target.getBBox();\n  var removePadding = !IE && cs.boxSizing === 'border-box';\n  var switchSizes = verticalRegexp.test(cs.writingMode || '');\n  var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');\n  var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');\n  var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);\n  var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);\n  var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);\n  var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);\n  var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);\n  var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);\n  var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);\n  var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);\n  var horizontalPadding = paddingLeft + paddingRight;\n  var verticalPadding = paddingTop + paddingBottom;\n  var horizontalBorderArea = borderLeft + borderRight;\n  var verticalBorderArea = borderTop + borderBottom;\n  var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;\n  var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;\n  var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;\n  var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;\n  var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;\n  var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;\n  var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;\n  var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;\n  var boxes = Object.freeze({\n    borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),\n    contentBoxSize: size(contentWidth, contentHeight, switchSizes),\n    contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)\n  });\n  cache.set(target, boxes);\n  return boxes;\n};\n\nvar calculateBoxSize = function calculateBoxSize(target, observedBox) {\n  var _a = calculateBoxSizes(target),\n      borderBoxSize = _a.borderBoxSize,\n      contentBoxSize = _a.contentBoxSize;\n\n  return observedBox === ResizeObserverBoxOptions.BORDER_BOX ? borderBoxSize : contentBoxSize;\n};\n\nexport { calculateBoxSize, calculateBoxSizes, cache };","import { ResizeObserverBoxOptions } from './ResizeObserverBoxOptions';\nimport { calculateBoxSize } from './algorithms/calculateBoxSize';\nimport { isSVG, isReplacedElement } from './utils/element';\n\nvar skipNotifyOnElement = function skipNotifyOnElement(target) {\n  return !isSVG(target) && !isReplacedElement(target) && getComputedStyle(target).display === 'inline';\n};\n\nvar ResizeObservation = function () {\n  function ResizeObservation(target, observedBox) {\n    this.target = target;\n    this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;\n    this.lastReportedSize = {\n      inlineSize: 0,\n      blockSize: 0\n    };\n  }\n\n  ResizeObservation.prototype.isActive = function () {\n    var size = calculateBoxSize(this.target, this.observedBox);\n\n    if (skipNotifyOnElement(this.target)) {\n      this.lastReportedSize = size;\n    }\n\n    if (this.lastReportedSize.inlineSize !== size.inlineSize || this.lastReportedSize.blockSize !== size.blockSize) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return ResizeObservation;\n}();\n\nexport { ResizeObservation };","var ResizeObserverDetail = function () {\n  function ResizeObserverDetail(resizeObserver, callback) {\n    this.activeTargets = [];\n    this.skippedTargets = [];\n    this.observationTargets = [];\n    this.observer = resizeObserver;\n    this.callback = callback;\n  }\n\n  return ResizeObserverDetail;\n}();\n\nexport { ResizeObserverDetail };","var msg = 'ResizeObserver loop completed with undelivered notifications.';\n\nvar deliverResizeLoopError = function deliverResizeLoopError() {\n  var event;\n\n  if (typeof ErrorEvent === 'function') {\n    event = new ErrorEvent('error', {\n      message: msg\n    });\n  } else {\n    event = document.createEvent('Event');\n    event.initEvent('error', false, false);\n    event.message = msg;\n  }\n\n  window.dispatchEvent(event);\n};\n\nexport { deliverResizeLoopError };","import { calculateBoxSizes } from './algorithms/calculateBoxSize';\n\nvar ResizeObserverEntry = function () {\n  function ResizeObserverEntry(target) {\n    var boxes = calculateBoxSizes(target);\n    this.target = target;\n    this.contentRect = boxes.contentRect;\n    this.borderBoxSize = boxes.borderBoxSize;\n    this.contentBoxSize = boxes.contentBoxSize;\n  }\n\n  return ResizeObserverEntry;\n}();\n\nexport { ResizeObserverEntry };","import { isHidden } from '../utils/element';\n\nvar calculateDepthForNode = function calculateDepthForNode(node) {\n  if (isHidden(node)) {\n    return Infinity;\n  }\n\n  var depth = 0;\n  var parent = node.parentNode;\n\n  while (parent) {\n    depth += 1;\n    parent = parent.parentNode;\n  }\n\n  return depth;\n};\n\nexport { calculateDepthForNode };","import { resizeObservers } from '../ResizeObserverController';\nimport { ResizeObserverEntry } from '../ResizeObserverEntry';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nimport { calculateBoxSize } from './calculateBoxSize';\n\nvar broadcastActiveObservations = function broadcastActiveObservations() {\n  var shallowestDepth = Infinity;\n  var callbacks = [];\n  resizeObservers.forEach(function processObserver(ro) {\n    if (ro.activeTargets.length === 0) {\n      return;\n    }\n\n    var entries = [];\n    ro.activeTargets.forEach(function processTarget(ot) {\n      var entry = new ResizeObserverEntry(ot.target);\n      var targetDepth = calculateDepthForNode(ot.target);\n      entries.push(entry);\n      ot.lastReportedSize = calculateBoxSize(ot.target, ot.observedBox);\n\n      if (targetDepth < shallowestDepth) {\n        shallowestDepth = targetDepth;\n      }\n    });\n    callbacks.push(function resizeObserverCallback() {\n      ro.callback.call(ro.observer, entries, ro.observer);\n    });\n    ro.activeTargets.splice(0, ro.activeTargets.length);\n  });\n\n  for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {\n    var callback = callbacks_1[_i];\n    callback();\n  }\n\n  return shallowestDepth;\n};\n\nexport { broadcastActiveObservations };","import { resizeObservers } from '../ResizeObserverController';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nimport { cache as sizeCache } from './calculateBoxSize';\n\nvar gatherActiveObservationsAtDepth = function gatherActiveObservationsAtDepth(depth) {\n  sizeCache.clear();\n  resizeObservers.forEach(function processObserver(ro) {\n    ro.activeTargets.splice(0, ro.activeTargets.length);\n    ro.skippedTargets.splice(0, ro.skippedTargets.length);\n    ro.observationTargets.forEach(function processTarget(ot) {\n      if (ot.isActive()) {\n        if (calculateDepthForNode(ot.target) > depth) {\n          ro.activeTargets.push(ot);\n        } else {\n          ro.skippedTargets.push(ot);\n        }\n      }\n    });\n  });\n};\n\nexport { gatherActiveObservationsAtDepth };","import { scheduler } from './utils/scheduler';\nimport { ResizeObservation } from './ResizeObservation';\nimport { ResizeObserverDetail } from './ResizeObserverDetail';\nimport { hasActiveObservations } from './algorithms/hasActiveObservations';\nimport { hasSkippedObservations } from './algorithms/hasSkippedObservations';\nimport { deliverResizeLoopError } from './algorithms/deliverResizeLoopError';\nimport { broadcastActiveObservations } from './algorithms/broadcastActiveObservations';\nimport { gatherActiveObservationsAtDepth } from './algorithms/gatherActiveObservationsAtDepth';\nvar resizeObservers = [];\nvar observerMap = new Map();\nvar watching = 0;\n\nvar updateCount = function updateCount(n) {\n  !watching && n > 0 && scheduler.start();\n  watching += n;\n  !watching && scheduler.stop();\n};\n\nvar getObservationIndex = function getObservationIndex(observationTargets, target) {\n  for (var i = 0; i < observationTargets.length; i += 1) {\n    if (observationTargets[i].target === target) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\nvar process = function process() {\n  var depth = 0;\n  gatherActiveObservationsAtDepth(depth);\n\n  while (hasActiveObservations()) {\n    depth = broadcastActiveObservations();\n    gatherActiveObservationsAtDepth(depth);\n  }\n\n  if (hasSkippedObservations()) {\n    deliverResizeLoopError();\n  }\n\n  return depth > 0;\n};\n\nvar ResizeObserverController = function () {\n  function ResizeObserverController() {}\n\n  ResizeObserverController.connect = function (resizeObserver, callback) {\n    var detail = new ResizeObserverDetail(resizeObserver, callback);\n    resizeObservers.push(detail);\n    observerMap.set(resizeObserver, detail);\n  };\n\n  ResizeObserverController.observe = function (resizeObserver, target, options) {\n    if (observerMap.has(resizeObserver)) {\n      var detail = observerMap.get(resizeObserver);\n\n      if (getObservationIndex(detail.observationTargets, target) < 0) {\n        detail.observationTargets.push(new ResizeObservation(target, options && options.box));\n        updateCount(1);\n        scheduler.schedule();\n      }\n    }\n  };\n\n  ResizeObserverController.unobserve = function (resizeObserver, target) {\n    if (observerMap.has(resizeObserver)) {\n      var detail = observerMap.get(resizeObserver);\n      var index = getObservationIndex(detail.observationTargets, target);\n\n      if (index >= 0) {\n        detail.observationTargets.splice(index, 1);\n        updateCount(-1);\n      }\n    }\n  };\n\n  ResizeObserverController.disconnect = function (resizeObserver) {\n    if (observerMap.has(resizeObserver)) {\n      var detail = observerMap.get(resizeObserver);\n      resizeObservers.splice(resizeObservers.indexOf(detail), 1);\n      observerMap.delete(resizeObserver);\n      updateCount(-detail.observationTargets.length);\n    }\n  };\n\n  return ResizeObserverController;\n}();\n\nvar isWatching = function isWatching() {\n  return !!watching;\n};\n\nexport { ResizeObserverController, resizeObservers, process, isWatching };","import { resizeObservers } from '../ResizeObserverController';\n\nvar hasActiveObservations = function hasActiveObservations() {\n  return resizeObservers.some(function (ro) {\n    return ro.activeTargets.length > 0;\n  });\n};\n\nexport { hasActiveObservations };","import { resizeObservers } from '../ResizeObserverController';\n\nvar hasSkippedObservations = function hasSkippedObservations() {\n  return resizeObservers.some(function (ro) {\n    return ro.skippedTargets.length > 0;\n  });\n};\n\nexport { hasSkippedObservations };","import { ResizeObserverController } from './ResizeObserverController';\n\nvar ResizeObserver = function () {\n  function ResizeObserver(callback) {\n    if (arguments.length === 0) {\n      throw new TypeError(\"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\");\n    }\n\n    if (typeof callback !== 'function') {\n      throw new TypeError(\"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\");\n    }\n\n    ResizeObserverController.connect(this, callback);\n  }\n\n  ResizeObserver.prototype.observe = function (target, options) {\n    if (arguments.length === 0) {\n      throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n    }\n\n    if (target instanceof Element === false) {\n      throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n    }\n\n    ResizeObserverController.observe(this, target, options);\n  };\n\n  ResizeObserver.prototype.unobserve = function (target) {\n    if (arguments.length === 0) {\n      throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n    }\n\n    if (target instanceof Element === false) {\n      throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n    }\n\n    ResizeObserverController.unobserve(this, target);\n  };\n\n  ResizeObserver.prototype.disconnect = function () {\n    ResizeObserverController.disconnect(this);\n  };\n\n  ResizeObserver.toString = function () {\n    return 'function ResizeObserver () { [polyfill code] }';\n  };\n\n  return ResizeObserver;\n}();\n\nexport default ResizeObserver;\nexport { ResizeObserver };"],"sourceRoot":""}