{"version":3,"sources":["components/Blog/posts/Spirals/utils.js","components/Blog/posts/Spirals/SpiralsHero.jsx","components/Blog/posts/Spirals/SpiralsForceDemo.jsx","components/Blog/posts/Spirals/Spirals.jsx","components/_ui/Expandy/Expandy.jsx"],"names":["require","getSpiralPositions","pointRadius","arguments","length","undefined","n","angleDiff","distance","angle","Array","fill","map","_","i","radius","Math","sqrt","asin","PI","x","cos","y","sin","combineChartDimensions","dms","parsedDimensions","Object","objectSpread2","marginTop","marginRight","marginBottom","marginLeft","boundedHeight","max","height","boundedWidth","width","useChartDimensions","passedSettings","ref","useRef","_useState","useState","_useState2","slicedToArray","changeWidth","_useState3","_useState4","changeHeight","useEffect","element","current","resizeObserver","ResizeObserver","entries","isArray","entry","contentRect","observe","unobserve","newSettings","useIsOnScreen","rootMargin","_useState5","_useState6","isIntersecting","setIntersecting","observer","IntersectionObserver","_ref","dmsSettings","scaleSequential","interpolatePlasma","spiralPositions","SpiralsHero","_useChartDimensions","_useChartDimensions2","containerElem","currentDms","canvasElem","isOnScreen","isOnScreenCurrent","focusPoint","positions","d","vx","vy","simulation","color","hsl","force","forceX","forceY","forceSimulation","forceCollide","r","strength","nodes","on","alpha","context","getContext","clearRect","globalAlpha","fillStyle","rgb","forEach","beginPath","arc","drawDots","tick","h","react_default","a","createElement","className","onMouseMove","e","pos","clientX","clientY","spiral","floor","random","movementColorScale","movementColorScaleTicks","ticks","slice","reverse","SpiralsForceDemo","_ref$r","_ref$num","num","_ref$angleDiff","_ref$distance","_ref$doUseNans","doUseNans","_ref$doUseForce","doUseForce","_ref$doUseSpiral","doUseSpiral","_ref$doStopWhenOffScr","doStopWhenOffScreen","_ref$hasMovementTicks","hasMovementTicks","_ref$onDurationUpdate","onDurationUpdate","localR","setLocalR","localNum","setLocalNum","localAngleDiff","setLocalAngleDiff","_useState7","_useState8","localDistance","setLocalDistance","_useState9","_useState10","duration","setDuration","_useState11","_useState12","iteration","setIteration","scaledR","currentIteration","_ref2","movement","startSimulation","initialPositions","startTime","Date","stop","isRunning","lastPositions","tickIterations","dotDiffs","b","pow","abs","avgDotDiffs","reduce","sum","requestAnimationFrame","Fragment","format","Button","onClick","Icon","name","key","direction","size","_ref3","_ref4","value","style","background","Slider_default","min","onChange","step","MobileDemo","Spirals","largeExampleDuration","setLargeExampleDuration","demoProps","setDemoProps","Helmet","charSet","rel","href","property","content","posts_Spirals_SpiralsHero","Link","to","ScrollEvent","isInViewChange","Spirals_MobileDemo","Expandy","trigger","triggerExpandText","Code","doWrap","posts_Spirals_SpiralsForceDemo","props","window","innerWidth","assign","doHideIfCollapsed","children","_Users_linying_codespace_Lyzzz_s_Blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","_Users_linying_codespace_Lyzzz_s_Blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isExpanded","setIsExpanded","react__WEBPACK_IMPORTED_MODULE_2___default","concat","onToggle","target","open","components_ui_Tooltip_Tooltip__WEBPACK_IMPORTED_MODULE_4__","contents","components_ui_Icon_Icon__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"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","file":"static/js/48.f16e149c.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\"\nimport ResizeObserver from '@juggle/resize-observer';\n\n// eslint-disable-next-line import/no-webpack-loader-syntax\nrequire('intersection-observer');\n\nexport const getSpiralPositions = (\n  pointRadius=5, n=100, angleDiff=2, distance=1.5\n) => {\n  let angle = 0\n  return new Array(n).fill(0).map((_, i) => {\n    const radius = Math.sqrt(i + 0.3) * pointRadius * distance\n    angle += Math.asin(1 / radius) * pointRadius * angleDiff\n    angle = angle % (Math.PI * 2)\n    return {\n      x: Math.cos(angle) * radius,\n      y: Math.sin(angle) * radius,\n      angle,\n    }\n  })\n}\n\nexport const sum = (arr=[]) => arr.reduce((a,b) => +a + +b, [])\n\nexport const getDistance = (a, b) => (\n  Math.sqrt(\n    Math.pow(Math.abs(a.x - b.x), 2)\n    + Math.pow(Math.abs(a.y - b.y), 2)\n  )\n)\n\nconst combineChartDimensions = dms => {\n  let parsedDimensions = {\n      marginTop: 0,\n      marginRight: 0,\n      marginBottom: 0,\n      marginLeft: 0,\n      ...dms,\n  }\n\n  return {\n      ...parsedDimensions,\n      boundedHeight: Math.max(parsedDimensions.height - parsedDimensions.marginTop - parsedDimensions.marginBottom, 0),\n      boundedWidth: Math.max(parsedDimensions.width - parsedDimensions.marginLeft - parsedDimensions.marginRight, 0),\n  }\n}\n\nexport const useChartDimensions = (passedSettings={}) => {\n  const ref = useRef()\n  const dms = combineChartDimensions(passedSettings)\n\n  const [width, changeWidth] = useState(0)\n  const [height, changeHeight] = useState(0)\n\n  useEffect(() => {\n    if (dms.width && dms.height) return\n\n    const element = ref.current\n    const resizeObserver = new ResizeObserver(entries => {\n      if (!Array.isArray(entries)) return\n      if (!entries.length) return\n\n      const entry = entries[0]\n\n      if (width != entry.contentRect.width) changeWidth(entry.contentRect.width)\n      if (height != entry.contentRect.height) changeHeight(entry.contentRect.height)\n    })\n\n    resizeObserver.observe(element)\n\n    return () => resizeObserver.unobserve(element)\n  }, [])\n\n  const newSettings = combineChartDimensions({\n    ...dms,\n    width: dms.width || width,\n    height: dms.height || height,\n  })\n\n  return [ref, newSettings]\n}\n\nexport const useIsOnScreen = (ref, rootMargin = '0px') => {\n  // State and setter for storing whether element is visible\n  const [isIntersecting, setIntersecting] = useState(false);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        // Update our state when observer callback fires\n        setIntersecting(entry.isIntersecting);\n      },\n      {\n        rootMargin\n      }\n    );\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n    return () => {\n      observer.unobserve(ref.current);\n    };\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return isIntersecting;\n}","import React, { useEffect, useMemo, useRef, useState } from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport { scaleLinear, scaleSequential } from \"d3-scale\"\nimport { hsl } from \"d3-color\"\nimport { interpolatePlasma } from \"d3-scale-chromatic\"\nimport Slider from 'rc-slider/lib/Slider';\nimport \"rc-slider/assets/index.css\"\nimport { forceSimulation, forceX, forceY, forceCollide, forceCenter, forceRadial } from \"d3-force\"\n\nimport { getDistance, getSpiralPositions, sum, useChartDimensions, useIsOnScreen } from \"./utils\"\nimport { useInterval } from \"utils/utils\"\n\nimport \"./SpiralsHero.scss\"\n\nconst movementColorScale = scaleSequential(\n  // [-130, 600],\n  [1000, -100],\n  // [-100, 1000],\n  // .range([\"#B9B6C8\", \"#D9A16A\"])\n  interpolatePlasma,\n)\n\nconst dmsSettings = {\n  marginTop: 0,\n  marginRight: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n}\nconst r = 5\nconst num = 600\nconst spiralPositions = [\n  getSpiralPositions(r, num, 2, 2.5),\n  getSpiralPositions(r, num, 3, 3.5),\n  getSpiralPositions(r, num, 2.3, 1.75),\n  getSpiralPositions(r, num, 3.9, 4.1),\n  getSpiralPositions(r, num, 2.5, 1.6),\n  getSpiralPositions(r, num, 2.3, 2.9),\n  getSpiralPositions(r, num, 4.3, 1.9),\n  getSpiralPositions(r, num, 9.12, 2),\n  getSpiralPositions(r, num, 6.98, 2),\n  getSpiralPositions(r, num, 6.28, 2),\n  getSpiralPositions(r, num, 6.25, 2),\n  getSpiralPositions(r, num, 6.07, 2),\n  getSpiralPositions(r, num, 5.93, 2),\n  getSpiralPositions(r, num, 6.28, 1.59),\n  getSpiralPositions(r, num, 6.31, 2.29),\n]\nconst SpiralsHero = () => {\n  const [containerElem, dms] = useChartDimensions(dmsSettings)\n  const currentDms = useRef({})\n  const canvasElem = useRef()\n  const isOnScreen = useIsOnScreen(containerElem)\n  const isOnScreenCurrent = useRef()\n\n  const focusPoint = useRef([])\n  const positions = useRef(spiralPositions[0].map(d => ({...d, vx: 0.6, vy: 0.6})))\n  const simulation = useRef()\n  const color = useRef(hsl(\"#628BD3\"))\n\n  useEffect(() => {\n    isOnScreenCurrent.current = isOnScreen\n  }, [isOnScreen])\n\n  useEffect(() => {\n    focusPoint.current = [\n      dms.width / 2,\n      dms.height / 2,\n    ]\n    if (simulation.current) {\n      simulation.current\n        .force(\"x\", forceX((d,i) => dms.width / 2))\n        .force(\"y\", forceY((d,i) => dms.height / 2))\n    }\n    currentDms.current = dms\n  }, [dms.width, dms.height])\n\n  const drawDots = () => {\n    simulation.current.alpha(0.8)\n    if (!isOnScreenCurrent.current) return\n\n    if (!canvasElem.current) return\n    const context = canvasElem.current.getContext(\"2d\")\n\n    context.clearRect(0, 0, currentDms.current.width, currentDms.current.height)\n\n    context.globalAlpha = 0.9\n    // context.globalCompositeOperation = \"multiply\"\n    context.fillStyle = color.current.rgb()\n    // context.fillStyle = \"#9980FA\"\n\n    positions.current.forEach(({x, y}) => {\n      context.beginPath()\n      context.arc(\n        x, y, r,\n        0, 2 * Math.PI, false\n      )\n      context.fill()\n    })\n  }\n\n  useEffect(() => {\n    simulation.current = forceSimulation()\n      .force(\"x\", forceX(d => focusPoint.current[0]))\n      .force(\"y\", forceY(d => focusPoint.current[1]))\n      .force(\"collide\", forceCollide(() => r + 3.9).strength(0.6))\n      // .velocityDecay(0.1)\n      .nodes(positions.current)\n      // .stop()\n      .on(\"tick\", () => {\n        drawDots()\n        if (!simulation.current) return\n        simulation.current.tick()\n        color.current.h += 1\n      })\n  }, [])\n\n  const onMouseMove = e => {\n    const pos = [\n      e.clientX,\n      e.clientY,\n    ]\n    focusPoint.current = pos\n    const spiral = spiralPositions[Math.floor(Math.random() * spiralPositions.length)]\n    simulation.current\n      .force(\"x\", forceX((d,i) => focusPoint.current[0] + spiral[i].x).strength(0.3))\n      .force(\"y\", forceY((d,i) => focusPoint.current[1] + spiral[i].y).strength(0.3))\n\n    positions.current.forEach((d,i) => {\n      d.x = positions.current[0].x\n      d.y = positions.current[0].y\n    })\n  }\n\n  return (\n    <div className=\"SpiralsHero\" ref={containerElem}>\n      <canvas\n        ref={canvasElem}\n        width={dms.width}\n        height={dms.height}\n        onMouseMove={onMouseMove}\n      />\n      <div className=\"SpiralsHero__text\">\n        <h1>\n          Use the Force\n        </h1>\n        <h3>\n          Speeding up force simulations with spirals\n        </h3>\n      </div>\n    </div>\n  )\n}\n\nexport default SpiralsHero;\n","import React, { useEffect, useRef, useState } from \"react\"\nimport { format } from \"d3-format\"\nimport { scaleSequential } from \"d3-scale\"\nimport { interpolatePlasma } from \"d3-scale-chromatic\"\nimport { forceSimulation, forceX, forceY, forceCollide } from \"d3-force\"\nimport Slider from 'rc-slider/lib/Slider';\nimport \"rc-slider/assets/index.css\"\n\nimport Button from \"components/_ui/Button/Button\"\nimport Icon from \"components/_ui/Icon/Icon\"\nimport { getSpiralPositions, getDistance, sum, useChartDimensions, useIsOnScreen } from \"./utils\"\n\nimport \"./SpiralsForceDemo.scss\"\n\nconst SpiralsForceDemo = ({ r=5, num=600, angleDiff=2, distance=1.5, doUseNans=false, doUseForce=false, doUseSpiral=false, doStopWhenOffScreen=false, hasMovementTicks=false, onDurationUpdate=() => {} }) => {\n  const [localR, setLocalR] = useState(r || 5)\n  const [localNum, setLocalNum] = useState(num || 600)\n  const [localAngleDiff, setLocalAngleDiff] = useState(angleDiff || 2)\n  const [localDistance, setLocalDistance] = useState(distance || 1.5)\n\n  const [duration, setDuration] = useState(null)\n  const [iteration, setIteration] = useState(null)\n  const [containerElem, dms] = useChartDimensions()\n\n  const scaledR = localR * (dms.width < 800 ? (dms.width / 500 + 0.1) : 1)\n\n  const positions = useRef()\n\n  const canvasElem = useRef()\n  const currentIteration = useRef()\n  const isOnScreen = useIsOnScreen(containerElem)\n  const isOnScreenCurrent = useRef()\n\n  useEffect(() => {\n    isOnScreenCurrent.current = isOnScreen\n  }, [isOnScreen])\n\n  useEffect(() => {\n    setLocalNum(num)\n  }, [num])\n  useEffect(() => {\n    setLocalAngleDiff(angleDiff)\n  }, [angleDiff])\n  useEffect(() => {\n    setLocalDistance(distance)\n  }, [distance])\n\n  useEffect(() => {\n    setIteration(iteration + 1)\n    currentIteration.current = iteration + 1\n  }, [num, doUseForce, doUseSpiral, localR, localNum, localAngleDiff, localDistance, (doStopWhenOffScreen && isOnScreen)])\n  useEffect(() => {\n    currentIteration.current = iteration\n  }, [iteration])\n\n  function drawDots() {\n    // const alpha = simulation.current.alpha()\n    // if (alpha < 0.001) {\n    //   simulation.current.stop()\n    //   const duration = (new Date() - startTime.current) / 1000\n    //   setDuration(duration)\n    // }\n\n    if (!canvasElem.current) return\n    const context = canvasElem.current.getContext(\"2d\")\n\n    context.clearRect(0, 0, dms.width, dms.height)\n    context.fillStyle = \"#9980FA\"\n\n    positions.current.forEach(({x, y, movement}) => {\n      context.fillStyle = movementColorScale(movement) || \"#9980FA\"\n      context.beginPath()\n      context.arc(\n        x + dms.width / 2, y + dms.height / 2, scaledR,\n        0, 2 * Math.PI, false\n      )\n      context.fill()\n    })\n  }\n\n  const startSimulation = () => {\n    const initialPositions = doUseSpiral\n      ? getSpiralPositions(\n        scaledR,\n        localNum,\n        localAngleDiff,\n        localDistance,\n      )\n      : new Array(localNum).fill(0).map(() => (doUseNans ? {} : {x: 0, y: 0}))\n\n    positions.current = initialPositions\n\n    if (!doUseForce) {\n      drawDots()\n      return\n    }\n\n    const startTime = new Date()\n    let simulation = forceSimulation()\n      .force(\"x\", forceX(d => d.x))\n      .force(\"y\", forceY(d => d.y))\n      .force(\"collide\", forceCollide(() => scaledR + 2).strength(0.6))\n      .nodes(positions.current)\n      .stop()\n\n    let isRunning = true\n\n    let lastPositions = positions.current\n    let tickIterations = 0\n\n    const tick = () => {\n      if (!isRunning) return\n      if (currentIteration.current != iteration) {\n        isRunning = false\n        return\n      }\n\n      const dotDiffs = lastPositions.map((d, i) => (\n        getDistance(d, positions.current[i])\n      ))\n      const avgDotDiffs = sum(dotDiffs) / positions.current.length\n      positions.current.forEach((d, i) => {\n        if (!d.movement) d.movement = 0\n        d.movement += dotDiffs[i]\n      })\n\n      if (!(tickIterations % 4)) {\n        const duration = (new Date() - startTime) / 1000\n        setDuration(duration)\n      }\n\n      if (\n        avgDotDiffs < 0.03\n        && tickIterations > 12\n        || (doStopWhenOffScreen && !isOnScreenCurrent.current)\n      ) {\n        const duration = (new Date() - startTime) / 1000\n        setDuration(duration)\n        onDurationUpdate(duration)\n        isRunning = false\n      }\n\n      lastPositions = positions.current.map(d => ({\n        x: d.x,\n        y: d.y,\n      }))\n      tickIterations++\n\n      simulation.tick()\n      drawDots()\n      requestAnimationFrame(tick)\n    }\n    tick()\n  }\n  useEffect(() => {\n    startSimulation()\n  }, [iteration])\n\n  const onRefresh = () => {\n    setIteration(iteration + 1)\n  }\n\n  return (\n    <div className=\"SpiralsForceDemo\" ref={containerElem}>\n      {doUseForce && (\n        <>\n          <h6 className=\"SpiralsForceDemo__time\">\n            Duration:\n            <div className=\"SpiralsForceDemo__time__numbers\">\n              { duration ? format(\",.1f\")(duration) : \"-\" }\n            </div>\n            seconds\n          </h6>\n          <Button className=\"SpiralsForceDemo__refresh\" onClick={onRefresh}>\n            <Icon name=\"refresh\" key={iteration} />\n            Restart simulation\n          </Button>\n        </>\n      )}\n      {hasMovementTicks && (\n        <div className=\"SpiralsForceDemo__ticks\">\n          <div className=\"SpiralsForceDemo__ticks__label\">\n            More movement <Icon name=\"arrow\" direction=\"e\" size=\"s\" />\n          </div>\n          {movementColorScaleTicks.map(([value, color]) => (\n            <div\n              key={value}\n              className=\"SpiralsForceDemo__ticks__item\"\n              style={{\n                background: color,\n              }}\n            />\n          ))}\n        </div>\n      )}\n      {doUseSpiral && (\n        <div className=\"SpiralsForceDemo__sliders\">\n          <div className=\"SpiralsForceDemo__slider-group\">\n            <div className=\"SpiralsForceDemo__slider-group__labels\">\n              <h6>r</h6>\n              <h6>{ localR }</h6>\n            </div>\n            <Slider\n              className=\"SpiralsForceDemo__slider\"\n              value={localR}\n              min={0}\n              max={7}\n              onChange={setLocalR}\n            />\n          </div>\n\n          <div className=\"SpiralsForceDemo__slider-group\">\n            <div className=\"SpiralsForceDemo__slider-group__labels\">\n              <h6>num</h6>\n              <h6>{ num }</h6>\n            </div>\n            <Slider\n              className=\"SpiralsForceDemo__slider\"\n              value={localNum}\n              min={0}\n              max={1000}\n              onChange={setLocalNum}\n            />\n          </div>\n\n          <div className=\"SpiralsForceDemo__slider-group\">\n            <div className=\"SpiralsForceDemo__slider-group__labels\">\n              <h6>angleDiff</h6>\n              <h6>{ localAngleDiff }</h6>\n            </div>\n            <Slider\n              className=\"SpiralsForceDemo__slider\"\n              value={localAngleDiff}\n              min={0}\n              max={10}\n              step={0.01}\n              onChange={setLocalAngleDiff}\n            />\n          </div>\n\n          <div className=\"SpiralsForceDemo__slider-group\">\n            <div className=\"SpiralsForceDemo__slider-group__labels\">\n              <h6>distance</h6>\n              <h6>{ localDistance }</h6>\n            </div>\n            <Slider\n              className=\"SpiralsForceDemo__slider\"\n              value={localDistance}\n              min={0}\n              max={3}\n              step={0.01}\n              onChange={setLocalDistance}\n            />\n          </div>\n        </div>\n      )}\n      <canvas\n        ref={canvasElem}\n        width={dms.width}\n        height={dms.height}\n      />\n    </div>\n  )\n}\n\nconst movementColorScale = scaleSequential(\n  // [-130, 600],\n  [1000, -100],\n  // [-100, 1000],\n  // .range([\"#B9B6C8\", \"#D9A16A\"])\n  interpolatePlasma,\n)\n\nconst movementColorScaleTicks = movementColorScale.ticks(9).map(d => [\n  d,\n  movementColorScale(d),\n]).slice(1).reverse()\n\nexport default SpiralsForceDemo","import React, { useState } from \"react\"\nimport { Helmet } from \"react-helmet\"\n\nimport Code from \"components/_ui/Code/Code\"\nimport Icon from \"components/_ui/Icon/Icon\"\nimport Link from \"components/_ui/Link/Link\"\nimport Expandy from \"components/_ui/Expandy/Expandy\"\nimport ScrollEvent from \"components/_ui/ScrollEvent/ScrollEvent\"\n\nimport SpiralsHero from \"./SpiralsHero\"\nimport SpiralsForceDemo from \"./SpiralsForceDemo\"\nimport SpiralsDemo from \"./SpiralsDemo\"\n\nimport \"./Spirals.scss\"\n\nconst Spirals = () => {\n  const [largeExampleDuration, setLargeExampleDuration] = useState(\"...\")\n  const [demoProps, setDemoProps] = useState({})\n\n  return (\n    <div className=\"Spirals\">\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>Speeding up force simulations with spirals</title>\n        <link rel=\"canonical\" href=\"https://wattenberger.com/blog/spirals\" />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta name=\"description\" content=\"D3.js force simulations are great for implementing basic physical rules, but they can be expensive to run. Here's a trick I've used in the past to speed up those simulations.\" />\n      </Helmet>\n\n      <div className=\"Spirals__spin-me\">\n        <Icon name=\"paperclip\" className=\"Spirals__spin-me__icon\" />\n        This post is easiest to read in landscape mode\n      </div>\n\n      <SpiralsHero />\n\n      <div className=\"Spirals__content\">\n        <div className=\"Spirals__side-by-side\">\n          <div className=\"Spirals__left\">\n            <p>\n              One of the most enjoyable parts of the <Link to=\"https://d3js.org/\">d3.js</Link> API is the <Link to=\"https://github.com/d3/d3-force\">d3-force</Link> module.\n            </p>\n            <p>\n              Using <Link to=\"https://github.com/d3/d3-force\">d3-force</Link>, we can create a <b>force simulation</b> that gives life to basic particles, moving them according to basic physical rules.\n            </p>\n\n\n            <ScrollEvent className=\"Spirals__section\" isInViewChange={d => {\n              if (d != 0) return\n              setDemoProps({\n                doUseForce: false,\n                doUseSpiral: false,\n                num: 100,\n              })\n            }}>\n              <p>\n                For example, say we have an array of 100 points at [0, 0].\n              </p>\n              <p>\n                Let's visualize them all!\n              </p>\n              <MobileDemo {...{\n                doUseForce: false,\n                doUseSpiral: false,\n                num: 100,\n              }} />\n              <p>\n                Hmm, that was a little underwhelming, wasn't it?\n              </p>\n\n            </ScrollEvent>\n\n            <ScrollEvent className=\"Spirals__section\" isInViewChange={d => {\n              if (d != 0) return\n              setDemoProps({\n                doUseForce: true,\n                hasMovementTicks: true,\n                doUseSpiral: false,\n                num: 100,\n              })\n            }}>\n              <p>\n                Let's add some physical forces to prevent our dots from overlapping, so we can see them all at once.\n              </p>\n              <MobileDemo {...{\n                doUseForce: true,\n                hasMovementTicks: true,\n                doUseSpiral: false,\n                num: 100,\n              }} />\n              <p>\n                Fun! We run into an issue, however, when we have more particles to animate.\n              </p>\n            </ScrollEvent>\n\n            <ScrollEvent className=\"Spirals__section\" isInViewChange={d => {\n              if (d != 0) return\n              setDemoProps({\n                doUseForce: true,\n                hasMovementTicks: true,\n                doUseSpiral: false,\n                num: 600,\n                onDurationUpdate: d => setLargeExampleDuration(d),\n              })\n            }}>\n              <p>\n                For example, let's look at how things run when we have 600 dots to animate.\n              </p>\n              <MobileDemo {...{\n                doUseForce: true,\n                hasMovementTicks: true,\n                doUseSpiral: false,\n                num: 600,\n                onDurationUpdate: d => setLargeExampleDuration(d),\n              }} />\n              <p>\n                Oh boy, this simulation took { (largeExampleDuration + \"\").slice(0, 4) } seconds.\n              </p>\n            </ScrollEvent>\n\n            <ScrollEvent className=\"Spirals__section\" isInViewChange={d => {\n              if (d != 0) return\n              setDemoProps({\n                doUseForce: false,\n                doUseSpiral: true,\n                num: 600,\n              })\n            }}>\n              <p>\n                Instead, let's space our dots out by arranging them in a spiral.\n              </p>\n              <Expandy trigger=\"How do I generate a spiral?\" triggerExpandText=\"tap to show code\">\n                <Code size=\"s\" doWrap={false}>\n    {`const getSpiralPositions = (\n      pointRadius=5, n=100, angleDiff=3, distance=1.5\n    ) => {\n      let angle = 0\n      return new Array(n).fill(0).map((_, i) => {\n        const radius = Math.sqrt(i + 0.3) * pointRadius * distance\n        angle += Math.asin(1 / radius) * pointRadius * angleDiff\n        angle = angle % (Math.PI * 2)\n        return {\n          x: Math.cos(angle) * radius,\n          y: Math.sin(angle) * radius,\n          angle,\n        }\n      })\n    }`}\n                </Code>\n              </Expandy>\n              <MobileDemo {...{\n                doUseForce: false,\n                doUseSpiral: true,\n                num: 600,\n              }} />\n            </ScrollEvent>\n\n                {/* <SpiralsDemo /> */}\n\n            <ScrollEvent className=\"Spirals__section\" isInViewChange={d => {\n              if (d != 0) return\n              setDemoProps({\n                doUseForce: true,\n                hasMovementTicks: true,\n                doUseSpiral: true,\n              })\n            }}>\n              <p>\n                Perfect! Let's compare our naive approach with starting our dots in a spiral configuration.\n              </p>\n\n              <MobileDemo {...{\n                doUseForce: true,\n                hasMovementTicks: true,\n                doUseSpiral: true,\n              }} />\n            </ScrollEvent>\n          </div>\n\n          <div className=\"Spirals__demo\">\n            <SpiralsForceDemo {...demoProps} />\n          </div>\n        </div>\n        <div className=\"Spirals__text\">\n          <p>\n            The astute reader might notice that we could just create a spiral with zero overlap, and we wouldn't need a simulation to space out our dots.\n          </p>\n          <p>\n            In fact, this behavior is built right into d3.js! Examining <Link to=\"https://github.com/d3/d3-force/blob/aa410cf32eda02bdf17c84e43d9cb3d14fb102aa/src/simulation.js#L64-L71\">the code</Link> will show that d3 will initialize points in a <Link to=\"https://observablehq.com/@mbostock/phyllotaxis\">Phyllotaxis arrangement</Link> when no initial <b>x</b> or <b>y</b> value is specified.\n          </p>\n\n          <div className=\"Spirals__free-demo\">\n            <SpiralsForceDemo\n              doUseNans\n              doUseForce\n              r={4.3}\n              doStopWhenOffScreen\n            />\n          </div>\n\n          <p>\n            The default Phyllotaxis arrangement is a great option if your dots are around 3-5 pixels in radius and you want them to start around [0, 0].\n          </p>\n\n          <p>\n            While this makes sense for our simple demo, the real world is often more complex. I needed both in a recent project where I was displaying a dynamic number of dots over different countries. But some countries' spirals were overlapping!\n          </p>\n\n          <p>\n            This method could also be useful for dynamically sized dots. I hope you find this technique useful, and I can't wait to see how you use it!\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Spirals;\n\n\nconst MobileDemo = props => {\n  if (window.innerWidth > 800) return null\n  return (\n    <div className=\"Spirals__mobile-demo\">\n      <SpiralsForceDemo {...props} doStopWhenOffScreen />\n    </div>\n  )\n}","import React, { useState, useRef } from 'react'\nimport Icon from \"components/_ui/Icon/Icon\";\nimport Tooltip from \"components/_ui/Tooltip/Tooltip\";\nimport { scrollTo } from \"utils.js\"\n\nimport './Expandy.scss';\n\nconst Expandy = ({ trigger, triggerExpandText, doHideIfCollapsed=false, className, children, ...props }) => {\n    const [isExpanded, setIsExpanded] = useState(false)\n    const ref = useRef()\n\n    // const onToggleExpanded = () => {\n    //     setIsExpanded(!isExpanded)\n\n    //     if (isExpanded) {\n    //         const top = ref.current.getBoundingClientRect().top\n    //         if (top > window.innerHeight * 0.3) return\n    //         const y = top\n    //             + window.scrollY\n    //             - window.innerHeight * 0.3\n    //         scrollTo(y, 600)\n    //     }\n    // }\n\n    return (\n        <details className={`Expandy Expandy--is-${isExpanded ? \"expanded\" : \"collapsed\"} ${className}`} {...props} ref={ref}\n            onToggle={e => {\n                const isExpanded = e.target.open\n                setIsExpanded(isExpanded)\n        }}>\n            <summary>\n            <div className=\"Expandy__trigger button-no-appearance\" >\n                <div className=\"Expandy__trigger__text\">\n                    <b>{ trigger }</b>\n                    <div className=\"Expandy__trigger__info\">\n                        { triggerExpandText || `tap me ${isExpanded ? \"to hide\" : \"for more\" } details` }\n                    </div>\n                </div>\n                <div className=\"Expandy__trigger__mark\">ἰ</div>\n            </div>\n\n            <Tooltip\n                className=\"Expandy__toggle\"\n                contents={<button className=\"button-no-appearance\">{isExpanded ? \"Collapse me\" : \"Expand me\"}</button>}\n                >\n                <div className=\"Expandy__toggle__arrow Expandy__toggle__arrow--up\">\n                    <Icon name=\"arrow\" direction=\"n\" size=\"s\" />\n                </div>\n                <div className=\"Expandy__toggle__arrow Expandy__toggle__arrow--down\">\n                    <Icon name=\"arrow\" direction=\"s\" size=\"s\" />\n                </div>\n                </Tooltip>\n                </summary>\n            <div className=\"Expandy__contents\">\n                {children }\n            </div>\n        </details>\n    )\n}\n\nexport default Expandy\n"],"sourceRoot":""}