{"version":3,"sources":["../node_modules/d3-weighted-voronoi/build/d3-weighted-voronoi.js","../node_modules/d3-weighted-voronoi/node_modules/d3-array/src/ascending.js","../node_modules/d3-weighted-voronoi/node_modules/d3-array/src/bisector.js","../node_modules/d3-weighted-voronoi/node_modules/d3-array/src/bisect.js","../node_modules/d3-weighted-voronoi/node_modules/d3-array/src/pairs.js","../node_modules/d3-weighted-voronoi/node_modules/d3-array/src/cross.js","../node_modules/d3-weighted-voronoi/node_modules/d3-array/src/descending.js","../node_modules/d3-weighted-voronoi/node_modules/d3-array/src/number.js","../node_modules/d3-weighted-voronoi/node_modules/d3-array/src/variance.js","../node_modules/d3-weighted-voronoi/node_modules/d3-array/src/deviation.js","../node_modules/d3-weighted-voronoi/node_modules/d3-array/src/extent.js","../node_modules/d3-weighted-voronoi/node_modules/d3-array/src/array.js","../node_modules/d3-weighted-voronoi/node_modules/d3-array/src/constant.js","../node_modules/d3-weighted-voronoi/node_modules/d3-array/src/identity.js","../node_modules/d3-weighted-voronoi/node_modules/d3-array/src/range.js","../node_modules/d3-weighted-voronoi/node_modules/d3-array/src/ticks.js","../node_modules/d3-weighted-voronoi/node_modules/d3-array/src/threshold/sturges.js","../node_modules/d3-weighted-voronoi/node_modules/d3-array/src/histogram.js","../node_modules/d3-weighted-voronoi/node_modules/d3-array/src/quantile.js","../node_modules/d3-weighted-voronoi/node_modules/d3-array/src/threshold/freedmanDiaconis.js","../node_modules/d3-weighted-voronoi/node_modules/d3-array/src/threshold/scott.js","../node_modules/d3-weighted-voronoi/node_modules/d3-array/src/max.js","../node_modules/d3-weighted-voronoi/node_modules/d3-array/src/mean.js","../node_modules/d3-weighted-voronoi/node_modules/d3-array/src/median.js","../node_modules/d3-weighted-voronoi/node_modules/d3-array/src/merge.js","../node_modules/d3-weighted-voronoi/node_modules/d3-array/src/min.js","../node_modules/d3-weighted-voronoi/node_modules/d3-array/src/permute.js","../node_modules/d3-weighted-voronoi/node_modules/d3-array/src/scan.js","../node_modules/d3-weighted-voronoi/node_modules/d3-array/src/shuffle.js","../node_modules/d3-weighted-voronoi/node_modules/d3-array/src/sum.js","../node_modules/d3-weighted-voronoi/node_modules/d3-array/src/transpose.js","../node_modules/d3-weighted-voronoi/node_modules/d3-array/src/zip.js","../node_modules/d3-weighted-voronoi/node_modules/d3-array/src/index.js","../node_modules/d3-polygon/src/area.js","../node_modules/d3-polygon/src/centroid.js","../node_modules/d3-polygon/src/cross.js","../node_modules/d3-polygon/src/hull.js","../node_modules/d3-polygon/src/contains.js","../node_modules/d3-polygon/src/length.js","../node_modules/d3-polygon/src/index.js","../node_modules/@juggle/resize-observer/lib/utils/global.js","../node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js","../node_modules/@juggle/resize-observer/lib/utils/scheduler.js","../node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js","../node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js","../node_modules/@juggle/resize-observer/lib/utils/element.js","../node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js","../node_modules/@juggle/resize-observer/lib/ResizeObservation.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js","../node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js","../node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js","../node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js","../node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverController.js","../node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js","../node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js","../node_modules/@juggle/resize-observer/lib/ResizeObserver.js"],"names":["exports","d3Array","d3Polygon","epsilon","epsilonesque","n","dot","v0","v1","x","y","z","linearDependent","vect","from","to","calculateCrossproduct","ConflictListNode","face","vert","this","nextf","prevf","nextv","prevv","ConflictList","forFace","head","Vertex","weight","orig","isDummy","index","conflicts","neighbours","nonClippedPolygon","polygon","originalObject","undefined","projectZ","Vertex$1","Plane3D","p1","verts","p2","p3","a","b","c","d","Point2D","Vector","HEdge","dest","next","prev","twin","iFace","d3WeightedVoronoiError","message","stack","Error","Face","orient","marked","t","subtract","crossproduct","normal","normalize","createEdges","dualPoint","ConvexHull","points","facets","created","horizon","visible","current","polygonClip","clip","subject","input","j","m","intersection","closed","polygonClosed","i","length","slice","polygonInside","polygonIntersect","isFinite","push","p","x1","x3","x21","x43","y1","y3","y21","y43","ua","coordinates","getFacesOfDestVertex","edge","faces","previous","first","site","siteOrigin","isVisibleFromBelow","prototype","add","cln","isEmpty","fill","curr","removeAll","getVertices","list","setWeight","v","equals","getNormZPlane","getDualPointMappedToPlane","nplane","negate","lenght","Math","sqrt","isHorizon","findHorizon","isEqual","origin","name","getDualPoint","plane3d","edges","temp","getEdge","link","conflict","getHorizon","removeConflict","init","boundingSites","sites","concat","permutate","pointSize","ra","floor","random","currentItem","splice","prep","v2","v3","f1","f2","f3","f0","addFacet","addConflict","addConflicts","old1","old2","fn","l","l1","l2","nCL","e","f","last","compute","jF","hEi","hE","clear","weightedVoronoi","extent","size","_weightedVoronoi","data","clippingPolygon","convexHull","polygons","verticesVisited","facetCount","facet","destVertex","protopoly","lastX","lastY","dx","dy","point","reverse","polygonLength","clippedPoly","computePowerDiagramIntegrated","map","minX","maxX","minY","maxY","width","height","x0","y0","boundingData","_","arguments","direction","xExtent","yExtent","sign","p0","polygonDirection","polygonHull","Object","defineProperty","value","factory","__webpack_require__","ascending","NaN","bisector","compare","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisectLeft","bisect","pairs","array","pair","Array","cross","values0","values1","reduce","i0","i1","value0","n0","n1","values","descending","number","variance","valueof","delta","mean","sum","isNaN","deviation","min","max","array_array","constant","identity","range","start","stop","step","ceil","e10","e5","e2","ticks","count","tickIncrement","power","log","LN10","error","pow","tickStep","step0","abs","step1","sturges","LN2","src_histogram","domain","threshold","histogram","xz","tz","isArray","shift","pop","bin","bins","thresholds","call","quantile","freedmanDiaconis","sort","scott","src_max","src_mean","median","numbers","merge","arrays","merged","src_min","permute","indexes","permutes","scan","xi","xj","shuffle","src_sum","src_transpose","matrix","transpose_length","transpose","row","zip","__webpack_exports__","src_area","area","centroid","k","lexicographicOrder","computeUpperHullIndexes","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains","inside","src_length","xa","ya","xb","yb","perimeter","trigger","ResizeObserverBoxOptions","global","window","queueMicroTask_callbacks","queueMicroTask","callback","el_1","document","createTextNode","MutationObserver","forEach","cb","observe","characterData","textContent","observerConfig","attributes","childList","subtree","events","scheduled","scheduler","Scheduler","_this","stopped","listener","schedule","run","frames","elementsHaveResized","ResizeObserverController_process","isWatching","requestAnimationFrame","observer","body","addEventListener","disconnect","removeEventListener","DOMRectReadOnly","top","bottom","freeze","fromRect","rectangle","isSVG","target","SVGElement","isHidden","_a","getBBox","_b","offsetWidth","offsetHeight","getClientRects","cache","Map","scrollRegexp","verticalRegexp","IE","test","navigator","userAgent","parseDimension","pixel","parseFloat","calculateBoxSize_size","inlineSize","blockSize","switchSizes","zeroBoxes","borderBoxSize","contentBoxSize","contentRect","calculateBoxSize_calculateBoxSizes","has","get","set","cs","getComputedStyle","svg","removePadding","boxSizing","writingMode","canScrollVertically","overflowY","canScrollHorizontally","overflowX","paddingTop","paddingRight","paddingBottom","paddingLeft","borderTop","borderTopWidth","borderRight","borderRightWidth","borderBottom","borderBottomWidth","horizontalPadding","verticalPadding","horizontalBorderArea","borderLeftWidth","verticalBorderArea","horizontalScrollbarThickness","clientHeight","verticalScrollbarThickness","clientWidth","widthReduction","heightReduction","contentWidth","contentHeight","borderBoxWidth","borderBoxHeight","boxes","calculateBoxSize_calculateBoxSize","observedBox","BORDER_BOX","ResizeObservation_ResizeObservation","ResizeObservation","CONTENT_BOX","lastReportedSize","isActive","tagName","type","isReplacedElement","display","ResizeObserverDetail","resizeObserver","activeTargets","skippedTargets","observationTargets","msg","ResizeObserverEntry_ResizeObserverEntry","calculateDepthForNode_calculateDepthForNode","node","Infinity","depth","parent","parentNode","broadcastActiveObservations_broadcastActiveObservations","shallowestDepth","callbacks","resizeObservers","ro","entries","ot","entry","targetDepth","_i","callbacks_1","gatherActiveObservationsAtDepth_gatherActiveObservationsAtDepth","observerMap","watching","ResizeObserverController_updateCount","getObservationIndex","some","event","ErrorEvent","createEvent","initEvent","dispatchEvent","deliverResizeLoopError","ResizeObserverController_ResizeObserverController","ResizeObserverController","connect","detail","options","box","unobserve","indexOf","delete","ResizeObserver_ResizeObserver","ResizeObserver","TypeError","Element","toString"],"mappings":"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","file":"static/js/79.f4725e8c.chunk.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array'), require('d3-polygon')) : typeof define === 'function' && define.amd ? define(['exports', 'd3-array', 'd3-polygon'], factory) : factory(global.d3 = global.d3 || {}, global.d3, global.d3);\n})(this, function (exports, d3Array, d3Polygon) {\n  'use strict';\n\n  var epsilon = 1e-10;\n\n  function epsilonesque(n) {\n    return n <= epsilon && n >= -epsilon;\n  } // IN: vectors or vertices\n  // OUT: dot product\n\n\n  function dot(v0, v1) {\n    return v0.x * v1.x + v0.y * v1.y + v0.z * v1.z;\n  } // IN: two vertex objects, v0 and v1\n  // OUT: true if they are linearly dependent, false otherwise\n  // from https://math.stackexchange.com/questions/1144357/how-can-i-prove-that-two-vectors-in-%E2%84%9D3-are-linearly-independent-iff-their-cro\n\n\n  function linearDependent(v0, v1) {\n    return epsilonesque(v0.x * v1.y - v0.y * v1.x) && epsilonesque(v0.y * v1.z - v0.z * v1.y) && epsilonesque(v0.z * v1.x - v0.x * v1.z);\n  } // IN: an array of 2D-points [x,y]\n  // OUT: true if the set defines a convex polygon (non-intersecting, hole-free, non-concave)\n  // from https://gist.github.com/annatomka/82715127b74473859054, adapted to [x,y] syntax (instead of {x: ..., y: ...}) and optimizations\n\n\n  function polygonDirection(polygon) {\n    var direction, sign, crossproduct, p0, p1, p2, v0, v1, i; //begin: initialization\n\n    p0 = polygon[polygon.length - 2];\n    p1 = polygon[polygon.length - 1];\n    p2 = polygon[0];\n    v0 = vect(p0, p1);\n    v1 = vect(p1, p2);\n    crossproduct = calculateCrossproduct(v0, v1); // console.log(`[[${p0}], [${p1}], [${p2}]] => (${v0}) x (${v1}) = ${crossproduct}`);\n\n    sign = Math.sign(crossproduct); //end: initialization\n\n    p0 = p1; // p0 = polygon[polygon.length - 1];\n\n    p1 = p2; // p1 = polygon[0];\n\n    p2 = polygon[1];\n    v0 = v1;\n    v1 = vect(p1, p2);\n    crossproduct = calculateCrossproduct(v0, v1); // console.log(`[[${p0}], [${p1}], [${p2}]] => (${v0}) x (${v1}) = ${crossproduct}`);\n\n    if (Math.sign(crossproduct) !== sign) {\n      return undefined;\n    } //different signs in cross products means concave polygon\n    //iterate on remaining 3 consecutive points\n\n\n    for (i = 2; i < polygon.length - 1; i++) {\n      p0 = p1;\n      p1 = p2;\n      p2 = polygon[i];\n      v0 = v1;\n      v1 = vect(p1, p2);\n      crossproduct = calculateCrossproduct(v0, v1); // console.log(`[[${p0}], [${p1}], [${p2}]] => (${v0}) x (${v1}) = ${crossproduct}`);\n\n      if (Math.sign(crossproduct) !== sign) {\n        return undefined;\n      } //different signs in cross products means concave polygon\n\n    }\n\n    return sign;\n  }\n\n  function vect(from, to) {\n    return [to[0] - from[0], to[1] - from[1]];\n  }\n\n  function calculateCrossproduct(v0, v1) {\n    return v0[0] * v1[1] - v0[1] * v1[0];\n  } // ConflictList and ConflictListNode\n\n\n  function ConflictListNode(face, vert) {\n    this.face = face;\n    this.vert = vert;\n    this.nextf = null;\n    this.prevf = null;\n    this.nextv = null;\n    this.prevv = null;\n  } // IN: boolean forFace\n\n\n  function ConflictList(forFace) {\n    this.forFace = forFace;\n    this.head = null;\n  } // IN: ConflictListNode cln\n\n\n  ConflictList.prototype.add = function (cln) {\n    if (this.head === null) {\n      this.head = cln;\n    } else {\n      if (this.forFace) {\n        // Is FaceList\n        this.head.prevv = cln;\n        cln.nextv = this.head;\n        this.head = cln;\n      } else {\n        // Is VertexList\n        this.head.prevf = cln;\n        cln.nextf = this.head;\n        this.head = cln;\n      }\n    }\n  };\n\n  ConflictList.prototype.isEmpty = function () {\n    return this.head === null;\n  }; // Array of faces visible\n\n\n  ConflictList.prototype.fill = function (visible) {\n    if (this.forFace) {\n      return;\n    }\n\n    var curr = this.head;\n\n    do {\n      visible.push(curr.face);\n      curr.face.marked = true;\n      curr = curr.nextf;\n    } while (curr !== null);\n  };\n\n  ConflictList.prototype.removeAll = function () {\n    if (this.forFace) {\n      // Remove all vertices from Face\n      var curr = this.head;\n\n      do {\n        if (curr.prevf === null) {\n          // Node is head\n          if (curr.nextf === null) {\n            curr.vert.conflicts.head = null;\n          } else {\n            curr.nextf.prevf = null;\n            curr.vert.conflicts.head = curr.nextf;\n          }\n        } else {\n          // Node is not head\n          if (curr.nextf != null) {\n            curr.nextf.prevf = curr.prevf;\n          }\n\n          curr.prevf.nextf = curr.nextf;\n        }\n\n        curr = curr.nextv;\n\n        if (curr != null) {\n          curr.prevv = null;\n        }\n      } while (curr != null);\n    } else {\n      // Remove all JFaces from vertex\n      var curr = this.head;\n\n      do {\n        if (curr.prevv == null) {\n          // Node is head\n          if (curr.nextv == null) {\n            curr.face.conflicts.head = null;\n          } else {\n            curr.nextv.prevv = null;\n            curr.face.conflicts.head = curr.nextv;\n          }\n        } else {\n          // Node is not head\n          if (curr.nextv != null) {\n            curr.nextv.prevv = curr.prevv;\n          }\n\n          curr.prevv.nextv = curr.nextv;\n        }\n\n        curr = curr.nextf;\n        if (curr != null) curr.prevf = null;\n      } while (curr != null);\n    }\n  }; // IN: list of vertices\n\n\n  ConflictList.prototype.getVertices = function () {\n    var list = [],\n        curr = this.head;\n\n    while (curr !== null) {\n      list.push(curr.vert);\n      curr = curr.nextv;\n    }\n\n    return list;\n  }; // IN: coordinates x, y, z\n\n\n  function Vertex(x, y, z, weight, orig, isDummy) {\n    this.x = x;\n    this.y = y;\n    this.weight = epsilon;\n    this.index = 0;\n    this.conflicts = new ConflictList(false);\n    this.neighbours = null; // Potential trouble\n\n    this.nonClippedPolygon = null;\n    this.polygon = null;\n    this.originalObject = null;\n    this.isDummy = false;\n\n    if (orig !== undefined) {\n      this.originalObject = orig;\n    }\n\n    if (isDummy != undefined) {\n      this.isDummy = isDummy;\n    }\n\n    if (weight != null) {\n      this.weight = weight;\n    }\n\n    if (z != null) {\n      this.z = z;\n    } else {\n      this.z = this.projectZ(this.x, this.y, this.weight);\n    }\n  }\n\n  Vertex.prototype.projectZ = function (x, y, weight) {\n    return x * x + y * y - weight;\n  };\n\n  Vertex.prototype.setWeight = function (weight) {\n    this.weight = weight;\n    this.z = this.projectZ(this.x, this.y, this.weight);\n  };\n\n  Vertex.prototype.subtract = function (v) {\n    return new Vertex(v.x - this.x, v.y - this.y, v.z - this.z);\n  };\n\n  Vertex.prototype.crossproduct = function (v) {\n    return new Vertex(this.y * v.z - this.z * v.y, this.z * v.x - this.x * v.z, this.x * v.y - this.y * v.x);\n  };\n\n  Vertex.prototype.equals = function (v) {\n    return this.x === v.x && this.y === v.y && this.z === v.z;\n  }; // IN: coordinates x, y, z\n\n\n  function Vertex$1(x, y, z, weight, orig, isDummy) {\n    this.x = x;\n    this.y = y;\n    this.weight = epsilon;\n    this.index = 0;\n    this.conflicts = new ConflictList(false);\n    this.neighbours = null; // Potential trouble\n\n    this.nonClippedPolygon = null;\n    this.polygon = null;\n    this.originalObject = null;\n    this.isDummy = false;\n\n    if (orig !== undefined) {\n      this.originalObject = orig;\n    }\n\n    if (isDummy != undefined) {\n      this.isDummy = isDummy;\n    }\n\n    if (weight != null) {\n      this.weight = weight;\n    }\n\n    if (z != null) {\n      this.z = z;\n    } else {\n      this.z = this.projectZ(this.x, this.y, this.weight);\n    }\n  }\n\n  Vertex$1.prototype.projectZ = function (x, y, weight) {\n    return x * x + y * y - weight;\n  };\n\n  Vertex$1.prototype.setWeight = function (weight) {\n    this.weight = weight;\n    this.z = this.projectZ(this.x, this.y, this.weight);\n  };\n\n  Vertex$1.prototype.subtract = function (v) {\n    return new Vertex$1(v.x - this.x, v.y - this.y, v.z - this.z);\n  };\n\n  Vertex$1.prototype.crossproduct = function (v) {\n    return new Vertex$1(this.y * v.z - this.z * v.y, this.z * v.x - this.x * v.z, this.x * v.y - this.y * v.x);\n  };\n\n  Vertex$1.prototype.equals = function (v) {\n    return this.x === v.x && this.y === v.y && this.z === v.z;\n  }; // Plane3D and Point2D\n  // IN: Face face\n\n\n  function Plane3D(face) {\n    var p1 = face.verts[0];\n    var p2 = face.verts[1];\n    var p3 = face.verts[2];\n    this.a = p1.y * (p2.z - p3.z) + p2.y * (p3.z - p1.z) + p3.y * (p1.z - p2.z);\n    this.b = p1.z * (p2.x - p3.x) + p2.z * (p3.x - p1.x) + p3.z * (p1.x - p2.x);\n    this.c = p1.x * (p2.y - p3.y) + p2.x * (p3.y - p1.y) + p3.x * (p1.y - p2.y);\n    this.d = -1 * (p1.x * (p2.y * p3.z - p3.y * p2.z) + p2.x * (p3.y * p1.z - p1.y * p3.z) + p3.x * (p1.y * p2.z - p2.y * p1.z));\n  }\n\n  Plane3D.prototype.getNormZPlane = function () {\n    return [-1 * (this.a / this.c), -1 * (this.b / this.c), -1 * (this.d / this.c)];\n  }; // OUT: point2D\n\n\n  Plane3D.prototype.getDualPointMappedToPlane = function () {\n    var nplane = this.getNormZPlane();\n    var dualPoint = new Point2D(nplane[0] / 2, nplane[1] / 2);\n    return dualPoint;\n  }; // IN: doubles x and y\n\n\n  function Point2D(x, y) {\n    this.x = x;\n    this.y = y;\n  } // Vector\n  // IN: coordinates x, y, z\n\n\n  function Vector(x, y, z) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n\n  Vector.prototype.negate = function () {\n    this.x *= -1;\n    this.y *= -1;\n    this.z *= -1;\n  }; // Normalizes X Y and Z in-place\n\n\n  Vector.prototype.normalize = function () {\n    var lenght = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n\n    if (lenght > 0) {\n      this.x /= lenght;\n      this.y /= lenght;\n      this.z /= lenght;\n    }\n  }; // HEdge\n  // IN: vertex orig, vertex dest, Face face\n\n\n  function HEdge(orig, dest, face) {\n    this.next = null;\n    this.prev = null;\n    this.twin = null;\n    this.orig = orig;\n    this.dest = dest;\n    this.iFace = face;\n  }\n\n  HEdge.prototype.isHorizon = function () {\n    return this.twin !== null && !this.iFace.marked && this.twin.iFace.marked;\n  }; // IN: array horizon\n\n\n  HEdge.prototype.findHorizon = function (horizon) {\n    if (this.isHorizon()) {\n      if (horizon.length > 0 && this === horizon[0]) {\n        return;\n      } else {\n        horizon.push(this);\n        this.next.findHorizon(horizon);\n      }\n    } else {\n      if (this.twin !== null) {\n        this.twin.next.findHorizon(horizon);\n      }\n    }\n  }; // IN: vertices origin and dest\n\n\n  HEdge.prototype.isEqual = function (origin, dest) {\n    return this.orig.equals(origin) && this.dest.equals(dest) || this.orig.equals(dest) && this.dest.equals(origin);\n  }; // from https://stackoverflow.com/questions/1382107/whats-a-good-way-to-extend-error-in-javascript\n  // (above link provided by https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error)\n\n\n  function d3WeightedVoronoiError(message) {\n    this.message = message;\n    this.stack = new Error().stack;\n  }\n\n  d3WeightedVoronoiError.prototype.name = 'd3WeightedVoronoiError';\n  d3WeightedVoronoiError.prototype = new Error(); // IN: Vertices a, b, c\n\n  function Face(a, b, c, orient) {\n    this.conflicts = new ConflictList(true);\n    this.verts = [a, b, c];\n    this.marked = false;\n    var t = a.subtract(b).crossproduct(b.subtract(c));\n    this.normal = new Vector(-t.x, -t.y, -t.z);\n    this.normal.normalize();\n    this.createEdges();\n    this.dualPoint = null;\n\n    if (orient != undefined) {\n      this.orient(orient);\n    }\n  } // OUT: Point2D\n\n\n  Face.prototype.getDualPoint = function () {\n    if (this.dualPoint == null) {\n      var plane3d = new Plane3D(this);\n      this.dualPoint = plane3d.getDualPointMappedToPlane();\n    }\n\n    return this.dualPoint;\n  };\n\n  Face.prototype.isVisibleFromBelow = function () {\n    return this.normal.z < -1.4259414393190911e-9;\n  };\n\n  Face.prototype.createEdges = function () {\n    this.edges = [];\n    this.edges[0] = new HEdge(this.verts[0], this.verts[1], this);\n    this.edges[1] = new HEdge(this.verts[1], this.verts[2], this);\n    this.edges[2] = new HEdge(this.verts[2], this.verts[0], this);\n    this.edges[0].next = this.edges[1];\n    this.edges[0].prev = this.edges[2];\n    this.edges[1].next = this.edges[2];\n    this.edges[1].prev = this.edges[0];\n    this.edges[2].next = this.edges[0];\n    this.edges[2].prev = this.edges[1];\n  }; // IN: vertex orient\n\n\n  Face.prototype.orient = function (orient) {\n    if (!(dot(this.normal, orient) < dot(this.normal, this.verts[0]))) {\n      var temp = this.verts[1];\n      this.verts[1] = this.verts[2];\n      this.verts[2] = temp;\n      this.normal.negate();\n      this.createEdges();\n    }\n  }; // IN: two vertices v0 and v1\n\n\n  Face.prototype.getEdge = function (v0, v1) {\n    for (var i = 0; i < 3; i++) {\n      if (this.edges[i].isEqual(v0, v1)) {\n        return this.edges[i];\n      }\n    }\n\n    return null;\n  }; // IN: Face face, vertices v0 and v1\n\n\n  Face.prototype.link = function (face, v0, v1) {\n    if (face instanceof Face) {\n      var twin = face.getEdge(v0, v1);\n\n      if (twin === null) {\n        throw new d3WeightedVoronoiError('when linking, twin is null');\n      }\n\n      var edge = this.getEdge(v0, v1);\n\n      if (edge === null) {\n        throw new d3WeightedVoronoiError('when linking, twin is null');\n      }\n\n      twin.twin = edge;\n      edge.twin = twin;\n    } else {\n      var twin = face; // face is a hEdge\n\n      var edge = this.getEdge(twin.orig, twin.dest);\n      twin.twin = edge;\n      edge.twin = twin;\n    }\n  }; // IN: vertex v\n\n\n  Face.prototype.conflict = function (v) {\n    return dot(this.normal, v) > dot(this.normal, this.verts[0]) + epsilon;\n  };\n\n  Face.prototype.getHorizon = function () {\n    for (var i = 0; i < 3; i++) {\n      if (this.edges[i].twin !== null && this.edges[i].twin.isHorizon()) {\n        return this.edges[i];\n      }\n    }\n\n    return null;\n  };\n\n  Face.prototype.removeConflict = function () {\n    this.conflicts.removeAll();\n  };\n\n  function ConvexHull() {\n    this.points = [];\n    this.facets = [];\n    this.created = [];\n    this.horizon = [];\n    this.visible = [];\n    this.current = 0;\n  } // IN: sites (x,y,z)\n\n\n  ConvexHull.prototype.init = function (boundingSites, sites) {\n    this.points = [];\n\n    for (var i = 0; i < sites.length; i++) {\n      this.points[i] = new Vertex$1(sites[i].x, sites[i].y, sites[i].z, null, sites[i], false);\n    }\n\n    this.points = this.points.concat(boundingSites);\n  };\n\n  ConvexHull.prototype.permutate = function () {\n    var pointSize = this.points.length;\n\n    for (var i = pointSize - 1; i > 0; i--) {\n      var ra = Math.floor(Math.random() * i);\n      var temp = this.points[ra];\n      temp.index = i;\n      var currentItem = this.points[i];\n      currentItem.index = ra;\n      this.points.splice(ra, 1, currentItem);\n      this.points.splice(i, 1, temp);\n    }\n  };\n\n  ConvexHull.prototype.prep = function () {\n    if (this.points.length <= 3) {\n      throw new d3WeightedVoronoiError('Less than 4 points');\n    }\n\n    for (var i = 0; i < this.points.length; i++) {\n      this.points[i].index = i;\n    }\n\n    var v0, v1, v2, v3;\n    var f1, f2, f3, f0;\n    v0 = this.points[0];\n    v1 = this.points[1];\n    v2 = v3 = null;\n\n    for (var i = 2; i < this.points.length; i++) {\n      if (!(linearDependent(v0, this.points[i]) && linearDependent(v1, this.points[i]))) {\n        v2 = this.points[i];\n        v2.index = 2;\n        this.points[2].index = i;\n        this.points.splice(i, 1, this.points[2]);\n        this.points.splice(2, 1, v2);\n        break;\n      }\n    }\n\n    if (v2 === null) {\n      throw new d3WeightedVoronoiError('v2 is null');\n    }\n\n    f0 = new Face(v0, v1, v2);\n\n    for (var i = 3; i < this.points.length; i++) {\n      if (dot(f0.normal, f0.verts[0]) !== dot(f0.normal, this.points[i])) {\n        v3 = this.points[i];\n        v3.index = 3;\n        this.points[3].index = i;\n        this.points.splice(i, 1, this.points[3]);\n        this.points.splice(3, 1, v3);\n        break;\n      }\n    }\n\n    if (v3 === null) {\n      throw new d3WeightedVoronoiError('v3 is null');\n    }\n\n    f0.orient(v3);\n    f1 = new Face(v0, v2, v3, v1);\n    f2 = new Face(v0, v1, v3, v2);\n    f3 = new Face(v1, v2, v3, v0);\n    this.addFacet(f0);\n    this.addFacet(f1);\n    this.addFacet(f2);\n    this.addFacet(f3); // Connect facets\n\n    f0.link(f1, v0, v2);\n    f0.link(f2, v0, v1);\n    f0.link(f3, v1, v2);\n    f1.link(f2, v0, v3);\n    f1.link(f3, v2, v3);\n    f2.link(f3, v3, v1);\n    this.current = 4;\n    var v;\n\n    for (var i = this.current; i < this.points.length; i++) {\n      v = this.points[i];\n\n      if (f0.conflict(v)) {\n        this.addConflict(f0, v);\n      }\n\n      if (f1.conflict(v)) {\n        this.addConflict(f1, v);\n      }\n\n      if (f2.conflict(v)) {\n        this.addConflict(f2, v);\n      }\n\n      if (f3.conflict(v)) {\n        this.addConflict(f3, v);\n      }\n    }\n  }, // IN: Faces old1 old2 and fn\n  ConvexHull.prototype.addConflicts = function (old1, old2, fn) {\n    var l1 = old1.conflicts.getVertices();\n    var l2 = old2.conflicts.getVertices();\n    var nCL = [];\n    var v1, v2;\n    var i, l;\n    i = l = 0; // Fill the possible new Conflict List\n\n    while (i < l1.length || l < l2.length) {\n      if (i < l1.length && l < l2.length) {\n        v1 = l1[i];\n        v2 = l2[l]; // If the index is the same, it's the same vertex and only 1 has to be added\n\n        if (v1.index === v2.index) {\n          nCL.push(v1);\n          i++;\n          l++;\n        } else if (v1.index > v2.index) {\n          nCL.push(v1);\n          i++;\n        } else {\n          nCL.push(v2);\n          l++;\n        }\n      } else if (i < l1.length) {\n        nCL.push(l1[i++]);\n      } else {\n        nCL.push(l2[l++]);\n      }\n    } // Check if the possible conflicts are real conflicts\n\n\n    for (var i = nCL.length - 1; i >= 0; i--) {\n      v1 = nCL[i];\n      if (fn.conflict(v1)) this.addConflict(fn, v1);\n    }\n  }; // IN: Face face, Vertex v\n\n  ConvexHull.prototype.addConflict = function (face, vert) {\n    var e = new ConflictListNode(face, vert);\n    face.conflicts.add(e);\n    vert.conflicts.add(e);\n  }; // IN: Face f\n\n\n  ConvexHull.prototype.removeConflict = function (f) {\n    f.removeConflict();\n    var index = f.index;\n    f.index = -1;\n\n    if (index === this.facets.length - 1) {\n      this.facets.splice(this.facets.length - 1, 1);\n      return;\n    }\n\n    if (index >= this.facets.length || index < 0) return;\n    var last = this.facets.splice(this.facets.length - 1, 1);\n    last[0].index = index;\n    this.facets.splice(index, 1, last[0]);\n  }; // IN: Face face\n\n\n  ConvexHull.prototype.addFacet = function (face) {\n    face.index = this.facets.length;\n    this.facets.push(face);\n  };\n\n  ConvexHull.prototype.compute = function () {\n    this.prep();\n\n    while (this.current < this.points.length) {\n      var next = this.points[this.current];\n\n      if (next.conflicts.isEmpty()) {\n        // No conflict, point in hull\n        this.current++;\n        continue;\n      }\n\n      this.created = []; // TODO: make sure this is okay and doesn't dangle references\n\n      this.horizon = [];\n      this.visible = []; // The visible faces are also marked\n\n      next.conflicts.fill(this.visible); // Horizon edges are orderly added to the horizon list\n\n      var e;\n\n      for (var jF = 0; jF < this.visible.length; jF++) {\n        e = this.visible[jF].getHorizon();\n\n        if (e !== null) {\n          e.findHorizon(this.horizon);\n          break;\n        }\n      }\n\n      var last = null,\n          first = null; // Iterate over horizon edges and create new faces oriented with the marked face 3rd unused point\n\n      for (var hEi = 0; hEi < this.horizon.length; hEi++) {\n        var hE = this.horizon[hEi];\n        var fn = new Face(next, hE.orig, hE.dest, hE.twin.next.dest);\n        fn.conflicts = new ConflictList(true); // Add to facet list\n\n        this.addFacet(fn);\n        this.created.push(fn); // Add new conflicts\n\n        this.addConflicts(hE.iFace, hE.twin.iFace, fn); // Link the new face with the horizon edge\n\n        fn.link(hE);\n        if (last !== null) fn.link(last, next, hE.orig);\n        last = fn;\n        if (first === null) first = fn;\n      } // Links the first and the last created JFace\n\n\n      if (first !== null && last !== null) {\n        last.link(first, next, this.horizon[0].orig);\n      }\n\n      if (this.created.length != 0) {\n        // update conflict graph\n        for (var f = 0; f < this.visible.length; f++) {\n          this.removeConflict(this.visible[f]);\n        }\n\n        this.current++;\n        this.created = [];\n      }\n    }\n\n    return this.facets;\n  };\n\n  ConvexHull.prototype.clear = function () {\n    this.points = [];\n    this.facets = [];\n    this.created = [];\n    this.horizon = [];\n    this.visible = [];\n    this.current = 0;\n  };\n\n  function polygonClip(clip, subject) {\n    // Version 0.0.0. Copyright 2017 Mike Bostock.\n    // Clips the specified subject polygon to the specified clip polygon;\n    // requires the clip polygon to be counterclockwise and convex.\n    // https://en.wikipedia.org/wiki/Sutherland–Hodgman_algorithm\n    // https://observablehq.com/@d3/polygonclip\n    var input,\n        closed = polygonClosed(subject),\n        i = -1,\n        n = clip.length - polygonClosed(clip),\n        j,\n        m,\n        a = clip[n - 1],\n        b,\n        c,\n        d,\n        intersection;\n\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = clip[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n\n      while (++j < m) {\n        d = input[j];\n\n        if (polygonInside(d, a, b)) {\n          if (!polygonInside(c, a, b)) {\n            intersection = polygonIntersect(c, d, a, b);\n\n            if (isFinite(intersection[0])) {\n              subject.push(intersection);\n            }\n          }\n\n          subject.push(d);\n        } else if (polygonInside(c, a, b)) {\n          intersection = polygonIntersect(c, d, a, b);\n\n          if (isFinite(intersection[0])) {\n            subject.push(intersection);\n          }\n        }\n\n        c = d;\n      }\n\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n\n    return subject;\n  }\n\n  function polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  } // Intersect two infinite lines cd and ab.\n  // Return Infinity if cd and ab colinear\n\n\n  function polygonIntersect(c, d, a, b) {\n    var x1 = c[0],\n        x3 = a[0],\n        x21 = d[0] - x1,\n        x43 = b[0] - x3,\n        y1 = c[1],\n        y3 = a[1],\n        y21 = d[1] - y1,\n        y43 = b[1] - y3,\n        ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [x1 + ua * x21, y1 + ua * y21];\n  } // Returns true if the polygon is closed.\n\n\n  function polygonClosed(coordinates) {\n    var a = coordinates[0],\n        b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  } // IN: HEdge edge\n\n\n  function getFacesOfDestVertex(edge) {\n    var faces = [];\n    var previous = edge;\n    var first = edge.dest;\n    var site = first.originalObject;\n    var neighbours = [];\n\n    do {\n      previous = previous.twin.prev;\n      var siteOrigin = previous.orig.originalObject;\n\n      if (!siteOrigin.isDummy) {\n        neighbours.push(siteOrigin);\n      }\n\n      var iFace = previous.iFace;\n\n      if (iFace.isVisibleFromBelow()) {\n        faces.push(iFace);\n      }\n    } while (previous !== edge);\n\n    site.neighbours = neighbours;\n    return faces;\n  } // IN: Omega = convex bounding polygon\n  // IN: S = unique set of sites with weights\n  // OUT: Set of lines making up the voronoi power diagram\n\n\n  function computePowerDiagramIntegrated(sites, boundingSites, clippingPolygon) {\n    var convexHull = new ConvexHull();\n    convexHull.clear();\n    convexHull.init(boundingSites, sites);\n    var facets = convexHull.compute(sites);\n    var polygons = [];\n    var verticesVisited = [];\n    var facetCount = facets.length;\n\n    for (var i = 0; i < facetCount; i++) {\n      var facet = facets[i];\n\n      if (facet.isVisibleFromBelow()) {\n        for (var e = 0; e < 3; e++) {\n          // go through the edges and start to build the polygon by going through the double connected edge list\n          var edge = facet.edges[e];\n          var destVertex = edge.dest;\n          var site = destVertex.originalObject;\n\n          if (!verticesVisited[destVertex.index]) {\n            verticesVisited[destVertex.index] = true;\n\n            if (site.isDummy) {\n              // Check if this is one of the sites making the bounding polygon\n              continue;\n            } // faces around the vertices which correspond to the polygon corner points\n\n\n            var faces = getFacesOfDestVertex(edge);\n            var protopoly = [];\n            var lastX = null;\n            var lastY = null;\n            var dx = 1;\n            var dy = 1;\n\n            for (var j = 0; j < faces.length; j++) {\n              var point = faces[j].getDualPoint();\n              var x1 = point.x;\n              var y1 = point.y;\n\n              if (lastX !== null) {\n                dx = lastX - x1;\n                dy = lastY - y1;\n\n                if (dx < 0) {\n                  dx = -dx;\n                }\n\n                if (dy < 0) {\n                  dy = -dy;\n                }\n              }\n\n              if (dx > epsilon || dy > epsilon) {\n                protopoly.push([x1, y1]);\n                lastX = x1;\n                lastY = y1;\n              }\n            }\n\n            site.nonClippedPolygon = protopoly.reverse();\n\n            if (!site.isDummy && d3Polygon.polygonLength(site.nonClippedPolygon) > 0) {\n              var clippedPoly = polygonClip(clippingPolygon, site.nonClippedPolygon);\n              site.polygon = clippedPoly;\n              clippedPoly.site = site;\n\n              if (clippedPoly.length > 0) {\n                polygons.push(clippedPoly);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return polygons;\n  }\n\n  function weightedVoronoi() {\n    /////// Inputs ///////\n    var x = function x(d) {\n      return d.x;\n    }; // accessor to the x value\n\n\n    var y = function y(d) {\n      return d.y;\n    }; // accessor to the y value\n\n\n    var weight = function weight(d) {\n      return d.weight;\n    }; // accessor to the weight\n\n\n    var clip = [[0, 0], [0, 1], [1, 1], [1, 0]]; // clipping polygon\n\n    var extent = [[0, 0], [1, 1]]; // extent of the clipping polygon\n\n    var size = [1, 1]; // [width, height] of the clipping polygon\n    ///////////////////////\n    ///////// API /////////\n    ///////////////////////\n\n    function _weightedVoronoi(data) {\n      var formatedSites; //begin: map sites to the expected format of PowerDiagram\n\n      formatedSites = data.map(function (d) {\n        return new Vertex(x(d), y(d), null, weight(d), d, false);\n      }); //end: map sites to the expected format of PowerDiagram\n\n      return computePowerDiagramIntegrated(formatedSites, boundingSites(), clip);\n    }\n\n    _weightedVoronoi.x = function (_) {\n      if (!arguments.length) {\n        return x;\n      }\n\n      x = _;\n      return _weightedVoronoi;\n    };\n\n    _weightedVoronoi.y = function (_) {\n      if (!arguments.length) {\n        return y;\n      }\n\n      y = _;\n      return _weightedVoronoi;\n    };\n\n    _weightedVoronoi.weight = function (_) {\n      if (!arguments.length) {\n        return weight;\n      }\n\n      weight = _;\n      return _weightedVoronoi;\n    };\n\n    _weightedVoronoi.clip = function (_) {\n      var direction, xExtent, yExtent;\n\n      if (!arguments.length) {\n        return clip;\n      }\n\n      xExtent = d3Array.extent(_.map(function (c) {\n        return c[0];\n      }));\n      yExtent = d3Array.extent(_.map(function (c) {\n        return c[1];\n      }));\n      direction = polygonDirection(_);\n\n      if (direction === undefined) {\n        clip = d3Polygon.polygonHull(_); // ensure clip to be a convex, hole-free, counterclockwise polygon\n      } else if (direction === 1) {\n        clip = _.reverse(); // already convex, order array in the same direction as d3-polygon.polygonHull(...)\n      } else {\n        clip = _;\n      }\n\n      extent = [[xExtent[0], yExtent[0]], [xExtent[1], yExtent[1]]];\n      size = [xExtent[1] - xExtent[0], yExtent[1] - yExtent[0]];\n      return _weightedVoronoi;\n    };\n\n    _weightedVoronoi.extent = function (_) {\n      if (!arguments.length) {\n        return extent;\n      }\n\n      clip = [_[0], [_[0][0], _[1][1]], _[1], [_[1][0], _[0][1]]];\n      extent = _;\n      size = [_[1][0] - _[0][0], _[1][1] - _[0][1]];\n      return _weightedVoronoi;\n    };\n\n    _weightedVoronoi.size = function (_) {\n      if (!arguments.length) {\n        return size;\n      }\n\n      clip = [[0, 0], [0, _[1]], [_[0], _[1]], [_[0], 0]];\n      extent = [[0, 0], _];\n      size = _;\n      return _weightedVoronoi;\n    }; ///////////////////////\n    /////// Private ///////\n    ///////////////////////\n\n\n    function boundingSites() {\n      var minX,\n          maxX,\n          minY,\n          maxY,\n          width,\n          height,\n          x0,\n          x1,\n          y0,\n          y1,\n          boundingData = [],\n          boundingSites = [];\n      minX = extent[0][0];\n      maxX = extent[1][0];\n      minY = extent[0][1];\n      maxY = extent[1][1];\n      width = maxX - minX;\n      height = maxY - minY;\n      x0 = minX - width;\n      x1 = maxX + width;\n      y0 = minY - height;\n      y1 = maxY + height; // MUST be counterclockwise\n      // if not, may produce 'TypeError: Cannot set property 'twin' of null' during computation\n      // don't know how to test as it is not exposed\n\n      boundingData[0] = [x0, y0];\n      boundingData[1] = [x0, y1];\n      boundingData[2] = [x1, y1];\n      boundingData[3] = [x1, y0];\n\n      for (var i = 0; i < 4; i++) {\n        boundingSites.push(new Vertex(boundingData[i][0], boundingData[i][1], null, epsilon, new Vertex(boundingData[i][0], boundingData[i][1], null, epsilon, null, true), true));\n      }\n\n      return boundingSites;\n    }\n\n    return _weightedVoronoi;\n  }\n\n  exports.weightedVoronoi = weightedVoronoi;\n  exports.d3WeightedVoronoiError = d3WeightedVoronoiError;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","export default function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import ascending from \"./ascending\";\nexport default function (compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function left(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n\n      return lo;\n    },\n    right: function right(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return ascending(f(d), x);\n  };\n}","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;","export default function (array, f) {\n  if (f == null) f = pair;\n  var i = 0,\n      n = array.length - 1,\n      p = array[0],\n      pairs = new Array(n < 0 ? 0 : n);\n\n  while (i < n) {\n    pairs[i] = f(p, p = array[++i]);\n  }\n\n  return pairs;\n}\nexport function pair(a, b) {\n  return [a, b];\n}","import { pair } from \"./pairs\";\nexport default function (values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}","export default function (a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}","export default function (x) {\n  return x === null ? NaN : +x;\n}","import number from \"./number\";\nexport default function (values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  } else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}","import variance from \"./variance\";\nexport default function (array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}","export default function (values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) {\n      // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n\n        while (++i < n) {\n          // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  } else {\n    while (++i < n) {\n      // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n\n        while (++i < n) {\n          // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}","var array = Array.prototype;\nexport var slice = array.slice;\nexport var map = array.map;","export default function (x) {\n  return function () {\n    return x;\n  };\n}","export default function (x) {\n  return x;\n}","export default function (start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\nexport default function (start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n\n    while (++i < n) {\n      ticks[i] = (start + i) * step;\n    }\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n\n    while (++i < n) {\n      ticks[i] = (start - i) / step;\n    }\n  }\n\n  if (reverse) ticks.reverse();\n  return ticks;\n}\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}","export default function (values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}","import { slice } from \"./array\";\nimport bisect from \"./bisect\";\nimport constant from \"./constant\";\nimport extent from \"./extent\";\nimport identity from \"./identity\";\nimport range from \"./range\";\nimport { tickStep } from \"./ticks\";\nimport sturges from \"./threshold/sturges\";\nexport default function () {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1); // Convert number of thresholds into uniform thresholds.\n\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\n    } // Remove any thresholds outside the domain.\n\n\n    var m = tz.length;\n\n    while (tz[0] <= x0) {\n      tz.shift(), --m;\n    }\n\n    while (tz[m - 1] > x1) {\n      tz.pop(), --m;\n    }\n\n    var bins = new Array(m + 1),\n        bin; // Initialize bins.\n\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    } // Assign data to bins by value, ignoring any outside the domain.\n\n\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function (_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function (_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function (_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}","import number from \"./number\";\nexport default function (values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}","import { map } from \"../array\";\nimport ascending from \"../ascending\";\nimport number from \"../number\";\nimport quantile from \"../quantile\";\nexport default function (values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}","import deviation from \"../deviation\";\nexport default function (values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}","export default function (values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) {\n      // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n\n        while (++i < n) {\n          // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  } else {\n    while (++i < n) {\n      // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n\n        while (++i < n) {\n          // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}","import number from \"./number\";\nexport default function (values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;else --m;\n    }\n  } else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}","import ascending from \"./ascending\";\nimport number from \"./number\";\nimport quantile from \"./quantile\";\nexport default function (values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  } else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n}","export default function (arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) {\n    j += arrays[i].length;\n  }\n\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}","export default function (values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) {\n      // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n\n        while (++i < n) {\n          // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  } else {\n    while (++i < n) {\n      // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n\n        while (++i < n) {\n          // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}","export default function (array, indexes) {\n  var i = indexes.length,\n      permutes = new Array(i);\n\n  while (i--) {\n    permutes[i] = array[indexes[i]];\n  }\n\n  return permutes;\n}","import ascending from \"./ascending\";\nexport default function (values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}","export default function (array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}","export default function (values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  } else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}","import min from \"./min\";\nexport default function (matrix) {\n  if (!(n = matrix.length)) return [];\n\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}","import transpose from \"./transpose\";\nexport default function () {\n  return transpose(arguments);\n}","export { default as bisect, bisectRight, bisectLeft } from \"./bisect\";\nexport { default as ascending } from \"./ascending\";\nexport { default as bisector } from \"./bisector\";\nexport { default as cross } from \"./cross\";\nexport { default as descending } from \"./descending\";\nexport { default as deviation } from \"./deviation\";\nexport { default as extent } from \"./extent\";\nexport { default as histogram } from \"./histogram\";\nexport { default as thresholdFreedmanDiaconis } from \"./threshold/freedmanDiaconis\";\nexport { default as thresholdScott } from \"./threshold/scott\";\nexport { default as thresholdSturges } from \"./threshold/sturges\";\nexport { default as max } from \"./max\";\nexport { default as mean } from \"./mean\";\nexport { default as median } from \"./median\";\nexport { default as merge } from \"./merge\";\nexport { default as min } from \"./min\";\nexport { default as pairs } from \"./pairs\";\nexport { default as permute } from \"./permute\";\nexport { default as quantile } from \"./quantile\";\nexport { default as range } from \"./range\";\nexport { default as scan } from \"./scan\";\nexport { default as shuffle } from \"./shuffle\";\nexport { default as sum } from \"./sum\";\nexport { default as ticks, tickIncrement, tickStep } from \"./ticks\";\nexport { default as transpose } from \"./transpose\";\nexport { default as variance } from \"./variance\";\nexport { default as zip } from \"./zip\";","export default function (polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}","export default function (polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}","// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nexport default function (a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}","import cross from \"./cross.js\";\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n} // Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\n\n\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) {\n      --size;\n    }\n\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nexport default function (points) {\n  if ((n = points.length) < 3) return null;\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) {\n    sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  }\n\n  sortedPoints.sort(lexicographicOrder);\n\n  for (i = 0; i < n; ++i) {\n    flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n  }\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints); // Construct the hull polygon, removing possible duplicate endpoints.\n\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = []; // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n\n  for (i = upperIndexes.length - 1; i >= 0; --i) {\n    hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  }\n\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) {\n    hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n  }\n\n  return hull;\n}","export default function (polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0],\n      y = point[1],\n      x0 = p[0],\n      y0 = p[1],\n      x1,\n      y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (y1 > y !== y0 > y && x < (x0 - x1) * (y - y1) / (y0 - y1) + x1) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}","export default function (polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n}","export { default as polygonArea } from \"./area.js\";\nexport { default as polygonCentroid } from \"./centroid.js\";\nexport { default as polygonHull } from \"./hull.js\";\nexport { default as polygonContains } from \"./contains.js\";\nexport { default as polygonLength } from \"./length.js\";","var global = typeof window === 'undefined' ? this || {} : window;\nexport { global };","var trigger;\nvar callbacks = [];\n\nvar notify = function notify() {\n  return callbacks.splice(0).forEach(function (cb) {\n    return cb();\n  });\n};\n\nvar queueMicroTask = function queueMicroTask(callback) {\n  if (!trigger) {\n    var el_1 = document.createTextNode('');\n    var config = {\n      characterData: true\n    };\n    new MutationObserver(function () {\n      return notify();\n    }).observe(el_1, config);\n\n    trigger = function trigger() {\n      el_1.textContent = '';\n    };\n  }\n\n  callbacks.push(callback);\n  trigger();\n};\n\nexport { queueMicroTask };","var ResizeObserverBoxOptions;\n\n(function (ResizeObserverBoxOptions) {\n  ResizeObserverBoxOptions[\"BORDER_BOX\"] = \"border-box\";\n  ResizeObserverBoxOptions[\"CONTENT_BOX\"] = \"content-box\";\n})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));\n\nexport { ResizeObserverBoxOptions };","import { process, isWatching } from '../ResizeObserverController';\nimport { global } from './global';\nimport { queueResizeObserver } from './queueResizeObserver';\nvar CATCH_FRAMES = 60 / 5;\nvar observerConfig = {\n  attributes: true,\n  characterData: true,\n  childList: true,\n  subtree: true\n};\nvar events = ['resize', 'load', 'transitionend', 'animationend', 'animationstart', 'animationiteration', 'keyup', 'keydown', 'mouseup', 'mousedown', 'mouseover', 'mouseout', 'blur', 'focus'];\nvar scheduled = false;\n\nvar Scheduler = function () {\n  function Scheduler() {\n    var _this = this;\n\n    this.stopped = true;\n\n    this.listener = function () {\n      return _this.schedule();\n    };\n  }\n\n  Scheduler.prototype.run = function (frames) {\n    var _this = this;\n\n    if (scheduled) {\n      return;\n    }\n\n    scheduled = true;\n    queueResizeObserver(function () {\n      var elementsHaveResized = false;\n\n      try {\n        elementsHaveResized = process();\n      } finally {\n        scheduled = false;\n\n        if (!isWatching()) {\n          return;\n        }\n\n        if (elementsHaveResized) {\n          _this.run(60);\n        } else if (frames) {\n          _this.run(frames - 1);\n        } else {\n          _this.start();\n        }\n      }\n    });\n  };\n\n  Scheduler.prototype.schedule = function () {\n    this.stop();\n    this.run(CATCH_FRAMES);\n  };\n\n  Scheduler.prototype.observe = function () {\n    var _this = this;\n\n    var cb = function cb() {\n      return _this.observer && _this.observer.observe(document.body, observerConfig);\n    };\n\n    document.body ? cb() : global.addEventListener('DOMContentLoaded', cb);\n  };\n\n  Scheduler.prototype.start = function () {\n    var _this = this;\n\n    if (this.stopped) {\n      this.stopped = false;\n      this.observer = new MutationObserver(this.listener);\n      this.observe();\n      events.forEach(function (name) {\n        return global.addEventListener(name, _this.listener, true);\n      });\n    }\n  };\n\n  Scheduler.prototype.stop = function () {\n    var _this = this;\n\n    if (!this.stopped) {\n      this.observer && this.observer.disconnect();\n      events.forEach(function (name) {\n        return global.removeEventListener(name, _this.listener, true);\n      });\n      this.stopped = true;\n    }\n  };\n\n  return Scheduler;\n}();\n\nvar scheduler = new Scheduler();\nexport { scheduler };","import { queueMicroTask } from './queueMicroTask';\n\nvar queueResizeObserver = function queueResizeObserver(cb) {\n  queueMicroTask(function ResizeObserver() {\n    requestAnimationFrame(cb);\n  });\n};\n\nexport { queueResizeObserver };","var DOMRectReadOnly = function () {\n  function DOMRectReadOnly(x, y, width, height) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.top = this.y;\n    this.left = this.x;\n    this.bottom = this.top + this.height;\n    this.right = this.left + this.width;\n    return Object.freeze(this);\n  }\n\n  DOMRectReadOnly.fromRect = function (rectangle) {\n    return new DOMRectReadOnly(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n  };\n\n  return DOMRectReadOnly;\n}();\n\nexport { DOMRectReadOnly };","var isSVG = function isSVG(target) {\n  return target instanceof SVGElement && 'getBBox' in target;\n};\n\nvar isHidden = function isHidden(target) {\n  if (isSVG(target)) {\n    var _a = target.getBBox(),\n        width = _a.width,\n        height = _a.height;\n\n    return !width && !height;\n  }\n\n  var _b = target,\n      offsetWidth = _b.offsetWidth,\n      offsetHeight = _b.offsetHeight;\n  return !(offsetWidth || offsetHeight || target.getClientRects().length);\n};\n\nvar isReplacedElement = function isReplacedElement(target) {\n  switch (target.tagName) {\n    case 'INPUT':\n      if (target.type !== 'image') {\n        break;\n      }\n\n    case 'VIDEO':\n    case 'AUDIO':\n    case 'EMBED':\n    case 'OBJECT':\n    case 'CANVAS':\n    case 'IFRAME':\n    case 'IMG':\n      return true;\n  }\n\n  return false;\n};\n\nexport { isSVG, isHidden, isReplacedElement };","import { ResizeObserverBoxOptions } from '../ResizeObserverBoxOptions';\nimport { DOMRectReadOnly } from '../DOMRectReadOnly';\nimport { isSVG, isHidden } from '../utils/element';\nimport { global } from '../utils/global';\nvar cache = new Map();\nvar scrollRegexp = /auto|scroll/;\nvar verticalRegexp = /^tb|vertical/;\nvar IE = /msie|trident/i.test(global.navigator && global.navigator.userAgent);\n\nvar parseDimension = function parseDimension(pixel) {\n  return parseFloat(pixel || '0');\n};\n\nvar size = function size(inlineSize, blockSize, switchSizes) {\n  if (inlineSize === void 0) {\n    inlineSize = 0;\n  }\n\n  if (blockSize === void 0) {\n    blockSize = 0;\n  }\n\n  if (switchSizes === void 0) {\n    switchSizes = false;\n  }\n\n  return Object.freeze({\n    inlineSize: (switchSizes ? blockSize : inlineSize) || 0,\n    blockSize: (switchSizes ? inlineSize : blockSize) || 0\n  });\n};\n\nvar zeroBoxes = Object.freeze({\n  borderBoxSize: size(),\n  contentBoxSize: size(),\n  contentRect: new DOMRectReadOnly(0, 0, 0, 0)\n});\n\nvar calculateBoxSizes = function calculateBoxSizes(target) {\n  if (cache.has(target)) {\n    return cache.get(target);\n  }\n\n  if (isHidden(target)) {\n    cache.set(target, zeroBoxes);\n    return zeroBoxes;\n  }\n\n  var cs = getComputedStyle(target);\n  var svg = isSVG(target) && target.getBBox();\n  var removePadding = !IE && cs.boxSizing === 'border-box';\n  var switchSizes = verticalRegexp.test(cs.writingMode || '');\n  var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');\n  var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');\n  var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);\n  var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);\n  var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);\n  var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);\n  var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);\n  var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);\n  var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);\n  var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);\n  var horizontalPadding = paddingLeft + paddingRight;\n  var verticalPadding = paddingTop + paddingBottom;\n  var horizontalBorderArea = borderLeft + borderRight;\n  var verticalBorderArea = borderTop + borderBottom;\n  var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;\n  var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;\n  var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;\n  var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;\n  var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;\n  var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;\n  var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;\n  var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;\n  var boxes = Object.freeze({\n    borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),\n    contentBoxSize: size(contentWidth, contentHeight, switchSizes),\n    contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)\n  });\n  cache.set(target, boxes);\n  return boxes;\n};\n\nvar calculateBoxSize = function calculateBoxSize(target, observedBox) {\n  var _a = calculateBoxSizes(target),\n      borderBoxSize = _a.borderBoxSize,\n      contentBoxSize = _a.contentBoxSize;\n\n  return observedBox === ResizeObserverBoxOptions.BORDER_BOX ? borderBoxSize : contentBoxSize;\n};\n\nexport { calculateBoxSize, calculateBoxSizes, cache };","import { ResizeObserverBoxOptions } from './ResizeObserverBoxOptions';\nimport { calculateBoxSize } from './algorithms/calculateBoxSize';\nimport { isSVG, isReplacedElement } from './utils/element';\n\nvar skipNotifyOnElement = function skipNotifyOnElement(target) {\n  return !isSVG(target) && !isReplacedElement(target) && getComputedStyle(target).display === 'inline';\n};\n\nvar ResizeObservation = function () {\n  function ResizeObservation(target, observedBox) {\n    this.target = target;\n    this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;\n    this.lastReportedSize = {\n      inlineSize: 0,\n      blockSize: 0\n    };\n  }\n\n  ResizeObservation.prototype.isActive = function () {\n    var size = calculateBoxSize(this.target, this.observedBox);\n\n    if (skipNotifyOnElement(this.target)) {\n      this.lastReportedSize = size;\n    }\n\n    if (this.lastReportedSize.inlineSize !== size.inlineSize || this.lastReportedSize.blockSize !== size.blockSize) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return ResizeObservation;\n}();\n\nexport { ResizeObservation };","var ResizeObserverDetail = function () {\n  function ResizeObserverDetail(resizeObserver, callback) {\n    this.activeTargets = [];\n    this.skippedTargets = [];\n    this.observationTargets = [];\n    this.observer = resizeObserver;\n    this.callback = callback;\n  }\n\n  return ResizeObserverDetail;\n}();\n\nexport { ResizeObserverDetail };","var msg = 'ResizeObserver loop completed with undelivered notifications.';\n\nvar deliverResizeLoopError = function deliverResizeLoopError() {\n  var event;\n\n  if (typeof ErrorEvent === 'function') {\n    event = new ErrorEvent('error', {\n      message: msg\n    });\n  } else {\n    event = document.createEvent('Event');\n    event.initEvent('error', false, false);\n    event.message = msg;\n  }\n\n  window.dispatchEvent(event);\n};\n\nexport { deliverResizeLoopError };","import { calculateBoxSizes } from './algorithms/calculateBoxSize';\n\nvar ResizeObserverEntry = function () {\n  function ResizeObserverEntry(target) {\n    var boxes = calculateBoxSizes(target);\n    this.target = target;\n    this.contentRect = boxes.contentRect;\n    this.borderBoxSize = boxes.borderBoxSize;\n    this.contentBoxSize = boxes.contentBoxSize;\n  }\n\n  return ResizeObserverEntry;\n}();\n\nexport { ResizeObserverEntry };","import { isHidden } from '../utils/element';\n\nvar calculateDepthForNode = function calculateDepthForNode(node) {\n  if (isHidden(node)) {\n    return Infinity;\n  }\n\n  var depth = 0;\n  var parent = node.parentNode;\n\n  while (parent) {\n    depth += 1;\n    parent = parent.parentNode;\n  }\n\n  return depth;\n};\n\nexport { calculateDepthForNode };","import { resizeObservers } from '../ResizeObserverController';\nimport { ResizeObserverEntry } from '../ResizeObserverEntry';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nimport { calculateBoxSize } from './calculateBoxSize';\n\nvar broadcastActiveObservations = function broadcastActiveObservations() {\n  var shallowestDepth = Infinity;\n  var callbacks = [];\n  resizeObservers.forEach(function processObserver(ro) {\n    if (ro.activeTargets.length === 0) {\n      return;\n    }\n\n    var entries = [];\n    ro.activeTargets.forEach(function processTarget(ot) {\n      var entry = new ResizeObserverEntry(ot.target);\n      var targetDepth = calculateDepthForNode(ot.target);\n      entries.push(entry);\n      ot.lastReportedSize = calculateBoxSize(ot.target, ot.observedBox);\n\n      if (targetDepth < shallowestDepth) {\n        shallowestDepth = targetDepth;\n      }\n    });\n    callbacks.push(function resizeObserverCallback() {\n      ro.callback.call(ro.observer, entries, ro.observer);\n    });\n    ro.activeTargets.splice(0, ro.activeTargets.length);\n  });\n\n  for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {\n    var callback = callbacks_1[_i];\n    callback();\n  }\n\n  return shallowestDepth;\n};\n\nexport { broadcastActiveObservations };","import { resizeObservers } from '../ResizeObserverController';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nimport { cache as sizeCache } from './calculateBoxSize';\n\nvar gatherActiveObservationsAtDepth = function gatherActiveObservationsAtDepth(depth) {\n  sizeCache.clear();\n  resizeObservers.forEach(function processObserver(ro) {\n    ro.activeTargets.splice(0, ro.activeTargets.length);\n    ro.skippedTargets.splice(0, ro.skippedTargets.length);\n    ro.observationTargets.forEach(function processTarget(ot) {\n      if (ot.isActive()) {\n        if (calculateDepthForNode(ot.target) > depth) {\n          ro.activeTargets.push(ot);\n        } else {\n          ro.skippedTargets.push(ot);\n        }\n      }\n    });\n  });\n};\n\nexport { gatherActiveObservationsAtDepth };","import { scheduler } from './utils/scheduler';\nimport { ResizeObservation } from './ResizeObservation';\nimport { ResizeObserverDetail } from './ResizeObserverDetail';\nimport { hasActiveObservations } from './algorithms/hasActiveObservations';\nimport { hasSkippedObservations } from './algorithms/hasSkippedObservations';\nimport { deliverResizeLoopError } from './algorithms/deliverResizeLoopError';\nimport { broadcastActiveObservations } from './algorithms/broadcastActiveObservations';\nimport { gatherActiveObservationsAtDepth } from './algorithms/gatherActiveObservationsAtDepth';\nvar resizeObservers = [];\nvar observerMap = new Map();\nvar watching = 0;\n\nvar updateCount = function updateCount(n) {\n  !watching && n > 0 && scheduler.start();\n  watching += n;\n  !watching && scheduler.stop();\n};\n\nvar getObservationIndex = function getObservationIndex(observationTargets, target) {\n  for (var i = 0; i < observationTargets.length; i += 1) {\n    if (observationTargets[i].target === target) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\nvar process = function process() {\n  var depth = 0;\n  gatherActiveObservationsAtDepth(depth);\n\n  while (hasActiveObservations()) {\n    depth = broadcastActiveObservations();\n    gatherActiveObservationsAtDepth(depth);\n  }\n\n  if (hasSkippedObservations()) {\n    deliverResizeLoopError();\n  }\n\n  return depth > 0;\n};\n\nvar ResizeObserverController = function () {\n  function ResizeObserverController() {}\n\n  ResizeObserverController.connect = function (resizeObserver, callback) {\n    var detail = new ResizeObserverDetail(resizeObserver, callback);\n    resizeObservers.push(detail);\n    observerMap.set(resizeObserver, detail);\n  };\n\n  ResizeObserverController.observe = function (resizeObserver, target, options) {\n    if (observerMap.has(resizeObserver)) {\n      var detail = observerMap.get(resizeObserver);\n\n      if (getObservationIndex(detail.observationTargets, target) < 0) {\n        detail.observationTargets.push(new ResizeObservation(target, options && options.box));\n        updateCount(1);\n        scheduler.schedule();\n      }\n    }\n  };\n\n  ResizeObserverController.unobserve = function (resizeObserver, target) {\n    if (observerMap.has(resizeObserver)) {\n      var detail = observerMap.get(resizeObserver);\n      var index = getObservationIndex(detail.observationTargets, target);\n\n      if (index >= 0) {\n        detail.observationTargets.splice(index, 1);\n        updateCount(-1);\n      }\n    }\n  };\n\n  ResizeObserverController.disconnect = function (resizeObserver) {\n    if (observerMap.has(resizeObserver)) {\n      var detail = observerMap.get(resizeObserver);\n      resizeObservers.splice(resizeObservers.indexOf(detail), 1);\n      observerMap.delete(resizeObserver);\n      updateCount(-detail.observationTargets.length);\n    }\n  };\n\n  return ResizeObserverController;\n}();\n\nvar isWatching = function isWatching() {\n  return !!watching;\n};\n\nexport { ResizeObserverController, resizeObservers, process, isWatching };","import { resizeObservers } from '../ResizeObserverController';\n\nvar hasActiveObservations = function hasActiveObservations() {\n  return resizeObservers.some(function (ro) {\n    return ro.activeTargets.length > 0;\n  });\n};\n\nexport { hasActiveObservations };","import { resizeObservers } from '../ResizeObserverController';\n\nvar hasSkippedObservations = function hasSkippedObservations() {\n  return resizeObservers.some(function (ro) {\n    return ro.skippedTargets.length > 0;\n  });\n};\n\nexport { hasSkippedObservations };","import { ResizeObserverController } from './ResizeObserverController';\n\nvar ResizeObserver = function () {\n  function ResizeObserver(callback) {\n    if (arguments.length === 0) {\n      throw new TypeError(\"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\");\n    }\n\n    if (typeof callback !== 'function') {\n      throw new TypeError(\"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\");\n    }\n\n    ResizeObserverController.connect(this, callback);\n  }\n\n  ResizeObserver.prototype.observe = function (target, options) {\n    if (arguments.length === 0) {\n      throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n    }\n\n    if (target instanceof Element === false) {\n      throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n    }\n\n    ResizeObserverController.observe(this, target, options);\n  };\n\n  ResizeObserver.prototype.unobserve = function (target) {\n    if (arguments.length === 0) {\n      throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n    }\n\n    if (target instanceof Element === false) {\n      throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n    }\n\n    ResizeObserverController.unobserve(this, target);\n  };\n\n  ResizeObserver.prototype.disconnect = function () {\n    ResizeObserverController.disconnect(this);\n  };\n\n  ResizeObserver.toString = function () {\n    return 'function ResizeObserver () { [polyfill code] }';\n  };\n\n  return ResizeObserver;\n}();\n\nexport default ResizeObserver;\nexport { ResizeObserver };"],"sourceRoot":""}