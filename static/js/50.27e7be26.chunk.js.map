{"version":3,"sources":["components/Articles/TrafficSources/TrafficSources.jsx","components/_ui/Chart/utils/utils.js","components/_ui/InterpolatedNumber/InterpolatedNumber.jsx"],"names":["console","log","stories","slicedStories","storyColors","d3","domain","length","interpolate","range","timeAccessor","d","viewsAccessor","firstTime","offset","timeline","lastTime","_","last","formatDate","formatHour","formatAmPm","TrafficSources","_useState","useState","_useState2","Object","_Users_linying_codespace_Lyzzz_s_Blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","time","setTime","useInterval","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","className","TrafficSourcesDates","components_ui_InterpolatedNumber_InterpolatedNumber__WEBPACK_IMPORTED_MODULE_9__","number","format","numeral","TrafficSourcesWindow","dateScale","ticks","formatDatePretty","formatDatePrettyShort","formatDateDay","_ref","_useChartDimensions","useChartDimensions","_useChartDimensions2","ref","dimensions","map","tick","index","key","style","left","concat","getOrdinal","transform","width","maxViews","flatMap","storyPositions","i","story","Math","floor","formatTime","clamp","_ref2","lastCells","useRef","_useChartDimensions3","height","marginTop","marginRight","marginBottom","marginLeft","_useChartDimensions4","_useMemo","useMemo","yScale","boundedHeight","xToCenterScale","boundedWidth","scaledXScale","scaledYScale","scaledStoryPositions","position","_useMemo2","timeString","viewsPerStory","fromPairs","id","filter","totalViews","values","storyProportions","cells","weightedVoronoi","x","y","weight","clip","voronoi","_Users_linying_codespace_Lyzzz_s_Blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","current","points","orientations","pointsIndex","newPoints","slice","lastCell","site","originalObject","times","distance","difference","distanceBetweenPoints","bestOrientation","minBy","in","stdDeviation","result","type","in2","operator","pointsToD","fill","stroke","storyIndex","TrafficSourcesWindowStory","assign","views","proportion","getCenterOfPoints","point","join","xExtent","yExtent","_ref3","_position","radius","label","p1","p2","sqrt","pow","t","combineChartDimensions","PropTypes","shape","parsedDimensions","_Users_linying_codespace_Lyzzz_s_Blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__","max","passedSettings","_Users_linying_codespace_Lyzzz_s_Blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","changeWidth","_useState3","_useState4","changeHeight","useEffect","element","resizeObserver","ResizeObserver","entries","Array","isArray","entry","contentRect","observe","unobserve","newSettings","InterpolatedNumber","state","currentNumber","onNumberChange","doInterpolate","arguments","undefined","_this","_isMounted","_this$props","props","numberOfSteps","updateSeconds","isNaN","isNumber","interpolator","stepIndex","secondsPerIncrement","timeout","clearTimeout","updateNumber","setState","setTimeout","this","doInterpolateOnInit","prevProps","prevState","_this$props2","isFinite","react__WEBPACK_IMPORTED_MODULE_4___default","PureComponent","defaultProps"],"mappings":"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","file":"static/js/50.27e7be26.chunk.js","sourcesContent":["import { useState, usePrevious, useEffect, useMemo, useRef } from 'react';\nimport React, {Component} from \"react\"\nimport {weightedVoronoi} from \"d3-weighted-voronoi\";\nimport {useSpring, animated, config as SpringConfig, useTrail} from 'react-spring'\n\nimport PropTypes from \"prop-types\"\nimport numeral from \"numeral\"\nimport domToImage from \"dom-to-image\"\nimport * as d3 from \"d3\"\nimport classNames from \"classnames\"\nimport _ from \"lodash\"\nimport InterpolatedNumber from \"components/_ui/InterpolatedNumber/InterpolatedNumber\"\nimport { useChartDimensions } from \"components/_ui/Chart/utils/utils\"\nimport siteIcons from \"./iconPaths.json\"\nimport { getPointFromAngleAndDistance } from \"utils/utils\"\nimport stories from \"./stories.json\"\nimport { useInterval } from \"utils/utils\"\nimport './TrafficSources.scss';\n\nconsole.log(stories)\n\nconst slicedStories = stories\n// const slicedStories = _.shuffle(stories.slice(0, 38))\nconst storyColors = d3.scaleLinear()\n  .domain([0, slicedStories.length])\n  // .interpolator(d3.interpolateRainbow)\n  // .interpolator(d3.interpolateRainbow)\n  .interpolate(d3.interpolateHcl)\n  // .range([\"#FDA7DF\", \"#FFC312\"])\n  // .range([\"#dff9fb\", \"#686de0\"])\n  .range([\"rgb(182, 148, 247)\", \"rgb(238, 162, 76)\"])\n  // .range([\"#f7d794\", \"#63cdda\"])\nconst rawTimeAccessor = d => d3.timeParse(\"%Y-%m-%dT%H:%M:%SZ\")(d[0])\nconst timeAccessor = d => d3.timeParse(\"%Y-%m-%dT%H:%M:%SZ\")(d[0])\nconst viewsAccessor = d => d && d[1]\n\nconst firstTime = d3.timeMinute.offset(timeAccessor(stories[0].timeline[0]), 60 * 24 * 2)\nconst lastTime = timeAccessor(_.last(stories[0].timeline))\nconst formatDate = d3.timeFormat(\"%A, %B %-d\")\nconst formatHour = d3.timeFormat(\"%-I:\")\nconst formatMinute = d => +d3.timeFormat(\"%-M\")(d)\nconst formatAmPm = d3.timeFormat(\"%p\")\nconst TrafficSources = () => {\n  const [time, setTime] = useState(firstTime)\n\n  useInterval(() => {\n    // setTime(d3.timeMinute.offset(time, 15))\n    setTime(d3.timeMinute.offset(time, 15))\n  }, time < lastTime ? 600 : null)\n\n  return (\n    <div className=\"TrafficSources\">\n      <h2 className=\"TrafficSources__title\">\n        Traffic Sources\n      </h2>\n\n      <div className=\"TrafficSources__contents\">\n\n        <TrafficSourcesDates time={time} />\n        <h4 className=\"TrafficSources__time\">\n          { formatDate(time) } { formatHour(time) }\n          <InterpolatedNumber number={formatMinute(time)} format={d => numeral(d).format(\"00\")} /> { formatAmPm(time) } EST\n        </h4>\n\n        <TrafficSourcesWindow time={time} />\n      </div>\n    </div>\n  )\n}\n\nexport default TrafficSources\n\n\nconst dates = d3.timeDay.range(firstTime, lastTime)\nconst dateScale = d3.scaleTime()\n  .domain([firstTime, lastTime])\n  .range([0, 1])\nconst ticks = dateScale.ticks(6)\nconst formatDatePretty = d3.timeFormat(\"%B %-d\")\nconst formatDatePrettyShort = d3.timeFormat(\"%A %-d\")\nconst formatDateDay = d3.timeFormat(\"%-d\")\nconst TrafficSourcesDates = ({ time }) => {\n  const [ref, dimensions] = useChartDimensions({\n  })\n  return (\n    <div className=\"TrafficSourcesDates\" ref={ref}>\n      {ticks.map((tick, index) => (\n        <div key={tick} className=\"TrafficSourcesDates__tick\" style={{\n          left: `${dateScale(tick) * 100}%`\n        }}>\n          { index ? formatDatePrettyShort(tick) : formatDatePretty(tick) }\n          { getOrdinal(+formatDateDay(tick)) }\n        </div>\n      ))}\n      <div className=\"TrafficSourcesDates__indicator\" style={{\n        transform: `translateX(${dateScale(time) * dimensions.width}px)`\n      }} />\n      <div className=\"TrafficSourcesDates__days\" />\n    </div>\n  )\n}\n\n\nconst siteColors = {\n  \"google\": \"#4285f4\",\n  \"pinterest\": \"#bd081c\",\n  \"facebook\": \"#3b5998\",\n  \"twitter\": \"#1da1f2\",\n  \"instagram\": \"#5851db\",\n  \"linkedin\": \"#0077b5\",\n  \"reddit\": \"#ff4500\",\n}\n// const sites = _.keys(story.timeline)\n// const sites = _.keys(data).filter(d => ![\"google\", \"facebook\"].includes(d))\nconst maxViews = d3.max(\n  _.flatMap(stories, d => d.timeline).map(viewsAccessor)\n  // _.flatMap(_.values(data)).map(viewsAccessor)\n  // _.flatMap(_.values(_.omit(data, [\"google\", \"facebook\"]))).map(viewsAccessor)\n)\nconst maxTotalViews = d3.max(\n  _.map(stories[0].timeline, (d, i) => d3.sum(stories.map(d => viewsAccessor(d.timeline[i]))))\n  // _.flatMap(_.values(data)).map(viewsAccessor)\n  // _.flatMap(_.values(_.omit(data, [\"google\", \"facebook\"]))).map(viewsAccessor)\n) * 0.5\nconst viewsScale = d3.scaleSqrt()\n  .domain([0, maxViews])\n  .range([20, 200])\nconst viewsCirclesScale = d3.scaleQuantize()\n  .domain([0, maxViews])\n  .range(d3.range(0, 60))\n\n\nconst columns = 5\nconst rows = stories.length / columns\nconst storyPositions = slicedStories.map((story, i) => [\n  (i % columns),\n  Math.floor(i / columns)\n])\nconsole.log(storyPositions)\n\nconst formatTime = d3.timeFormat(\"%Y-%m-%dT%H:%M:%SZ\")\n\nconst yOffsetScale = d3.scaleLinear()\n  .domain([0.55, 0.6])\n  .range([0, 1])\n  .clamp(true)\n\nconst TrafficSourcesWindow = ({ time }) => {\n  let lastCells = useRef([])\n\n  const [ref, dimensions] = useChartDimensions({\n    height: 600,\n    width: 800,\n    marginTop: 50,\n    marginRight: 50,\n    marginBottom: 50,\n    marginLeft: 50,\n  })\n\n\n  const { xToCenterScale, yScale, scaledStoryPositions } = useMemo(() => {\n    const yScale = d3.scaleLinear()\n      .domain([0, 1])\n      .range([dimensions.boundedHeight, 0])\n\n    const xToCenterScale = d3.scaleLinear()\n      .domain([0, 1])\n      .range([0, dimensions.boundedWidth / 2])\n\n    const scaledXScale = d3.scaleLinear()\n      .domain([-1, columns])\n      .range([0, dimensions.boundedWidth])\n    const scaledYScale = d3.scaleLinear()\n      .domain([-1, storyPositions[storyPositions.length - 1][1] + 1])\n      .range([0, dimensions.boundedHeight])\n\n    const scaledStoryPositions = storyPositions.map(position => position && [\n      scaledXScale(position[0]),\n      scaledYScale(position[1]),\n    ])\n    return {\n      xToCenterScale, yScale, scaledStoryPositions\n    }\n  }, [dimensions])\n\n  const { viewsPerStory, timeString, storyProportions, cells } = useMemo(() => {\n    const timeString = formatTime(time)\n    const viewsPerStory = _.fromPairs(_.map(slicedStories, story => [\n      story.id,\n      viewsAccessor(story.timeline.filter(d => d[0] == timeString)[0] || {}) || null\n    ]))\n    const totalViews = d3.sum(_.values(viewsPerStory))\n    const proportion = stories.length / maxTotalViews\n\n    const storyProportions = slicedStories.map(story => (\n      viewsPerStory[story.id] / totalViews\n    ))\n\n    const voronoi = weightedVoronoi()\n      .x(d => d[0])\n      .y(d => d[1])\n      .weight(d => d[2] * 400000)\n      .clip([[0,0], [0,dimensions.boundedHeight], [dimensions.boundedWidth, dimensions.boundedHeight], [dimensions.boundedWidth,0]])  // set the clipping polygon\n\n    let cells = voronoi(scaledStoryPositions.map((d, i) => [\n      ...d,\n      storyProportions[i],\n      i,\n      slicedStories[i],\n    ]))\n\n    if (lastCells.current) {\n      cells = cells.map(points => {\n        const orientations = points.map((d, pointsIndex) => {\n          const newPoints = pointsIndex ? [\n            ...points.slice(pointsIndex),\n            ...points.slice(0, pointsIndex),\n          ] : points\n          const lastCell = lastCells.current.filter(d => (d && d.site.originalObject[3] == points.site.originalObject[3]))[0] || []\n          if (!lastCell) {\n            return {\n              points: _.times(points.length, () => points[0]),\n              distance: 0,\n            }\n          }\n\n          const difference = d3.sum(newPoints.map((d, index) => (\n            distanceBetweenPoints(d, lastCell[index] || [])\n          )))\n          return {\n            points: newPoints,\n            difference,\n          }\n        })\n        let bestOrientation = _.minBy(orientations, d => d.difference).points\n        bestOrientation.site = points.site\n        return bestOrientation\n      })\n    }\n    lastCells.current = cells\n\n    return {\n      viewsPerStory, timeString, storyProportions, cells\n    }\n  }, [time])\n\n  return (\n    <div className=\"TrafficSourcesWindow\" ref={ref}>\n\n      <svg width={dimensions.width} height={dimensions.height}>\n        <defs>\n          <filter id=\"blur\">\n            {/* <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"5\" /> */}\n            {/* <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"7\" result=\"shadow\" />\n            <feOffset in=\"shadow\" dx=\"3\" dy=\"4\" result=\"shadow\" />\n            <feColorMatrix in=\"shadow\" type=\"matrix\" values=\"0 0 0 0 0  0 0 0 0 0  0 0 0 0 0  0 0 0 0.6 0\" result=\"shadow\" />\n            <feBlend in=\"SourceGraphic\" in2=\"shadow\" /> */}\n            <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"10\" result=\"blur\" />\n            <feColorMatrix in=\"blur\" type=\"matrix\" values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 19 -9\" result=\"goo\" />\n            <feComposite in=\"SourceGraphic\" in2=\"goo\" operator=\"atop\"/>\n\n\n          </filter>\n        </defs>\n\n          <g style={{transform: `translate(${dimensions.marginLeft}px, ${dimensions.marginTop}px)`}}>\n            <rect\n              className=\"TrafficSourcesWindow__window\"\n              height={dimensions.boundedHeight}\n              width={dimensions.boundedWidth}\n            />\n\n            <g className=\"TrafficSourcesWindow__polygons\" filter=\"url(#blur)\">\n              {_.map(cells, (points, i) => (\n                <path\n                  className=\"TrafficSourcesWindow__polygon\"\n                  key={storyColors(points.site && points.site.originalObject[3])}\n                  d={pointsToD(points)}\n                  fill={storyColors(points.site && points.site.originalObject[3])}\n                  stroke={storyColors(points.site && points.site.originalObject[3])}\n                />\n              ))}\n            </g>\n            <g className=\"TrafficSourcesWindow__polygons\">\n              {_.map(cells, (points, i) => (\n                <path\n                  className=\"TrafficSourcesWindow__polygon TrafficSourcesWindow__polygon--blank\"\n                  key={storyColors(points.site && points.site.originalObject[3])}\n                  d={pointsToD(points)}\n                />\n              ))}\n            </g>\n\n        </g>\n      </svg>\n\n      {_.map(cells, points => {\n        const storyIndex = points.site && points.site.originalObject[3]\n        const story = points.site && points.site.originalObject[4] || {}\n        return (\n          <TrafficSourcesWindowStory\n            key={story.id}\n            story={story}\n            storyIndex={storyIndex}\n            views={viewsPerStory[story.id]}\n            proportion={storyProportions[storyIndex]}\n            position={getCenterOfPoints(points)}\n            dimensions={dimensions}\n            yScale={yScale}\n            {...{time, timeString, xToCenterScale, scaledStoryPositions}}\n          />\n        )\n      })}\n\n    </div>\n  )\n}\nconst pointsToD = points => [\n  \"M\",\n  ...points.map(point => [\n    point.join(\",\")\n  ].join(\"L \"))\n].join(\" \")\nconst getCenterOfPoints = points => {\n  const xExtent = d3.extent(points, d => d[0])\n  const yExtent = d3.extent(points, d => d[1])\n  return [\n    d3.mean(xExtent),\n    d3.mean(yExtent),\n  ]\n}\n\n\nconst radiusScale = d3.scaleLinear()\n  .domain([0, 1])\n  .range([1, 90])\nconst TrafficSourcesWindowStory = ({ time, dimensions, story, storyIndex, views, yScale, xToCenterScale, proportion, position, scaledStoryPositions, radius }) => {\n  // let x = xToCenterScale(proportion)\n  // if (storyIndex % 2) {\n  //   x = x * -1 + dimensions.boundedWidth\n  // }\n  // const y = yScale(proportion)\n  // const [x, y] = scaledStoryPositions[storyIndex]\n  const [x, y] = position\n\n  return (\n    <div className=\"TrafficSourcesWindowStory\" style={{transform: `translate(${x}px, ${y}px)`}}>\n      {/* <circle className=\"TrafficSourcesWindowStory__circle\" r={r} /> */}\n      { story.label }\n      {/* <text className=\"TrafficSourcesWindowStory__label\">{ story.label.slice(0, 20) }</text> */}\n    </div>\n  )\n}\n\nconst Person = ({ id, x, y, fill }) => {\n  return (\n    <circle\n      className=\"Person\"\n      cx={x}\n      cy={y}\n      r={3}\n      fill={fill}\n    />\n  )\n}\n\n\nconst distanceBetweenPoints = (p1, p2) => (\n  Math.sqrt(\n    (p1[0] - p2[0]) ** 2\n    + (p1[1] - p2[1]) ** 2\n  )\n)\n\nexport const getOrdinal = d => {\n  const t = d % 10;\n  return (d % 100 / 10) === 1 ? \"th\" : t === 1 ? \"st\" : t === 2 ? \"nd\" : t === 3 ? \"rd\" : \"th\"\n}","import { useRef, useState, useEffect } from \"react\"\nimport PropTypes from \"prop-types\"\nimport ResizeObserver from '@juggle/resize-observer';\n\nexport const dimensionsPropsType = (\n    PropTypes.shape({\n        height: PropTypes.number,\n        width: PropTypes.number,\n        marginTop: PropTypes.number,\n        marginRight: PropTypes.number,\n        marginBottom: PropTypes.number,\n        marginLeft: PropTypes.number,\n    })\n)\n\nexport const combineChartDimensions = dimensions => {\n    let parsedDimensions = {\n        marginTop: 40,\n        marginRight: 30,\n        marginBottom: 40,\n        marginLeft: 75,\n        ...dimensions,\n    }\n\n    return {\n        ...parsedDimensions,\n        boundedHeight: Math.max(parsedDimensions.height - parsedDimensions.marginTop - parsedDimensions.marginBottom, 0),\n        boundedWidth: Math.max(parsedDimensions.width - parsedDimensions.marginLeft - parsedDimensions.marginRight, 0),\n    }\n}\n\nexport const useChartDimensions = passedSettings => {\n    const ref = useRef()\n    const dimensions = combineChartDimensions(passedSettings)\n\n    const [width, changeWidth] = useState(0)\n    const [height, changeHeight] = useState(0)\n\n    useEffect(() => {\n        if (dimensions.width && dimensions.height) return [ref, dimensions]\n\n        const element = ref.current\n        const resizeObserver = new ResizeObserver(entries => {\n            if (!Array.isArray(entries)) return\n            if (!entries.length) return\n\n            const entry = entries[0]\n\n            if (width != entry.contentRect.width) changeWidth(entry.contentRect.width)\n            if (height != entry.contentRect.height) changeHeight(entry.contentRect.height)\n        })\n\n        resizeObserver.observe(element)\n\n        return () => resizeObserver.unobserve(element)\n    }, [])\n\n    const newSettings = combineChartDimensions({\n        ...dimensions,\n        width: dimensions.width || width,\n        height: dimensions.height || height,\n    })\n\n    return [ref, newSettings]\n}","import React, { PureComponent } from \"react\"\nimport PropTypes from \"prop-types\"\nimport numeral from \"numeral\"\nimport _ from \"lodash\"\nimport * as d3 from \"d3\"\n\nimport \"./InterpolatedNumber.scss\"\n\nclass InterpolatedNumber extends PureComponent {\n    state = {\n        currentNumber: 0,\n    }\n\n    static propTypes = {\n        number: PropTypes.number,\n        numberOfSteps: PropTypes.number,\n        updateSeconds: PropTypes.number,\n        format: PropTypes.func,\n        doInterpolateOnInit: PropTypes.bool,\n    }\n\n    static defaultProps = {\n        numberOfSteps: 9,\n        updateSeconds: 0.6,\n        format: d => numeral(d).format(\"0,0\"),\n        doInterpolateOnInit: false,\n    }\n\n    componentDidMount() {\n        this._isMounted = true\n        const { doInterpolateOnInit } = this.props\n        this.onNumberChange(doInterpolateOnInit)\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false\n        if (this.timeout) clearTimeout(this.timeout)\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.number != this.props.number) this.onNumberChange()\n    }\n\n    onNumberChange = (doInterpolate=true) => {\n        if (!this._isMounted) return\n        const { number, numberOfSteps, updateSeconds } = this.props\n        const { currentNumber } = this.state\n        if (_.isNaN(number) || !_.isNumber(number)) {\n            this.setState({ currentNumber: null })\n            return\n        }\n        if (!doInterpolate) {\n            this.setState({ currentNumber: number })\n            return\n        }\n\n        this.interpolator = d3.interpolateNumber(currentNumber, number)\n        this.stepIndex = 0\n        this.secondsPerIncrement = updateSeconds / numberOfSteps\n\n        if (this.timeout) clearTimeout(this.timeout)\n        this.updateNumber()\n    }\n\n    updateNumber = () => {\n        if (!this._isMounted) return\n        const { numberOfSteps } = this.props\n        if (this.timeout) clearTimeout(this.timeout)\n\n        this.stepIndex++\n        const currentNumber = this.interpolator((1 / numberOfSteps) * this.stepIndex)\n\n        this.setState({ currentNumber }, () => {\n            if (this.stepIndex >= numberOfSteps) return\n            this.timeout = setTimeout(this.updateNumber, this.secondsPerIncrement * 1000)\n        })\n    }\n\n    render() {\n        const { number, format, numberOfSteps, updateSeconds, className } = this.props\n        const { currentNumber } = this.state\n\n        if (!_.isFinite(number)) return <span className=\"InterpolatedNumber__empty\">—</span>\n\n        return format(currentNumber)\n    }\n}\n\nexport default InterpolatedNumber\n"],"sourceRoot":""}