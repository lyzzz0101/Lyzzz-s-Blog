(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{1318:function(e,t,a){"use strict";a.r(t);var n=a(0),l=a.n(n),r=a(651),i=a(4),o=a(46),c=(a(617),a(641),a(12)),m=(a(33),a(51)),s=a(24),d=a(655);a(258);t.default=function(e){var t=e.onScrollToSectionLocal;return l.a.createElement("div",{className:"LearnD3Time"},l.a.createElement("p",null,"While visualizing data, we'll often have to deal with the three-headed hydra that is time. When we, as humans, think about time, it's often broken into intervals:"),l.a.createElement(m.a,{items:["minutes","hours","days","months","years"]}),l.a.createElement("p",null,"And we express a specific point in time in terms of those intervals. For example, today is ",l.a.createElement(d.P,null,i.timeFormat("%A, %B %-d, %Y")(new Date)),", and tomorrow is ",l.a.createElement(d.P,null,i.timeFormat("%A, %B %-d, %Y")(i.timeDay.offset(new Date,1))),". But how can we place these two date strings on a scale?"),l.a.createElement("h3",null,"d3-time-format"),l.a.createElement("p",null,"Javascript has a native ",l.a.createElement("b",null,"Date")," object that represent a point in time ",l.a.createElement("i",null,"down to the millisecond"),". We can turn a string into a ",l.a.createElement("b",null,"Date")," by using ",l.a.createElement(d.DocsLink,{repo:"time-format",id:"timeParse"}),"."),l.a.createElement("p",null,l.a.createElement(d.DocsLink,{repo:"time-format",id:"timeParse"})," takes one parameter: a ",l.a.createElement("i",null,"specifier")," string that represents to format of your datetime. This string will be made up of individual ",l.a.createElement("i",null,"specifiers"),": a combination of a ",l.a.createElement(d.P,null,"%")," and a letter."),l.a.createElement("p",null,"Here are most of the common ",l.a.createElement("i",null,"specifiers")),l.a.createElement("div",{className:""},Object.keys(E).map(function(e){return l.a.createElement("div",{key:e,style:{width:"20em"}},l.a.createElement("span",{style:{opacity:.5}},"%"),l.a.createElement("b",{className:"tnum",style:{display:"inline-block",marginLeft:"0.1em",textAlign:"center",width:"1em"}},e),l.a.createElement("span",{style:{fontSize:"0.8em",lineHeight:"1.3em",marginLeft:"0.5em"}},E[e]))})),l.a.createElement("br",null),l.a.createElement("p",null,"For example, if we wanted to parse the date string ",l.a.createElement(d.P,null,i.timeFormat("%A, %B %d, %Y")(new Date)),", we could use the following code:"),l.a.createElement(s.a,{size:"s"},'const dateString = "'.concat(i.timeFormat("%A, %B %d, %Y")(new Date),'"\nconst today = d3.timeParse("%A, %B %d, %Y")(dateString)\n// <Date> ').concat(i.timeParse("%A, %B %d, %Y")(i.timeFormat("%A, %B %d, %Y")(new Date)))),l.a.createElement(o.a,null,"To create a linear scale for datetimes in our dataset, we would pass these parsed ",l.a.createElement("b",null,"Date"),"s to ",l.a.createElement(d.DocsLink,{repo:"scale",id:"timeScale"}),". Learn more about ",l.a.createElement("b",null,"scales")," in the ",l.a.createElement(c.a,{to:"#",onClick:t("converting-data-to-the-physical-domain")},"scales section"),"."),l.a.createElement("p",null,"We can pass the same specifiers with ",l.a.createElement(d.DocsLink,{repo:"time-format",id:"timeFormat"})," to convert a ",l.a.createElement("b",null,"Date")," object back into a string, which comes in handy for labels and axes:"),l.a.createElement(s.a,{size:"s"},'const today = new Date()\nconst today = d3.timeFormat("%A, %B %d, %Y")(today)\n// '.concat(i.timeFormat("%A, %B %d, %Y")(new Date))),l.a.createElement("p",null,"If a ",l.a.createElement("i",null,"specifier")," is zero-padded, adding a ",l.a.createElement(d.P,null,"-")," will remove any beginning zeroes."),l.a.createElement(s.a,{size:"s"},'const today = new Date()\nconst today = d3.timeFormat("%A, %B %-d, %Y")(today)\n// '.concat(i.timeFormat("%A, %B %-d, %Y")(new Date))),l.a.createElement("p",null,l.a.createElement(d.DocsLink,{repo:"time-format"})," has methods for handling ",l.a.createElement("b",null,"UTC")," and ",l.a.createElement("b",null,"ISO")," times, as well as a few methods for handling ",l.a.createElement("i",null,"locales"),"."),l.a.createElement(d.ReadMore,{id:"time-format"}),l.a.createElement("h3",null,"d3-time"),l.a.createElement("p",null,"But what if we need to modify datetimes?"),l.a.createElement("p",null,l.a.createElement(d.DocsLink,{repo:"time"})," has your back with a built-in set of intervals: ",u.map(function(e,t){return l.a.createElement("span",null,t?t==u.length-1?", and ":", ":""," ",l.a.createElement(d.DocsLink,{repo:"time",id:e},e))}),"."),l.a.createElement("p",null,"Each of these intervals has a handful of methods:"),l.a.createElement(m.a,{items:[l.a.createElement(l.a.Fragment,null,l.a.createElement(d.DocsLink,{repo:"time",id:"interval_floor"},".floor()"),", ",l.a.createElement(d.DocsLink,{repo:"time",id:"interval_ceil"},".ceil()"),", and ",l.a.createElement(d.DocsLink,{repo:"time",id:"interval_round"},".round()")," for creating a ",l.a.createElement("b",null,"Date")," at the start, end, or closest boundary of the interval"),l.a.createElement(l.a.Fragment,null,l.a.createElement(d.DocsLink,{repo:"time",id:"interval_offset"},".offset()")," to offset the ",l.a.createElement("b",null,"Date")," by a specified number of intervals"),l.a.createElement(l.a.Fragment,null,l.a.createElement(d.DocsLink,{repo:"time",id:"interval_range"},".range()")," to create an array of ",l.a.createElement("b",null,"Date"),"s, one for each interval between a specified start and stop ",l.a.createElement("b",null,"Date")),l.a.createElement(l.a.Fragment,null,l.a.createElement(d.DocsLink,{repo:"time",id:"interval_count"},".count()")," to return the number of intervals that can fit between two specified ",l.a.createElement("b",null,"Date"),"s")]}),l.a.createElement("p",null,"For example, if I wanted to create a date time that was exactly ",l.a.createElement("i",null,"one week")," after today, I could use ",l.a.createElement(d.DocsLink,{repo:"time",id:"timeWeek"}),"."),l.a.createElement(s.a,{size:"s"},"d3.timeWeek.offset(new Date(), 1)\n// <Date> ".concat(i.timeWeek.offset(new Date,1))),l.a.createElement("p",null,l.a.createElement(d.DocsLink,{repo:"time"})," has come in handy very often, and I would highly recommend getting familiar with its API. There are many dragons when dealing with datetimes (different numbers of days in months, leap years, Daylight Savings time ",l.a.createElement(r.Twemoji,{svg:!0,text:"\ud83d\ude40"}),"), which can be largely ignored with the right library."),l.a.createElement(d.ReadMore,{id:"time"}))};var u=["timeMillisecond","timeSecond","timeMinute","timeHour","timeDay","timeWeek","timeMonth","timeYear"],E={f:"milliseconds",S:"seconds",M:"minute",H:"hour (24h)",I:"hour (12h)",p:"AM / PM",d:"day of the month",a:"abbreviated weekday name",A:"full weekday name",b:"abbreviated month name",B:"full month name",m:"month",Y:"year",Z:"time zone offset"}},617:function(e,t,a){"use strict";var n=a(6),l=a(34),r=a(0),i=a.n(r),o=a(33),c=a(147);a(129),a(619);t.a=function(e){var t=e.trigger,a=e.triggerExpandText,m=(e.doHideIfCollapsed,e.className),s=e.children,d=Object(l.a)(e,["trigger","triggerExpandText","doHideIfCollapsed","className","children"]),u=Object(r.useState)(!1),E=Object(n.a)(u,2),p=E[0],f=E[1],h=Object(r.useRef)();return i.a.createElement("details",Object.assign({className:"Expandy Expandy--is-".concat(p?"expanded":"collapsed"," ").concat(m)},d,{ref:h,onToggle:function(e){var t=e.target.open;f(t)}}),i.a.createElement("summary",null,i.a.createElement("div",{className:"Expandy__trigger button-no-appearance"},i.a.createElement("div",{className:"Expandy__trigger__text"},i.a.createElement("b",null,t),i.a.createElement("div",{className:"Expandy__trigger__info"},a||"tap me ".concat(p?"to hide":"for more"," details"))),i.a.createElement("div",{className:"Expandy__trigger__mark"},"\u1f30")),i.a.createElement(c.a,{className:"Expandy__toggle",contents:i.a.createElement("button",{className:"button-no-appearance"},p?"Collapse me":"Expand me")},i.a.createElement("div",{className:"Expandy__toggle__arrow Expandy__toggle__arrow--up"},i.a.createElement(o.a,{name:"arrow",direction:"n",size:"s"})),i.a.createElement("div",{className:"Expandy__toggle__arrow Expandy__toggle__arrow--down"},i.a.createElement(o.a,{name:"arrow",direction:"s",size:"s"})))),i.a.createElement("div",{className:"Expandy__contents"},s))}},619:function(e,t,a){},641:function(e,t,a){"use strict";var n=a(6),l=a(34),r=a(0),i=a.n(r);a(33),a(642);t.a=function(e){var t=e.description,a=e.className,o=e.children,c=Object(l.a)(e,["description","className","children"]),m=Object(r.useState)(!1),s=Object(n.a)(m,2),d=s[0],u=s[1];return i.a.createElement("div",Object.assign({className:"InlineExpandy InlineExpandy--is-".concat(d?"expanded":"collapsed"," ").concat(a)},c),i.a.createElement("div",{className:"InlineExpandy__trigger",onClick:function(){u(!d)}},d?"Hide":"Show"," ",t,"..."),d&&i.a.createElement("div",{className:"InlineExpandy__contents"},o))}},642:function(e,t,a){}}]);
//# sourceMappingURL=65.0f4f1091.chunk.js.map