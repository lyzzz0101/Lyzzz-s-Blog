{"version":3,"sources":["components/Blog/posts/LearnD3/LearnD3Selections.jsx","components/_ui/Expandy/Expandy.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_emoji_render__WEBPACK_IMPORTED_MODULE_1__","components_ui_Aside_Aside__WEBPACK_IMPORTED_MODULE_2__","components_ui_Expandy_Expandy__WEBPACK_IMPORTED_MODULE_3__","components_ui_Link_Link__WEBPACK_IMPORTED_MODULE_4__","components_ui_Icon_Icon__WEBPACK_IMPORTED_MODULE_5__","components_ui_List_List__WEBPACK_IMPORTED_MODULE_6__","components_ui_Code_Code__WEBPACK_IMPORTED_MODULE_7__","_LearnD3__WEBPACK_IMPORTED_MODULE_8__","images_book_png__WEBPACK_IMPORTED_MODULE_9__","images_book_png__WEBPACK_IMPORTED_MODULE_9___default","LearnD3Selections","a","createElement","className","trigger","href","P","items","Fragment","hasNumbers","hasLineNumbers","fileName","style","color","id","name","size","canEval","svg","text","src","bookImage","alt","_ref","children","Expandy","triggerExpandText","doHideIfCollapsed","props","Object","_Users_linying_codespace_Lyzzz_s_Blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","_useState","useState","_useState2","_Users_linying_codespace_Lyzzz_s_Blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isExpanded","setIsExpanded","ref","useRef","react__WEBPACK_IMPORTED_MODULE_2___default","assign","concat","onToggle","e","target","open","components_ui_Tooltip_Tooltip__WEBPACK_IMPORTED_MODULE_4__","contents","components_ui_Icon_Icon__WEBPACK_IMPORTED_MODULE_3__","direction"],"mappings":"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","file":"static/js/76.94068117.chunk.js","sourcesContent":["import React, { useState } from \"react\"\nimport { Twemoji } from \"react-emoji-render\"\n\nimport Aside from \"components/_ui/Aside/Aside\"\nimport Expandy from \"components/_ui/Expandy/Expandy\"\nimport Link from \"components/_ui/Link/Link\"\nimport Icon from \"components/_ui/Icon/Icon\"\nimport List from \"components/_ui/List/List\"\nimport Code from \"components/_ui/Code/Code\"\nimport { ReadMore } from \"./LearnD3\"\nimport bookImage from \"images/book.png\";\n\nconst LearnD3Selections = () => {\n    return (\n        <div className=\"LearnD3Selections\">\n\n            <p>\n                The Document Object Model (DOM) is the tree of elements on a web page.\n            </p>\n\n            <Expandy trigger=\"Teach me about the DOM and how to modify it\">\n                <p>\n                    <Link href=\"https://developer.mozilla.org/en-US/docs/Learn/Common_questions/What_are_browser_developer_tools\">Open your browser’s Dev Tools</Link> (most likely <P>Ctrl/Cmd</P> + <P>Shift</P> + <P>I</P>) and peep in the <b>Elements</b> tab. You’ll be able to see that this web page is mostly made up of <P>{`<div>`}</P> elements.\n                </p>\n\n                <Aside>\n                    Read more about the DOM <Link href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Introduction\">in the MDN docs</Link>.\n                </Aside>\n\n                <p>\n                    We can change the elements in the DOM with basic Javascript:\n                </p>\n\n                <List items={[\n                    <>\n                        To <i>select</i> one or more existing elements, we can use the <Link href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\"><P>document.querySelector()</P></Link> method, passing in an element tag name, an element class name (prepended with a <P>.</P>), or an element id (prepended with a <P>#</P>). This will return the first matching element in our DOM.\n                    </>,\n                    <>\n                        Our selected element has many methods that will help us <i>change</i> it. For example, we can look at the current CSS styles on the <P>style</P> object, or update them by changing the value.\n                    </>,\n                ]} hasNumbers />\n\n                <p>\n                    For example, try running this in the Dev Tools <b>Console</b> tab:\n                </p>\n\n                <Code hasLineNumbers={false} fileName={<>In your browser’s Dev Tools <b>Console</b> tab</>}>\n{`document.querySelector(\"div\").style.color = \"cornflowerblue\"`}\n                </Code>\n\n                <p>\n                    This code will select this <i>first</i> <P>{`<div>`}</P> and add the CSS style: <P>color: cornflowerblue</P>.\n                </p>\n                <p>\n                    You probably don’t want to read this whole article in <span style={{color: \"cornflowerblue\"}}>blue</span> - reset the color by removing that CSS style:\n                </p>\n\n                <Code hasLineNumbers={false} fileName={<>In your browser’s Dev Tools <b>Console</b> tab</>}>\n{`document.querySelector(\"div\").style.color = null`}\n                </Code>\n\n                <p>\n                    That was pretty simple, wasn’t it?\n                </p>\n\n                <p id=\"this-paragraph\">\n                    Now let’s try adding a new element to our DOM - we’ve given <b>this paragraph</b> an <P>id</P> of <P>\"this-paragraph\"</P> to help out.\n                </p>\n\n            <Code hasLineNumbers={false} fileName={<>In your browser’s Dev Tools <b>Console</b> tab</>}>\n{`let newDiv = document.createElement(\"div\")\nnewDiv.innerText = \"HI\"\ndocument.querySelector(\"#this-paragraph\").append(newDiv)`}\n                </Code>\n\n                <p>\n                    Still pretty easy, right?\n                </p>\n\n            </Expandy>\n\n\n            <p>\n                Imagine that you want to add an element to the DOM for <i>every item in a dataset</i>. We could just use a <Link href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Loops_and_iteration\">for loop</Link> and it would be more work, but not too hard.\n            </p>\n\n            <p>\n                Now imagine that our data changes and we want to keep the elements in our DOM synced with our data. Hmm, this would be a lot of work with just the native browser APIs and vanilla Javascript.\n            </p>\n\n            <p>\n                This is when <Link href=\"https://github.com/d3/d3-selection\"><b>d3-selection</b></Link> comes to the rescue!\n            </p>\n\n            <h3>\n                d3-selection\n            </h3>\n\n            <p>\n                <Link href=\"https://github.com/d3/d3-selection\"><b>d3-selection</b></Link> has an alternative method to <P>document.querySelector()</P> called <P>d3.select()</P>.\n            </p>\n\n            <p>\n                This method creates a <b>d3 selection object</b> that has many helper methods.\n            </p>\n\n            <p>\n                Let’s create one!\n            </p>\n\n            <p id=\"this-other-paragraph\">\n                    This paragraph has an <P>id</P> of <P>this-other-paragraph</P>). Let’s change its style and add multiple <P>{`<div>`}</P>s from an array with the following code:\n            </p>\n\n            <Aside>\n                <b>Run the following code in your Dev Tools console!</b>\n                <br />\n                <p>\n                    Don’t worry, we have d3.js available globally on this page so you won’t need to import it.\n                </p>\n                Alternatively, you could just press the <Icon name=\"play\" size=\"s\" /> icon, but that’s not as fun, is it?\n            </Aside>\n\n            <Code hasLineNumbers={false} canEval fileName={<>In your browser’s Dev Tools <b>Console</b> tab</>}>\n{`d3.select(\"#this-other-paragraph\")\n  .style(\"color\", \"cornflowerblue\")\n  .style(\"font-style\", \"italic\")\n  .style(\"font-weight\", \"bold\")\n  .selectAll(\"div\")\n  .data([1, 2, 3, 4, 5])\n  .enter().append(\"div\")\n  .text(d => d)`}\n            </Code>\n\n            <Aside>\n                <p>\n                    As an extra perk, running this code in your console will spit out the <b>d3 selection object</b> we created for our paragraph.\n                </p>\n                Go ahead and poke around in there to get an idea of how they are structured.\n            </Aside>\n\n            <p>\n                See how we added a new element for <i>every item in our array</i>? Think about how powerful this functionality could be when visualizing data.\n            </p>\n\n            <p>\n                You'll also notice that we used a <P>.selectAll()</P> method that selects <i>multiple elements</i>.\n            </p>\n\n            <p id=\"this-new-paragraph\">\n                Now let’s sync our new elements when our data changes two seconds later:\n            </p>\n\n            <Code hasLineNumbers={false} canEval fileName={<>In your browser’s Dev Tools <b>Console</b> tab</>}>\n{`const paragraph = d3.select(\"#this-new-paragraph\")\nlet array = [1, 2, 3, 4, 5]\n\nparagraph.style(\"color\", \"cornflowerblue\")\n  .style(\"font-style\", \"italic\")\n  .style(\"font-weight\", \"bold\")\n  .selectAll(\"div\")\n  .data(array)\n  .enter().append(\"div\")\n  .text(d => d)\n\nsetTimeout(() => {\narray = [\"this\", \"is\", \"new\", \"content\"]\nparagraph.style(\"color\", \"tomato\")\nparagraph.selectAll(\"div\")\n  .data(array)\n  .text(d => d)\n  .exit().remove()\n}, 2000)`}\n            </Code>\n\n            <p>\n                Nice! Now we can see our \"data elements\" updating!\n            </p>\n\n            <p>\n                You might have noticed that the content updates differently the second time we run the same code. <Twemoji svg text=\"🤔\" />\n            </p>\n\n            <p>\n                The d3-selection update pattern is a common gotcha when learning d3. It’s important that you understand it well before using it, so read up on the basic pattern <Link href=\"https://bl.ocks.org/mbostock/3808218\">on this guide by Mike Bostock</Link>.\n            </p>\n\n            <Aside>\n                <p>\n                    If you’re familiar with the general d3 update pattern, there is a new method called <P>selection.join()</P> that’s here to make your life easier!\n                </p>\n                Read more <Link href=\"https://observablehq.com/@d3/selection-join\">on Observable</Link>.\n            </Aside>\n\n            <p>\n                <b>D3 selection objects</b> have other methods - here's a few additional things they can help with:\n            </p>\n            <List items={[\n                <>\n                    <P>{`.on()`}</P> & <P>{`.dispatch()`}</P>\n                    <br />\n                    <p>\n                        listening to (and dispatching) mouse & touch events.\n                    </p>\n                    D3 also provides <P>d3.pointer()</P> and <P>d3.touch()</P> methods that return the cursor position when passed a js Event object\n                </>,\n                <>\n                    <P>{`.attr()`}</P> & <P>{`.style()`}</P> & <P>{`.property()`}</P>\n                    <br />\n                    updating elements’ attributes and styles\n                </>,\n                <>\n                    <P>{`.text()`}</P> & <P>{`.html()`}</P>\n                    <br />\n                    modifying text\n                </>,\n                <>\n                    <P>{`.sort()`}</P> & <P>{`.order()`}</P> & <P>{`.raise()`}</P> & <P>{`.lower()`}</P>\n                    <br />\n                    re-ordering elements\n                </>,\n                <>\n                    <P>{`.transition()`}</P>\n                    <br />\n                    adding transitions and animations <i>(we'll talk more about this later)</i>\n                </>,\n            ]} />\n\n            <p>\n                And these are just the highlights! Take some time to learn these basics before overwhelming yourself in the deep end.\n            </p>\n\n            <ReadMore id=\"selection\" />\n\n            <Aside className=\"LearnD3__promo\">\n                <img src={bookImage} alt=\"book\" className=\"LearnD3__promo__img\"/>\n                    <div className=\"LearnD3__promo__text\">\n                    <p>\n                        A great place to start is the <Link href=\"http://fullstack.io/fullstack-d3\"><b>Fullstack D3 and Data Visualization</b></Link> book.\n                    </p>\n                    <Link href=\"http://fullstack.io/fullstack-d3\">Download the first chapter</Link> to dive in and you'll make your own custom data visualization by the end!\n                </div>\n            </Aside>\n\n            <h3>\n                d3-selection-multi\n            </h3>\n\n            <p>\n                <b>d3 selection objects</b> have <P>.style()</P> and <P>.attr()</P> methods to update the <b>styles</b> or <b>attributes</b> of DOM elements. But we can only update <i>one value per call</i>.\n            </p>\n            <p>\n                <Link href=\"https://github.com/d3/d3-selection\"><b>d3-selection-multi</b></Link> adds <P>.styles()</P> and <P>.attrs()</P> methods to our <b>d3 selection objects</b> that will take an object of updates.\n            </p>\n\n            <Aside>\n                Note that this is an <i>external module</i> (in yellow) and is not included in the code d3.js bundle. If you want to use it, you’ll need to <Link href=\"https://bl.ocks.org/mbostock/bb09af4c39c79cffcde4\">roll your own d3.js bundle</Link> or <Link href=\"https://github.com/d3/d3-selection-multi#installing\">import it into your site individually</Link>.\n            </Aside>\n\n\n            <p id=\"this-last-paragraph\">For example, this code:</p>\n\n            <Code hasLineNumbers={false} fileName={<>In your browser’s Dev Tools <b>Console</b> tab</>} canEval>\n{`d3.select(\"#this-last-paragraph\")\n  .style(\"color\", \"cornflowerblue\")\n  .style(\"font-style\", \"italic\")\n  .style(\"font-weight\", \"bold\")`}\n            </Code>\n\n            <p>can be written like so:</p>\n\n            <Code hasLineNumbers={false} fileName={<>In your browser’s Dev Tools <b>Console</b> tab</>}>\n{`d3.select(\"#this-last-paragraph\")\n  .styles({\n    \"color\":       \"cornflowerblue\",\n    \"font-style\":  \"italic\",\n    \"font-weight\": \"bold\",\n  })`}\n            </Code>\n\n            <p>\n                As you can see, this module mostly helps with code organization -- you might even prefer the original format!\n            </p>\n\n            <ReadMore id=\"selection-multi\" />\n\n        </div>\n    )\n}\n\nexport default LearnD3Selections\n\n\nconst P = ({ children })=> (\n    <code className=\"P\">{ children }</code>\n)\n","import React, { useState, useRef } from 'react'\nimport Icon from \"components/_ui/Icon/Icon\";\nimport Tooltip from \"components/_ui/Tooltip/Tooltip\";\nimport { scrollTo } from \"utils.js\"\n\nimport './Expandy.scss';\n\nconst Expandy = ({ trigger, triggerExpandText, doHideIfCollapsed=false, className, children, ...props }) => {\n    const [isExpanded, setIsExpanded] = useState(false)\n    const ref = useRef()\n\n    // const onToggleExpanded = () => {\n    //     setIsExpanded(!isExpanded)\n\n    //     if (isExpanded) {\n    //         const top = ref.current.getBoundingClientRect().top\n    //         if (top > window.innerHeight * 0.3) return\n    //         const y = top\n    //             + window.scrollY\n    //             - window.innerHeight * 0.3\n    //         scrollTo(y, 600)\n    //     }\n    // }\n\n    return (\n        <details className={`Expandy Expandy--is-${isExpanded ? \"expanded\" : \"collapsed\"} ${className}`} {...props} ref={ref}\n            onToggle={e => {\n                const isExpanded = e.target.open\n                setIsExpanded(isExpanded)\n        }}>\n            <summary>\n            <div className=\"Expandy__trigger button-no-appearance\" >\n                <div className=\"Expandy__trigger__text\">\n                    <b>{ trigger }</b>\n                    <div className=\"Expandy__trigger__info\">\n                        { triggerExpandText || `tap me ${isExpanded ? \"to hide\" : \"for more\" } details` }\n                    </div>\n                </div>\n                <div className=\"Expandy__trigger__mark\">ἰ</div>\n            </div>\n\n            <Tooltip\n                className=\"Expandy__toggle\"\n                contents={<button className=\"button-no-appearance\">{isExpanded ? \"Collapse me\" : \"Expand me\"}</button>}\n                >\n                <div className=\"Expandy__toggle__arrow Expandy__toggle__arrow--up\">\n                    <Icon name=\"arrow\" direction=\"n\" size=\"s\" />\n                </div>\n                <div className=\"Expandy__toggle__arrow Expandy__toggle__arrow--down\">\n                    <Icon name=\"arrow\" direction=\"s\" size=\"s\" />\n                </div>\n                </Tooltip>\n                </summary>\n            <div className=\"Expandy__contents\">\n                {children }\n            </div>\n        </details>\n    )\n}\n\nexport default Expandy\n"],"sourceRoot":""}