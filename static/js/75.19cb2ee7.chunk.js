(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{1313:function(e,t,a){"use strict";a.r(t);var n=a(0),l=a.n(n),r=a(651),s=a(46),c=(a(617),a(12)),o=a(33),i=a(51),m=a(24),h=a(655);a(258);t.default=function(){return l.a.createElement("div",{className:"LearnD3GetData"},l.a.createElement("p",null,"What's the first thing we need to do when visualizing data?"),l.a.createElement("p",null,"Get the data, of course!"),l.a.createElement("p",null,"There are many ways to get access to data on a web page: anywhere from hardcoding it in your Javascript file to querying a database."),l.a.createElement("p",null,"One of the simplest ways is to store it in a static file and ",l.a.createElement("i",null,"fetch")," it."),l.a.createElement("p",null,"While we could use the native Javascript APIs to fetch text from a file, we would need to parse it by ourselves."),l.a.createElement("h3",null,"d3-fetch"),l.a.createElement("p",null,l.a.createElement(c.a,{href:"https://github.com/d3/d3-fetch"},l.a.createElement("b",null,"d3-fetch"))," provides some utility methods that will fetch data from a file and parse it into a Javascript object."),l.a.createElement("p",null,l.a.createElement("b",null,"d3-fetch")," is able to parse files with several different data formats:"),l.a.createElement(i.a,{items:[l.a.createElement(l.a.Fragment,null,l.a.createElement("b",{style:{display:"inline-block",width:"2.2em"}},"json")," ",l.a.createElement(c.a,{href:"https://github.com/d3/d3-fetch#json"},l.a.createElement(o.a,{name:"arrow",size:"s",direction:"ne"})),l.a.createElement("p",null,l.a.createElement(c.a,{href:"https://en.wikipedia.org/wiki/JSON"},"JSON")," (JavaScript Object Notation) is a file format that looks very much like a typical Javascript object."),l.a.createElement(m.a,{size:"s"},'{\n  "items": [{\n    "date": "2018-10-10",\n    "weather": "cloudy",\n  },{\n    "date": "2018-10-11",\n    "weather": "sunny",\n  }]\n}'),l.a.createElement("p",null,"JSON files can be easy to read, since they read kind of like normal speech (",l.a.createElement("i",null,"weather is sunny"),"). They are also very flexible and able to represent nested data structures.")),l.a.createElement(l.a.Fragment,null,l.a.createElement("b",{style:{display:"inline-block",width:"2.2em"}},"dsv")," ",l.a.createElement(c.a,{href:"https://github.com/d3/d3-fetch#dsv"},l.a.createElement(o.a,{name:"arrow",size:"s",direction:"ne"})),l.a.createElement("p",null,l.a.createElement(c.a,{href:""},"DSV"),' (delimiter-separated values) is a file format that mimics a classic table. The first row of text says what the columns are, and the rest of the lines are "row"s of data.'),l.a.createElement(m.a,{size:"s"},"date, weather\n2018-10-10, cloudy\n2018-10-11, sunny"),l.a.createElement("p",null,"Each column is separated by a specific ",l.a.createElement("b",null,"delimiter"),"."),l.a.createElement("p",null,"D3 allows you to specify the ",l.a.createElement("b",null,"delimiter"),", but also has specific methods for the two most common types:"),l.a.createElement("p",null,l.a.createElement("b",null,"comma-separated values")," (",l.a.createElement(c.a,{href:"https://github.com/d3/d3-fetch#csv"},"csv"),"), and",l.a.createElement("br",null),l.a.createElement("b",null,"tab-separated values")," (",l.a.createElement(c.a,{href:"https://github.com/d3/d3-fetch#tsv"},"tsv"),")."),l.a.createElement("p",null,"While dsv files might be a bit harder to read, they are much smaller than json files, since they don't repeat the column names -- just compare the two tiny examples above."),l.a.createElement(s.a,null,"In the past, I've needed to convert data between the two formats -- there's a great tool called ",l.a.createElement(c.a,{href:"https://www.csvjson.com/csv2json"},"CSV2JSON")," that might come in handy.")),l.a.createElement(l.a.Fragment,null,l.a.createElement("b",{style:{display:"inline-block",width:"2.2em"}},"misc"),l.a.createElement("p",null,l.a.createElement("b",null,"d3-fetch")," also supports various other formats that you wouldn't store data as: ",l.a.createElement(c.a,{href:"https://github.com/d3/d3-fetch#svg"},l.a.createElement("b",null,"svg")),", ",l.a.createElement(c.a,{href:"https://github.com/d3/d3-fetch#image"},l.a.createElement("b",null,"image")),", ",l.a.createElement(c.a,{href:"https://github.com/d3/d3-fetch#html"},l.a.createElement("b",null,"html")),", and ",l.a.createElement(c.a,{href:"https://github.com/d3/d3-fetch#xml"},l.a.createElement("b",null,"xml"))))]}),l.a.createElement("p",null,"In ",l.a.createElement("b",null,"d3-fetch"),", the methods are just the names of the file format, and they take one parameter: the URL of your file. When you execute one of these methods, they'll respond with a ",l.a.createElement("b",null,"Promise"),", which will resolve with the parsed data ",l.a.createElement(r.Twemoji,{svg:!0,text:":raised_hands:"})),l.a.createElement(s.a,null,"If you're unfamiliar with ",l.a.createElement("b",null,"Promises"),", check out this great video explanation from ",l.a.createElement(c.a,{href:"https://www.youtube.com/watch?v=QO4NXhWo_NM"},"The Coding Train")," or the ",l.a.createElement(c.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises"},"MDN docs"),"."),l.a.createElement("p",null,"For example, to grab the current weather in Oslo, Norway, we can query the ",l.a.createElement(c.a,{href:"https://www.metaweather.com/api/"},"MetaWeather API")," and grab the temperature from the parsed response."),l.a.createElement(s.a,null,"Feel free to copy and run this example in your browser's ",l.a.createElement("b",null,"Dev Tools Console tab"),", or run it by hitting ",l.a.createElement(o.a,{name:"play",size:"s"}),"."),l.a.createElement(m.a,{canEval:!0,fileName:l.a.createElement(l.a.Fragment,null,"In your browser\u2019s Dev Tools ",l.a.createElement("b",null,"Console")," tab"),doWrap:!1},'const url = "https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/862592/"\nd3.json(url)\n  .then(res => {\n    alert(`Current temperature: ${\n      res.consolidated_weather[0].the_temp\n    }\xb0C`)\n  })\n  .catch(() => {\n      alert("Oh no, something horrible happened!")\n  })'),l.a.createElement("p",null,l.a.createElement("b",null,"d3-fetch")," is a really small library - really only 8 files with about 8 lines of code, each. The real heavy-lifting actually happens in another module:"),l.a.createElement(h.ReadMore,{id:"fetch"}),l.a.createElement("h3",null,"d3-dsv"),l.a.createElement("p",null,"One of the nice things about the ",l.a.createElement("b",null,"d3")," API is that it's ",l.a.createElement("i",null,"very")," modular. This allows us to often use its internal logic if we want to."),l.a.createElement("p",null,l.a.createElement(c.a,{href:"https://github.com/d3/d3-dsv"},l.a.createElement("b",null,"d3-dsv"))," has many methods for converting between Javascript objects and ",l.a.createElement("b",null,"dsv")," format. It also has some command-line utilities for converting between ",l.a.createElement("b",null,"JSON"),", ",l.a.createElement("b",null,"dsv"),", and ",l.a.createElement("b",null,"dsv with different delimiters"),"."),l.a.createElement(h.ReadMore,{id:"dsv"}))}},617:function(e,t,a){"use strict";var n=a(6),l=a(34),r=a(0),s=a.n(r),c=a(33),o=a(147);a(129),a(619);t.a=function(e){var t=e.trigger,a=e.triggerExpandText,i=(e.doHideIfCollapsed,e.className),m=e.children,h=Object(l.a)(e,["trigger","triggerExpandText","doHideIfCollapsed","className","children"]),d=Object(r.useState)(!1),u=Object(n.a)(d,2),p=u[0],E=u[1],f=Object(r.useRef)();return s.a.createElement("details",Object.assign({className:"Expandy Expandy--is-".concat(p?"expanded":"collapsed"," ").concat(i)},h,{ref:f,onToggle:function(e){var t=e.target.open;E(t)}}),s.a.createElement("summary",null,s.a.createElement("div",{className:"Expandy__trigger button-no-appearance"},s.a.createElement("div",{className:"Expandy__trigger__text"},s.a.createElement("b",null,t),s.a.createElement("div",{className:"Expandy__trigger__info"},a||"tap me ".concat(p?"to hide":"for more"," details"))),s.a.createElement("div",{className:"Expandy__trigger__mark"},"\u1f30")),s.a.createElement(o.a,{className:"Expandy__toggle",contents:s.a.createElement("button",{className:"button-no-appearance"},p?"Collapse me":"Expand me")},s.a.createElement("div",{className:"Expandy__toggle__arrow Expandy__toggle__arrow--up"},s.a.createElement(c.a,{name:"arrow",direction:"n",size:"s"})),s.a.createElement("div",{className:"Expandy__toggle__arrow Expandy__toggle__arrow--down"},s.a.createElement(c.a,{name:"arrow",direction:"s",size:"s"})))),s.a.createElement("div",{className:"Expandy__contents"},m))}},619:function(e,t,a){}}]);
//# sourceMappingURL=75.19cb2ee7.chunk.js.map