{"version":3,"sources":["../node_modules/react-zdog/dist/index.js","../node_modules/zdog/js/index.js","../node_modules/zdog/js/illustration.js","../node_modules/zdog/js/rounded-rect.js","../node_modules/zdog/js/polygon.js","../node_modules/zdog/js/hemisphere.js","../node_modules/zdog/js/cylinder.js","../node_modules/zdog/js/cone.js","../node_modules/zdog/js/box.js","../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","../node_modules/zdog/js/boilerplate.js","../node_modules/zdog/js/anchor.js","../node_modules/zdog/js/shape.js","../node_modules/zdog/js/vector.js","../node_modules/zdog/js/path-command.js","../node_modules/zdog/js/ellipse.js","../node_modules/zdog/js/canvas-renderer.js","../node_modules/zdog/js/svg-renderer.js","../node_modules/zdog/js/dragger.js","../node_modules/zdog/js/group.js","../node_modules/zdog/js/rect.js"],"names":["__webpack_require__","d","__webpack_exports__","Anchor","Ellipse","Hemisphere","Illustration","Shape","useRender","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","zdog__WEBPACK_IMPORTED_MODULE_2__","zdog__WEBPACK_IMPORTED_MODULE_2___default","n","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","resize_observer_polyfill__WEBPACK_IMPORTED_MODULE_4__","stateContext","a","createContext","parentContext","globalEffects","applyProps","instance","newProps","extend","fn","deps","state","Object","unsubscribe","current","subscribe","useZdogPrimitive","primitive","children","props","ref","parent","node","addChild","illu","updateGraph","removeChild","updateFlatGraph","createElement","Provider","value","memo","_ref2","style","_ref2$element","resize","element","Element","dragRotate","rest","canvas","_useMeasure","_useState","left","top","width","height","bounds","set","ro","_ref","entry","contentRect","observe","disconnect","useMeasure","bind","size","_useZdogPrimitive","result","scene","undefined","subscribers","push","filter","s","setSize","frame","active","render","t","_state$current","forEach","updateRenderGraph","requestAnimationFrame","cancelAnimationFrame","position","overflow","display","createZdog","forwardRef","_ref3","Group","Rect","RoundedRect","Polygon","Cylinder","Cone","Box","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","Zdog","CanvasRenderer","SvgRenderer","Vector","Dragger","PathCommand","module","exports","apply","this","utils","noop","TAU","subclass","centered","zoom","onPrerender","onDragStart","onDragMove","onDragEnd","onResize","prototype","create","options","call","setElement","setDragRotate","setResize","getQueryElement","Error","nodeName","toLowerCase","setCanvas","setSvg","Math","round","isCanvas","setSizeCanvas","isSvg","setSizeSvg","resizeListener","onWindowResize","window","addEventListener","removeEventListener","setMeasuredSize","innerWidth","innerHeight","rect","getBoundingClientRect","renderGraph","item","renderGraphCanvas","renderGraphSvg","ctx","getContext","pixelRatio","devicePixelRatio","canvasWidth","canvasHeight","prerenderCanvas","postrenderCanvas","lineCap","lineJoin","clearRect","save","centerX","centerY","translate","scale","restore","getAttribute","viewWidth","viewHeight","viewX","viewY","setAttribute","removeAttribute","firstChild","empty","bindDrag","dragStart","dragStartRX","rotate","x","dragStartRY","y","arguments","dragMove","event","pointer","moveX","pageX","dragStartX","moveY","pageY","dragStartY","displaySize","min","moveRY","moveRX","cornerRadius","closed","setPath","xA","yA","shortSide","xB","yB","path","arc","sides","radius","i","theta","cos","sin","fill","apex","addTo","z","diameter","renderCentroid","updateSortValue","renderOrigin","lerp","sortValue","renderer","renderDome","visible","elem","getDomeRenderElement","contourAngle","atan2","renderNormal","domeRadius","magnitude","startAngle","endAngle","beginPath","domeSvgElement","stroke","color","getLineWidth","end","document","createElementNS","CylinderGroup","updateSort","pathCommands","renderCylinderSurface","getRenderElement","frontBase","rearBase","strokeWidth","renderPoints","renderPath","svgElement","copyGraph","length","frontFace","group","baseZ","baseColor","backface","copy","property","_prop","defineProperty","get","renderApex","tangentA","tangentB","surfacePathCommands","renderConeSurface","subtract","apexDistance","magnitude2d","normalDistance","eccenAngle","acos","eccen","apexAngle","projectLength","projectAngle","rotateZ","add","setSurfaceRenderPoint","getSurfaceRenderElement","surfaceSvgElement","index","point","BoxRect","faceNames","boxDefaults","defaults","faceName","depth","updatePath","_faceName","setFace","rectProperty","getFaceOptions","setOptions","rearFace","leftFace","rightFace","topFace","bottomFace","isFaceColor","global","MapShim","Map","getIndex","arr","key","some","class_1","__entries__","enumerable","configurable","delete","entries","splice","has","clear","callback","_i","_a","isBrowser","global$1","self","Function","requestAnimationFrame$1","setTimeout","Date","now","trailingTimeout","REFRESH_DELAY","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","gatherActive","hasActive","broadcastActive","attributes","childList","characterData","subtree","_b","propertyName","getInstance","instance_","defineConfigurable","target","keys","writable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","reduce","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","positions_1","getPaddings","horizPad","right","vertPad","bottom","boxSizing","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","broadcastRect","ResizeObserverEntry","rectInit","Constr","DOMRectReadOnly","createReadOnlyRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","observations","unobserve","clearActive","_this","observation","map","WeakMap","ResizeObserver","method","PI","b","prop","alpha","modulo","num","div","powerMultipliers","2","3","4","5","easeInOut","power","isFirstHalf","max","slope","curve","onePoint","constructor","multiply","origin","optionKeys","concat","shape","remove","update","reset","child","transform","translation","rotation","flatGraph","sort","shapeSorter","_flatGraph","graph","getFlatGraph","addChildFlatGraph","childFlatGraph","Array","svg","itemOptions","ItemClass","clone","normalizeRotate","getSubclass","Super","Item","slice","front","renderFront","actionNames","updatePathCommands","previousPoint","pathPart","points","isLineOrMove","isPointsArray","isArray","command","endRenderPoint","pointCount","firstPoint","lastPoint","isSame","sortValueTotal","isFacingBack","isDot","renderCanvasDot","lineWidth","fillStyle","getRenderColor","isClosed","rotateProperty","vec","angle","propA","propB","getMagnitudeSqrt","sum","sqrt","pos","write","rotateY","rotateX","mapVectorPoint","mapNewVector","controlPoints","renderPoint","move","line","bezier","cp0","cp1","prev","corner","quarters","begin","moveTo","lineTo","bezierCurveTo","closePath","isStroke","strokeStyle","isFill","getPointString","pathValue","fillColor","appendChild","hasWindow","downEvent","moveEvent","upEvent","PointerEvent","startElement","touchAction","querySelector","handleEvent","type","onmousedown","onpointerdown","ontouchstart","changedTouches","preventDefault","ontouchmove","onmousemove","onpointermove","onmouseup","onpointerup","ontouchend","dragEnd"],"mappings":"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","file":"static/js/28.c38a8ea3.chunk.js","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport Zdog from 'zdog';\nimport React, { useContext, useEffect, useRef, useLayoutEffect, useState, useImperativeHandle } from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\nvar stateContext = React.createContext();\nvar parentContext = React.createContext();\nvar globalEffects = [];\n\nfunction addEffect(callback) {\n  globalEffects.push(callback);\n}\n\nfunction invalidate() {// TODO: render loop has to be able to render frames on demand\n}\n\nfunction applyProps(instance, newProps) {\n  Zdog.extend(instance, newProps);\n}\n\nfunction useMeasure() {\n  var ref = useRef();\n\n  var _useState = useState({\n    left: 0,\n    top: 0,\n    width: 0,\n    height: 0\n  }),\n      bounds = _useState[0],\n      set = _useState[1];\n\n  var _useState2 = useState(function () {\n    return new ResizeObserver(function (_ref) {\n      var entry = _ref[0];\n      return set(entry.contentRect);\n    });\n  }),\n      ro = _useState2[0];\n\n  useEffect(function () {\n    if (ref.current) ro.observe(ref.current);\n    return function () {\n      return ro.disconnect();\n    };\n  }, [ref.current]);\n  return [{\n    ref: ref\n  }, bounds];\n}\n\nfunction useRender(fn, deps) {\n  if (deps === void 0) {\n    deps = [];\n  }\n\n  var state = useContext(stateContext);\n  useEffect(function () {\n    // Subscribe to the render-loop\n    var unsubscribe = state.current.subscribe(fn); // Call subscription off on unmount\n\n    return function () {\n      return unsubscribe();\n    };\n  }, deps);\n}\n\nfunction useZdog() {\n  var state = useContext(stateContext);\n  return state.current;\n}\n\nfunction useZdogPrimitive(primitive, children, props, ref) {\n  var state = useContext(stateContext);\n  var parent = useContext(parentContext);\n\n  var _useState3 = useState(function () {\n    return new primitive(props);\n  }),\n      node = _useState3[0];\n\n  useImperativeHandle(ref, function () {\n    return node;\n  });\n  useLayoutEffect(function () {\n    return void applyProps(node, props);\n  }, [props]);\n  useLayoutEffect(function () {\n    if (parent) {\n      parent.addChild(node);\n      state.current.illu.updateGraph();\n      return function () {\n        parent.removeChild(node);\n        parent.updateFlatGraph();\n        state.current.illu.updateGraph();\n      };\n    }\n  }, [parent]);\n  return [React.createElement(parentContext.Provider, {\n    value: node,\n    children: children\n  }), node];\n}\n\nvar Illustration = React.memo(function (_ref2) {\n  var children = _ref2.children,\n      style = _ref2.style,\n      resize = _ref2.resize,\n      _ref2$element = _ref2.element,\n      Element = _ref2$element === void 0 ? 'svg' : _ref2$element,\n      dragRotate = _ref2.dragRotate,\n      rest = _objectWithoutPropertiesLoose(_ref2, [\"children\", \"style\", \"resize\", \"element\", \"dragRotate\"]);\n\n  var canvas = useRef();\n\n  var _useMeasure = useMeasure(),\n      bind = _useMeasure[0],\n      size = _useMeasure[1];\n\n  var _useZdogPrimitive = useZdogPrimitive(Zdog.Anchor, children),\n      result = _useZdogPrimitive[0],\n      scene = _useZdogPrimitive[1];\n\n  var state = useRef({\n    scene: scene,\n    illu: undefined,\n    size: {},\n    subscribers: [],\n    subscribe: function subscribe(fn) {\n      state.current.subscribers.push(fn);\n      return function () {\n        return state.current.subscribers = state.current.subscribers.filter(function (s) {\n          return s !== fn;\n        });\n      };\n    }\n  });\n  useEffect(function () {\n    state.current.size = size;\n    if (state.current.illu) state.current.illu.setSize(size.width, size.height);\n  }, [size]);\n  useEffect(function () {\n    state.current.illu = new Zdog.Illustration(_extends({\n      element: canvas.current,\n      dragRotate: dragRotate\n    }, rest));\n    state.current.illu.addChild(scene);\n    state.current.illu.updateGraph();\n    var frame;\n    var active = true;\n\n    function render(t) {\n      var _state$current = state.current,\n          size = _state$current.size,\n          subscribers = _state$current.subscribers;\n\n      if (size.width && size.height) {\n        // Run global effects\n        globalEffects.forEach(function (fn) {\n          return fn(t);\n        }); // Run local effects\n\n        subscribers.forEach(function (fn) {\n          return fn(t);\n        }); // Render scene\n\n        state.current.illu.updateRenderGraph();\n      }\n\n      if (active) frame = requestAnimationFrame(render);\n    } // Start render loop\n\n\n    render();\n    return function () {\n      // Take no chances, the loop has got to stop if the component unmounts\n      active = false;\n      cancelAnimationFrame(frame);\n    };\n  }, []); // Takes care of updating the main illustration\n\n  useLayoutEffect(function () {\n    return void (state.current.illu && applyProps(state.current.illu, rest));\n  }, [rest]);\n  return React.createElement(\"div\", _extends({\n    ref: bind.ref\n  }, rest, {\n    style: _extends({\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden'\n    }, style)\n  }), React.createElement(Element, {\n    ref: canvas,\n    style: {\n      display: 'block'\n    },\n    width: size.width,\n    height: size.height\n  }), state.current.illu && React.createElement(stateContext.Provider, {\n    value: state,\n    children: result\n  }));\n});\n\nvar createZdog = function createZdog(primitive) {\n  return React.forwardRef(function (_ref3, ref) {\n    var children = _ref3.children,\n        rest = _objectWithoutPropertiesLoose(_ref3, [\"children\"]);\n\n    return useZdogPrimitive(primitive, children, rest, ref)[0];\n  });\n};\n\nvar Anchor = createZdog(Zdog.Anchor);\nvar Shape = createZdog(Zdog.Shape);\nvar Group = createZdog(Zdog.Group);\nvar Rect = createZdog(Zdog.Rect);\nvar RoundedRect = createZdog(Zdog.RoundedRect);\nvar Ellipse = createZdog(Zdog.Ellipse);\nvar Polygon = createZdog(Zdog.Polygon);\nvar Hemisphere = createZdog(Zdog.Hemisphere);\nvar Cylinder = createZdog(Zdog.Cylinder);\nvar Cone = createZdog(Zdog.Cone);\nvar Box = createZdog(Zdog.Box);\nexport { Anchor, Box, Cone, Cylinder, Ellipse, Group, Hemisphere, Illustration, Polygon, Rect, RoundedRect, Shape, addEffect, applyProps, invalidate, useRender, useZdog };","/**\n * Index\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./boilerplate'), require('./canvas-renderer'), require('./svg-renderer'), require('./vector'), require('./anchor'), require('./dragger'), require('./illustration'), require('./path-command'), require('./shape'), require('./group'), require('./rect'), require('./rounded-rect'), require('./ellipse'), require('./polygon'), require('./hemisphere'), require('./cylinder'), require('./cone'), require('./box'));\n  } else if (typeof define == 'function' && define.amd) {\n    /* globals define */\n    // AMD\n    define('zdog', [], root.Zdog);\n  }\n})(this, function factory(Zdog, CanvasRenderer, SvgRenderer, Vector, Anchor, Dragger, Illustration, PathCommand, Shape, Group, Rect, RoundedRect, Ellipse, Polygon, Hemisphere, Cylinder, Cone, Box) {\n  Zdog.CanvasRenderer = CanvasRenderer;\n  Zdog.SvgRenderer = SvgRenderer;\n  Zdog.Vector = Vector;\n  Zdog.Anchor = Anchor;\n  Zdog.Dragger = Dragger;\n  Zdog.Illustration = Illustration;\n  Zdog.PathCommand = PathCommand;\n  Zdog.Shape = Shape;\n  Zdog.Group = Group;\n  Zdog.Rect = Rect;\n  Zdog.RoundedRect = RoundedRect;\n  Zdog.Ellipse = Ellipse;\n  Zdog.Polygon = Polygon;\n  Zdog.Hemisphere = Hemisphere;\n  Zdog.Cylinder = Cylinder;\n  Zdog.Cone = Cone;\n  Zdog.Box = Box;\n  return Zdog;\n});","/**\n * Illustration\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./boilerplate'), require('./anchor'), require('./dragger'));\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Illustration = factory(Zdog, Zdog.Anchor, Zdog.Dragger);\n  }\n})(this, function factory(utils, Anchor, Dragger) {\n  function noop() {}\n\n  var TAU = utils.TAU;\n  var Illustration = Anchor.subclass({\n    element: undefined,\n    centered: true,\n    zoom: 1,\n    dragRotate: false,\n    resize: false,\n    onPrerender: noop,\n    onDragStart: noop,\n    onDragMove: noop,\n    onDragEnd: noop,\n    onResize: noop\n  });\n  utils.extend(Illustration.prototype, Dragger.prototype);\n\n  Illustration.prototype.create = function (options) {\n    Anchor.prototype.create.call(this, options);\n    Dragger.prototype.create.call(this, options);\n    this.setElement(this.element);\n    this.setDragRotate(this.dragRotate);\n    this.setResize(this.resize);\n  };\n\n  Illustration.prototype.setElement = function (element) {\n    element = this.getQueryElement(element);\n\n    if (!element) {\n      throw new Error('Zdog.Illustration element required. Set to ' + element);\n    }\n\n    var nodeName = element.nodeName.toLowerCase();\n\n    if (nodeName == 'canvas') {\n      this.setCanvas(element);\n    } else if (nodeName == 'svg') {\n      this.setSvg(element);\n    }\n  };\n\n  Illustration.prototype.setSize = function (width, height) {\n    width = Math.round(width);\n    height = Math.round(height);\n\n    if (this.isCanvas) {\n      this.setSizeCanvas(width, height);\n    } else if (this.isSvg) {\n      this.setSizeSvg(width, height);\n    }\n  };\n\n  Illustration.prototype.setResize = function (resize) {\n    this.resize = resize; // create resize event listener\n\n    if (!this.resizeListener) {\n      this.resizeListener = this.onWindowResize.bind(this);\n    } // add/remove event listener\n\n\n    if (resize) {\n      window.addEventListener('resize', this.resizeListener);\n      this.onWindowResize();\n    } else {\n      window.removeEventListener('resize', this.resizeListener);\n    }\n  }; // TODO debounce this?\n\n\n  Illustration.prototype.onWindowResize = function () {\n    this.setMeasuredSize();\n    this.onResize(this.width, this.height);\n  };\n\n  Illustration.prototype.setMeasuredSize = function () {\n    var width, height;\n    var isFullscreen = this.resize == 'fullscreen';\n\n    if (isFullscreen) {\n      width = window.innerWidth;\n      height = window.innerHeight;\n    } else {\n      var rect = this.element.getBoundingClientRect();\n      width = rect.width;\n      height = rect.height;\n    }\n\n    this.setSize(width, height);\n  }; // ----- render ----- //\n\n\n  Illustration.prototype.renderGraph = function (item) {\n    if (this.isCanvas) {\n      this.renderGraphCanvas(item);\n    } else if (this.isSvg) {\n      this.renderGraphSvg(item);\n    }\n  }; // combo method\n\n\n  Illustration.prototype.updateRenderGraph = function (item) {\n    this.updateGraph();\n    this.renderGraph(item);\n  }; // ----- canvas ----- //\n\n\n  Illustration.prototype.setCanvas = function (element) {\n    this.element = element;\n    this.isCanvas = true; // update related properties\n\n    this.ctx = this.element.getContext('2d'); // set initial size\n\n    this.setSizeCanvas(element.width, element.height);\n  };\n\n  Illustration.prototype.setSizeCanvas = function (width, height) {\n    this.width = width;\n    this.height = height; // up-rez for hi-DPI devices\n\n    var pixelRatio = this.pixelRatio = window.devicePixelRatio || 1;\n    this.element.width = this.canvasWidth = width * pixelRatio;\n    this.element.height = this.canvasHeight = height * pixelRatio;\n    var needsHighPixelRatioSizing = pixelRatio > 1 && !this.resize;\n\n    if (needsHighPixelRatioSizing) {\n      this.element.style.width = width + 'px';\n      this.element.style.height = height + 'px';\n    }\n  };\n\n  Illustration.prototype.renderGraphCanvas = function (item) {\n    item = item || this;\n    this.prerenderCanvas();\n    Anchor.prototype.renderGraphCanvas.call(item, this.ctx);\n    this.postrenderCanvas();\n  };\n\n  Illustration.prototype.prerenderCanvas = function () {\n    var ctx = this.ctx;\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n    ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n    ctx.save();\n\n    if (this.centered) {\n      var centerX = this.width / 2 * this.pixelRatio;\n      var centerY = this.height / 2 * this.pixelRatio;\n      ctx.translate(centerX, centerY);\n    }\n\n    var scale = this.pixelRatio * this.zoom;\n    ctx.scale(scale, scale);\n    this.onPrerender(ctx);\n  };\n\n  Illustration.prototype.postrenderCanvas = function () {\n    this.ctx.restore();\n  }; // ----- svg ----- //\n\n\n  Illustration.prototype.setSvg = function (element) {\n    this.element = element;\n    this.isSvg = true;\n    this.pixelRatio = 1; // set initial size from width & height attributes\n\n    var width = element.getAttribute('width');\n    var height = element.getAttribute('height');\n    this.setSizeSvg(width, height);\n  };\n\n  Illustration.prototype.setSizeSvg = function (width, height) {\n    this.width = width;\n    this.height = height;\n    var viewWidth = width / this.zoom;\n    var viewHeight = height / this.zoom;\n    var viewX = this.centered ? -viewWidth / 2 : 0;\n    var viewY = this.centered ? -viewHeight / 2 : 0;\n    this.element.setAttribute('viewBox', viewX + ' ' + viewY + ' ' + viewWidth + ' ' + viewHeight);\n\n    if (this.resize) {\n      // remove size attributes, let size be determined by viewbox\n      this.element.removeAttribute('width');\n      this.element.removeAttribute('height');\n    } else {\n      this.element.setAttribute('width', width);\n      this.element.setAttribute('height', height);\n    }\n  };\n\n  Illustration.prototype.renderGraphSvg = function (item) {\n    item = item || this;\n    empty(this.element);\n    this.onPrerender(this.element);\n    Anchor.prototype.renderGraphSvg.call(item, this.element);\n  };\n\n  function empty(element) {\n    while (element.firstChild) {\n      element.removeChild(element.firstChild);\n    }\n  } // ----- drag ----- //\n\n\n  Illustration.prototype.setDragRotate = function (item) {\n    if (!item) {\n      return;\n    } else if (item === true) {\n      /* eslint consistent-this: \"off\" */\n      item = this;\n    }\n\n    this.dragRotate = item;\n    this.bindDrag(this.element);\n  };\n\n  Illustration.prototype.dragStart = function ()\n  /* event, pointer */\n  {\n    this.dragStartRX = this.dragRotate.rotate.x;\n    this.dragStartRY = this.dragRotate.rotate.y;\n    Dragger.prototype.dragStart.apply(this, arguments);\n  };\n\n  Illustration.prototype.dragMove = function (event, pointer) {\n    var moveX = pointer.pageX - this.dragStartX;\n    var moveY = pointer.pageY - this.dragStartY;\n    var displaySize = Math.min(this.width, this.height);\n    var moveRY = moveX / displaySize * TAU;\n    var moveRX = moveY / displaySize * TAU;\n    this.dragRotate.rotate.x = this.dragStartRX - moveRX;\n    this.dragRotate.rotate.y = this.dragStartRY - moveRY;\n    Dragger.prototype.dragMove.apply(this, arguments);\n  };\n\n  return Illustration;\n});","/**\n * RoundedRect\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./shape'));\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.RoundedRect = factory(Zdog.Shape);\n  }\n})(this, function factory(Shape) {\n  var RoundedRect = Shape.subclass({\n    width: 1,\n    height: 1,\n    cornerRadius: 0.25,\n    closed: false\n  });\n\n  RoundedRect.prototype.setPath = function () {\n    /* eslint\n       id-length: [ \"error\", { \"min\": 2, \"exceptions\": [ \"x\", \"y\" ] }],\n       key-spacing: \"off\" */\n    var xA = this.width / 2;\n    var yA = this.height / 2;\n    var shortSide = Math.min(xA, yA);\n    var cornerRadius = Math.min(this.cornerRadius, shortSide);\n    var xB = xA - cornerRadius;\n    var yB = yA - cornerRadius;\n    var path = [// top right corner\n    {\n      x: xB,\n      y: -yA\n    }, {\n      arc: [{\n        x: xA,\n        y: -yA\n      }, {\n        x: xA,\n        y: -yB\n      }]\n    }]; // bottom right corner\n\n    if (yB) {\n      path.push({\n        x: xA,\n        y: yB\n      });\n    }\n\n    path.push({\n      arc: [{\n        x: xA,\n        y: yA\n      }, {\n        x: xB,\n        y: yA\n      }]\n    }); // bottom left corner\n\n    if (xB) {\n      path.push({\n        x: -xB,\n        y: yA\n      });\n    }\n\n    path.push({\n      arc: [{\n        x: -xA,\n        y: yA\n      }, {\n        x: -xA,\n        y: yB\n      }]\n    }); // top left corner\n\n    if (yB) {\n      path.push({\n        x: -xA,\n        y: -yB\n      });\n    }\n\n    path.push({\n      arc: [{\n        x: -xA,\n        y: -yA\n      }, {\n        x: -xB,\n        y: -yA\n      }]\n    }); // back to top right corner\n\n    if (xB) {\n      path.push({\n        x: xB,\n        y: -yA\n      });\n    }\n\n    this.path = path;\n  };\n\n  return RoundedRect;\n});","/**\n * Shape\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./boilerplate'), require('./shape'));\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Polygon = factory(Zdog, Zdog.Shape);\n  }\n})(this, function factory(utils, Shape) {\n  var Polygon = Shape.subclass({\n    sides: 3,\n    radius: 0.5\n  });\n  var TAU = utils.TAU;\n\n  Polygon.prototype.setPath = function () {\n    this.path = [];\n\n    for (var i = 0; i < this.sides; i++) {\n      var theta = i / this.sides * TAU - TAU / 4;\n      var x = Math.cos(theta) * this.radius;\n      var y = Math.sin(theta) * this.radius;\n      this.path.push({\n        x: x,\n        y: y\n      });\n    }\n  };\n\n  return Polygon;\n});","/**\n * Hemisphere composite shape\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./boilerplate'), require('./vector'), require('./anchor'), require('./ellipse'));\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Hemisphere = factory(Zdog, Zdog.Vector, Zdog.Anchor, Zdog.Ellipse);\n  }\n})(this, function factory(utils, Vector, Anchor, Ellipse) {\n  var Hemisphere = Ellipse.subclass({\n    fill: true\n  });\n  var TAU = utils.TAU;\n\n  Hemisphere.prototype.create = function ()\n  /* options */\n  {\n    // call super\n    Ellipse.prototype.create.apply(this, arguments); // composite shape, create child shapes\n\n    this.apex = new Anchor({\n      addTo: this,\n      translate: {\n        z: this.diameter / 2\n      }\n    }); // vector used for calculation\n\n    this.renderCentroid = new Vector();\n  };\n\n  Hemisphere.prototype.updateSortValue = function () {\n    // centroid of hemisphere is 3/8 between origin and apex\n    this.renderCentroid.set(this.renderOrigin).lerp(this.apex.renderOrigin, 3 / 8);\n    this.sortValue = this.renderCentroid.z;\n  };\n\n  Hemisphere.prototype.render = function (ctx, renderer) {\n    this.renderDome(ctx, renderer); // call super\n\n    Ellipse.prototype.render.apply(this, arguments);\n  };\n\n  Hemisphere.prototype.renderDome = function (ctx, renderer) {\n    if (!this.visible) {\n      return;\n    }\n\n    var elem = this.getDomeRenderElement(ctx, renderer);\n    var contourAngle = Math.atan2(this.renderNormal.y, this.renderNormal.x);\n    var domeRadius = this.diameter / 2 * this.renderNormal.magnitude();\n    var x = this.renderOrigin.x;\n    var y = this.renderOrigin.y;\n\n    if (renderer.isCanvas) {\n      // canvas\n      var startAngle = contourAngle + TAU / 4;\n      var endAngle = contourAngle - TAU / 4;\n      ctx.beginPath();\n      ctx.arc(x, y, domeRadius, startAngle, endAngle);\n    } else if (renderer.isSvg) {\n      // svg\n      contourAngle = (contourAngle - TAU / 4) / TAU * 360;\n      this.domeSvgElement.setAttribute('d', 'M ' + -domeRadius + ',0 A ' + domeRadius + ',' + domeRadius + ' 0 0 1 ' + domeRadius + ',0');\n      this.domeSvgElement.setAttribute('transform', 'translate(' + x + ',' + y + ' ) rotate(' + contourAngle + ')');\n    }\n\n    renderer.stroke(ctx, elem, this.stroke, this.color, this.getLineWidth());\n    renderer.fill(ctx, elem, this.fill, this.color);\n    renderer.end(ctx, elem);\n  };\n\n  var svgURI = 'http://www.w3.org/2000/svg';\n\n  Hemisphere.prototype.getDomeRenderElement = function (ctx, renderer) {\n    if (!renderer.isSvg) {\n      return;\n    }\n\n    if (!this.domeSvgElement) {\n      // create svgElement\n      this.domeSvgElement = document.createElementNS(svgURI, 'path');\n      this.domeSvgElement.setAttribute('stroke-linecap', 'round');\n      this.domeSvgElement.setAttribute('stroke-linejoin', 'round');\n    }\n\n    return this.domeSvgElement;\n  };\n\n  return Hemisphere;\n});","/**\n * Cylinder composite shape\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./boilerplate'), require('./path-command'), require('./shape'), require('./group'), require('./ellipse'));\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Cylinder = factory(Zdog, Zdog.PathCommand, Zdog.Shape, Zdog.Group, Zdog.Ellipse);\n  }\n})(this, function factory(utils, PathCommand, Shape, Group, Ellipse) {\n  function noop() {} // ----- CylinderGroup ----- //\n\n\n  var CylinderGroup = Group.subclass({\n    color: '#333',\n    updateSort: true\n  });\n\n  CylinderGroup.prototype.create = function () {\n    Group.prototype.create.apply(this, arguments);\n    this.pathCommands = [new PathCommand('move', [{}]), new PathCommand('line', [{}])];\n  };\n\n  CylinderGroup.prototype.render = function (ctx, renderer) {\n    this.renderCylinderSurface(ctx, renderer);\n    Group.prototype.render.apply(this, arguments);\n  };\n\n  CylinderGroup.prototype.renderCylinderSurface = function (ctx, renderer) {\n    if (!this.visible) {\n      return;\n    } // render cylinder surface\n\n\n    var elem = this.getRenderElement(ctx, renderer);\n    var frontBase = this.frontBase;\n    var rearBase = this.rearBase;\n    var scale = frontBase.renderNormal.magnitude();\n    var strokeWidth = frontBase.diameter * scale + frontBase.getLineWidth(); // set path command render points\n\n    this.pathCommands[0].renderPoints[0].set(frontBase.renderOrigin);\n    this.pathCommands[1].renderPoints[0].set(rearBase.renderOrigin);\n\n    if (renderer.isCanvas) {\n      ctx.lineCap = 'butt'; // nice\n    }\n\n    renderer.renderPath(ctx, elem, this.pathCommands);\n    renderer.stroke(ctx, elem, true, this.color, strokeWidth);\n    renderer.end(ctx, elem);\n\n    if (renderer.isCanvas) {\n      ctx.lineCap = 'round'; // reset\n    }\n  };\n\n  var svgURI = 'http://www.w3.org/2000/svg';\n\n  CylinderGroup.prototype.getRenderElement = function (ctx, renderer) {\n    if (!renderer.isSvg) {\n      return;\n    }\n\n    if (!this.svgElement) {\n      // create svgElement\n      this.svgElement = document.createElementNS(svgURI, 'path');\n    }\n\n    return this.svgElement;\n  }; // prevent double-creation in parent.copyGraph()\n  // only create in Cylinder.create()\n\n\n  CylinderGroup.prototype.copyGraph = noop; // ----- CylinderEllipse ----- //\n\n  var CylinderEllipse = Ellipse.subclass();\n  CylinderEllipse.prototype.copyGraph = noop; // ----- Cylinder ----- //\n\n  var Cylinder = Shape.subclass({\n    diameter: 1,\n    length: 1,\n    frontFace: undefined,\n    fill: true\n  });\n  var TAU = utils.TAU;\n\n  Cylinder.prototype.create = function ()\n  /* options */\n  {\n    // call super\n    Shape.prototype.create.apply(this, arguments); // composite shape, create child shapes\n    // CylinderGroup to render cylinder surface then bases\n\n    this.group = new CylinderGroup({\n      addTo: this,\n      color: this.color,\n      visible: this.visible\n    });\n    var baseZ = this.length / 2;\n    var baseColor = this.backface || true; // front outside base\n\n    this.frontBase = this.group.frontBase = new Ellipse({\n      addTo: this.group,\n      diameter: this.diameter,\n      translate: {\n        z: baseZ\n      },\n      rotate: {\n        y: TAU / 2\n      },\n      color: this.color,\n      stroke: this.stroke,\n      fill: this.fill,\n      backface: this.frontFace || baseColor,\n      visible: this.visible\n    }); // back outside base\n\n    this.rearBase = this.group.rearBase = this.frontBase.copy({\n      translate: {\n        z: -baseZ\n      },\n      rotate: {\n        y: 0\n      },\n      backface: baseColor\n    });\n  }; // Cylinder shape does not render anything\n\n\n  Cylinder.prototype.render = function () {}; // ----- set child properties ----- //\n\n\n  var childProperties = ['stroke', 'fill', 'color', 'visible'];\n  childProperties.forEach(function (property) {\n    // use proxy property for custom getter & setter\n    var _prop = '_' + property;\n\n    Object.defineProperty(Cylinder.prototype, property, {\n      get: function get() {\n        return this[_prop];\n      },\n      set: function set(value) {\n        this[_prop] = value; // set property on children\n\n        if (this.frontBase) {\n          this.frontBase[property] = value;\n          this.rearBase[property] = value;\n          this.group[property] = value;\n        }\n      }\n    });\n  }); // TODO child property setter for backface, frontBaseColor, & rearBaseColor\n\n  return Cylinder;\n});","/**\n * Cone composite shape\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./boilerplate'), require('./vector'), require('./path-command'), require('./anchor'), require('./ellipse'));\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Cone = factory(Zdog, Zdog.Vector, Zdog.PathCommand, Zdog.Anchor, Zdog.Ellipse);\n  }\n})(this, function factory(utils, Vector, PathCommand, Anchor, Ellipse) {\n  var Cone = Ellipse.subclass({\n    length: 1,\n    fill: true\n  });\n  var TAU = utils.TAU;\n\n  Cone.prototype.create = function ()\n  /* options */\n  {\n    // call super\n    Ellipse.prototype.create.apply(this, arguments); // composite shape, create child shapes\n\n    this.apex = new Anchor({\n      addTo: this,\n      translate: {\n        z: this.length\n      }\n    }); // vectors used for calculation\n\n    this.renderApex = new Vector();\n    this.renderCentroid = new Vector();\n    this.tangentA = new Vector();\n    this.tangentB = new Vector();\n    this.surfacePathCommands = [new PathCommand('move', [{}]), // points set in renderConeSurface\n    new PathCommand('line', [{}]), new PathCommand('line', [{}])];\n  };\n\n  Cone.prototype.updateSortValue = function () {\n    // center of cone is one third of its length\n    this.renderCentroid.set(this.renderOrigin).lerp(this.apex.renderOrigin, 1 / 3);\n    this.sortValue = this.renderCentroid.z;\n  };\n\n  Cone.prototype.render = function (ctx, renderer) {\n    this.renderConeSurface(ctx, renderer);\n    Ellipse.prototype.render.apply(this, arguments);\n  };\n\n  Cone.prototype.renderConeSurface = function (ctx, renderer) {\n    if (!this.visible) {\n      return;\n    }\n\n    this.renderApex.set(this.apex.renderOrigin).subtract(this.renderOrigin);\n    var scale = this.renderNormal.magnitude();\n    var apexDistance = this.renderApex.magnitude2d();\n    var normalDistance = this.renderNormal.magnitude2d(); // eccentricity\n\n    var eccenAngle = Math.acos(normalDistance / scale);\n    var eccen = Math.sin(eccenAngle);\n    var radius = this.diameter / 2 * scale; // does apex extend beyond eclipse of face\n\n    var isApexVisible = radius * eccen < apexDistance;\n\n    if (!isApexVisible) {\n      return;\n    } // update tangents\n\n\n    var apexAngle = Math.atan2(this.renderNormal.y, this.renderNormal.x) + TAU / 2;\n    var projectLength = apexDistance / eccen;\n    var projectAngle = Math.acos(radius / projectLength); // set tangent points\n\n    var tangentA = this.tangentA;\n    var tangentB = this.tangentB;\n    tangentA.x = Math.cos(projectAngle) * radius * eccen;\n    tangentA.y = Math.sin(projectAngle) * radius;\n    tangentB.set(this.tangentA);\n    tangentB.y *= -1;\n    tangentA.rotateZ(apexAngle);\n    tangentB.rotateZ(apexAngle);\n    tangentA.add(this.renderOrigin);\n    tangentB.add(this.renderOrigin);\n    this.setSurfaceRenderPoint(0, tangentA);\n    this.setSurfaceRenderPoint(1, this.apex.renderOrigin);\n    this.setSurfaceRenderPoint(2, tangentB); // render\n\n    var elem = this.getSurfaceRenderElement(ctx, renderer);\n    renderer.renderPath(ctx, elem, this.surfacePathCommands);\n    renderer.stroke(ctx, elem, this.stroke, this.color, this.getLineWidth());\n    renderer.fill(ctx, elem, this.fill, this.color);\n    renderer.end(ctx, elem);\n  };\n\n  var svgURI = 'http://www.w3.org/2000/svg';\n\n  Cone.prototype.getSurfaceRenderElement = function (ctx, renderer) {\n    if (!renderer.isSvg) {\n      return;\n    }\n\n    if (!this.surfaceSvgElement) {\n      // create svgElement\n      this.surfaceSvgElement = document.createElementNS(svgURI, 'path');\n      this.surfaceSvgElement.setAttribute('stroke-linecap', 'round');\n      this.surfaceSvgElement.setAttribute('stroke-linejoin', 'round');\n    }\n\n    return this.surfaceSvgElement;\n  };\n\n  Cone.prototype.setSurfaceRenderPoint = function (index, point) {\n    var renderPoint = this.surfacePathCommands[index].renderPoints[0];\n    renderPoint.set(point);\n  };\n\n  return Cone;\n});","/**\n * Box composite shape\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./boilerplate'), require('./anchor'), require('./shape'), require('./rect'));\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Box = factory(Zdog, Zdog.Anchor, Zdog.Shape, Zdog.Rect);\n  }\n})(this, function factory(utils, Anchor, Shape, Rect) {\n  // ----- BoxRect ----- //\n  var BoxRect = Rect.subclass(); // prevent double-creation in parent.copyGraph()\n  // only create in Box.create()\n\n  BoxRect.prototype.copyGraph = function () {}; // ----- Box ----- //\n\n\n  var TAU = utils.TAU;\n  var faceNames = ['frontFace', 'rearFace', 'leftFace', 'rightFace', 'topFace', 'bottomFace'];\n  var boxDefaults = utils.extend({}, Shape.defaults);\n  delete boxDefaults.path;\n  faceNames.forEach(function (faceName) {\n    boxDefaults[faceName] = true;\n  });\n  utils.extend(boxDefaults, {\n    width: 1,\n    height: 1,\n    depth: 1,\n    fill: true\n  });\n  var Box = Anchor.subclass(boxDefaults);\n\n  Box.prototype.create = function (options) {\n    Anchor.prototype.create.call(this, options);\n    this.updatePath(); // HACK reset fill to trigger face setter\n\n    this.fill = this.fill;\n  };\n\n  Box.prototype.updatePath = function () {\n    // reset all faces to trigger setters\n    faceNames.forEach(function (faceName) {\n      this[faceName] = this[faceName];\n    }, this);\n  };\n\n  faceNames.forEach(function (faceName) {\n    var _faceName = '_' + faceName;\n\n    Object.defineProperty(Box.prototype, faceName, {\n      get: function get() {\n        return this[_faceName];\n      },\n      set: function set(value) {\n        this[_faceName] = value;\n        this.setFace(faceName, value);\n      }\n    });\n  });\n\n  Box.prototype.setFace = function (faceName, value) {\n    var rectProperty = faceName + 'Rect';\n    var rect = this[rectProperty]; // remove if false\n\n    if (!value) {\n      this.removeChild(rect);\n      return;\n    } // update & add face\n\n\n    var options = this.getFaceOptions(faceName);\n    options.color = typeof value == 'string' ? value : this.color;\n\n    if (rect) {\n      // update previous\n      rect.setOptions(options);\n    } else {\n      // create new\n      rect = this[rectProperty] = new BoxRect(options);\n    }\n\n    rect.updatePath();\n    this.addChild(rect);\n  };\n\n  Box.prototype.getFaceOptions = function (faceName) {\n    return {\n      frontFace: {\n        width: this.width,\n        height: this.height,\n        translate: {\n          z: this.depth / 2\n        }\n      },\n      rearFace: {\n        width: this.width,\n        height: this.height,\n        translate: {\n          z: -this.depth / 2\n        },\n        rotate: {\n          y: TAU / 2\n        }\n      },\n      leftFace: {\n        width: this.depth,\n        height: this.height,\n        translate: {\n          x: -this.width / 2\n        },\n        rotate: {\n          y: -TAU / 4\n        }\n      },\n      rightFace: {\n        width: this.depth,\n        height: this.height,\n        translate: {\n          x: this.width / 2\n        },\n        rotate: {\n          y: TAU / 4\n        }\n      },\n      topFace: {\n        width: this.width,\n        height: this.depth,\n        translate: {\n          y: -this.height / 2\n        },\n        rotate: {\n          x: -TAU / 4\n        }\n      },\n      bottomFace: {\n        width: this.width,\n        height: this.depth,\n        translate: {\n          y: this.height / 2\n        },\n        rotate: {\n          x: TAU / 4\n        }\n      }\n    }[faceName];\n  }; // ----- set face properties ----- //\n\n\n  var childProperties = ['color', 'stroke', 'fill', 'backface', 'front', 'visible'];\n  childProperties.forEach(function (property) {\n    // use proxy property for custom getter & setter\n    var _prop = '_' + property;\n\n    Object.defineProperty(Box.prototype, property, {\n      get: function get() {\n        return this[_prop];\n      },\n      set: function set(value) {\n        this[_prop] = value;\n        faceNames.forEach(function (faceName) {\n          var rect = this[faceName + 'Rect'];\n          var isFaceColor = typeof this[faceName] == 'string';\n          var isColorUnderwrite = property == 'color' && isFaceColor;\n\n          if (rect && !isColorUnderwrite) {\n            rect[property] = value;\n          }\n        }, this);\n      }\n    });\n  });\n  return Box;\n});","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\n\n/* eslint-disable require-jsdoc, valid-jsdoc */\nvar MapShim = function () {\n  if (typeof Map !== 'undefined') {\n    return Map;\n  }\n  /**\r\n   * Returns index in provided array that matches the specified key.\r\n   *\r\n   * @param {Array<Array>} arr\r\n   * @param {*} key\r\n   * @returns {number}\r\n   */\n\n\n  function getIndex(arr, key) {\n    var result = -1;\n    arr.some(function (entry, index) {\n      if (entry[0] === key) {\n        result = index;\n        return true;\n      }\n\n      return false;\n    });\n    return result;\n  }\n\n  return (\n    /** @class */\n    function () {\n      function class_1() {\n        this.__entries__ = [];\n      }\n\n      Object.defineProperty(class_1.prototype, \"size\", {\n        /**\r\n         * @returns {boolean}\r\n         */\n        get: function get() {\n          return this.__entries__.length;\n        },\n        enumerable: true,\n        configurable: true\n      });\n      /**\r\n       * @param {*} key\r\n       * @returns {*}\r\n       */\n\n      class_1.prototype.get = function (key) {\n        var index = getIndex(this.__entries__, key);\n        var entry = this.__entries__[index];\n        return entry && entry[1];\n      };\n      /**\r\n       * @param {*} key\r\n       * @param {*} value\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.set = function (key, value) {\n        var index = getIndex(this.__entries__, key);\n\n        if (~index) {\n          this.__entries__[index][1] = value;\n        } else {\n          this.__entries__.push([key, value]);\n        }\n      };\n      /**\r\n       * @param {*} key\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.delete = function (key) {\n        var entries = this.__entries__;\n        var index = getIndex(entries, key);\n\n        if (~index) {\n          entries.splice(index, 1);\n        }\n      };\n      /**\r\n       * @param {*} key\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.has = function (key) {\n        return !!~getIndex(this.__entries__, key);\n      };\n      /**\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.clear = function () {\n        this.__entries__.splice(0);\n      };\n      /**\r\n       * @param {Function} callback\r\n       * @param {*} [ctx=null]\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.forEach = function (callback, ctx) {\n        if (ctx === void 0) {\n          ctx = null;\n        }\n\n        for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\n          var entry = _a[_i];\n          callback.call(ctx, entry[1], entry[0]);\n        }\n      };\n\n      return class_1;\n    }()\n  );\n}();\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\n\n\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document; // Returns global object of a current environment.\n\nvar global$1 = function () {\n  if (typeof global !== 'undefined' && global.Math === Math) {\n    return global;\n  }\n\n  if (typeof self !== 'undefined' && self.Math === Math) {\n    return self;\n  }\n\n  if (typeof window !== 'undefined' && window.Math === Math) {\n    return window;\n  } // eslint-disable-next-line no-new-func\n\n\n  return Function('return this')();\n}();\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\n\n\nvar requestAnimationFrame$1 = function () {\n  if (typeof requestAnimationFrame === 'function') {\n    // It's required to use a bounded function because IE sometimes throws\n    // an \"Invalid calling object\" error if rAF is invoked without the global\n    // object on the left hand side.\n    return requestAnimationFrame.bind(global$1);\n  }\n\n  return function (callback) {\n    return setTimeout(function () {\n      return callback(Date.now());\n    }, 1000 / 60);\n  };\n}(); // Defines minimum timeout before adding a trailing call.\n\n\nvar trailingTimeout = 2;\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\n\nfunction throttle(callback, delay) {\n  var leadingCall = false,\n      trailingCall = false,\n      lastCallTime = 0;\n  /**\r\n   * Invokes the original callback function and schedules new invocation if\r\n   * the \"proxy\" was called during current request.\r\n   *\r\n   * @returns {void}\r\n   */\n\n  function resolvePending() {\n    if (leadingCall) {\n      leadingCall = false;\n      callback();\n    }\n\n    if (trailingCall) {\n      proxy();\n    }\n  }\n  /**\r\n   * Callback invoked after the specified delay. It will further postpone\r\n   * invocation of the original function delegating it to the\r\n   * requestAnimationFrame.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  function timeoutCallback() {\n    requestAnimationFrame$1(resolvePending);\n  }\n  /**\r\n   * Schedules invocation of the original function.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  function proxy() {\n    var timeStamp = Date.now();\n\n    if (leadingCall) {\n      // Reject immediately following calls.\n      if (timeStamp - lastCallTime < trailingTimeout) {\n        return;\n      } // Schedule new call to be in invoked when the pending one is resolved.\n      // This is important for \"transitions\" which never actually start\n      // immediately so there is a chance that we might miss one if change\n      // happens amids the pending invocation.\n\n\n      trailingCall = true;\n    } else {\n      leadingCall = true;\n      trailingCall = false;\n      setTimeout(timeoutCallback, delay);\n    }\n\n    lastCallTime = timeStamp;\n  }\n\n  return proxy;\n} // Minimum delay before invoking the update of observers.\n\n\nvar REFRESH_DELAY = 20; // A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\n\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight']; // Check if MutationObserver is available.\n\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\n\nvar ResizeObserverController =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new instance of ResizeObserverController.\r\n   *\r\n   * @private\r\n   */\n  function ResizeObserverController() {\n    /**\r\n     * Indicates whether DOM listeners have been added.\r\n     *\r\n     * @private {boolean}\r\n     */\n    this.connected_ = false;\n    /**\r\n     * Tells that controller has subscribed for Mutation Events.\r\n     *\r\n     * @private {boolean}\r\n     */\n\n    this.mutationEventsAdded_ = false;\n    /**\r\n     * Keeps reference to the instance of MutationObserver.\r\n     *\r\n     * @private {MutationObserver}\r\n     */\n\n    this.mutationsObserver_ = null;\n    /**\r\n     * A list of connected observers.\r\n     *\r\n     * @private {Array<ResizeObserverSPI>}\r\n     */\n\n    this.observers_ = [];\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n  }\n  /**\r\n   * Adds observer to observers list.\r\n   *\r\n   * @param {ResizeObserverSPI} observer - Observer to be added.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.addObserver = function (observer) {\n    if (!~this.observers_.indexOf(observer)) {\n      this.observers_.push(observer);\n    } // Add listeners if they haven't been added yet.\n\n\n    if (!this.connected_) {\n      this.connect_();\n    }\n  };\n  /**\r\n   * Removes observer from observers list.\r\n   *\r\n   * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.removeObserver = function (observer) {\n    var observers = this.observers_;\n    var index = observers.indexOf(observer); // Remove observer if it's present in registry.\n\n    if (~index) {\n      observers.splice(index, 1);\n    } // Remove listeners if controller has no connected observers.\n\n\n    if (!observers.length && this.connected_) {\n      this.disconnect_();\n    }\n  };\n  /**\r\n   * Invokes the update of observers. It will continue running updates insofar\r\n   * it detects changes.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.refresh = function () {\n    var changesDetected = this.updateObservers_(); // Continue running updates if changes have been detected as there might\n    // be future ones caused by CSS transitions.\n\n    if (changesDetected) {\n      this.refresh();\n    }\n  };\n  /**\r\n   * Updates every observer from observers list and notifies them of queued\r\n   * entries.\r\n   *\r\n   * @private\r\n   * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n   *      dimensions of it's elements.\r\n   */\n\n\n  ResizeObserverController.prototype.updateObservers_ = function () {\n    // Collect observers that have active observations.\n    var activeObservers = this.observers_.filter(function (observer) {\n      return observer.gatherActive(), observer.hasActive();\n    }); // Deliver notifications in a separate cycle in order to avoid any\n    // collisions between observers, e.g. when multiple instances of\n    // ResizeObserver are tracking the same element and the callback of one\n    // of them changes content dimensions of the observed target. Sometimes\n    // this may result in notifications being blocked for the rest of observers.\n\n    activeObservers.forEach(function (observer) {\n      return observer.broadcastActive();\n    });\n    return activeObservers.length > 0;\n  };\n  /**\r\n   * Initializes DOM listeners.\r\n   *\r\n   * @private\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.connect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already added.\n    if (!isBrowser || this.connected_) {\n      return;\n    } // Subscription to the \"Transitionend\" event is used as a workaround for\n    // delayed transitions. This way it's possible to capture at least the\n    // final state of an element.\n\n\n    document.addEventListener('transitionend', this.onTransitionEnd_);\n    window.addEventListener('resize', this.refresh);\n\n    if (mutationObserverSupported) {\n      this.mutationsObserver_ = new MutationObserver(this.refresh);\n      this.mutationsObserver_.observe(document, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      });\n    } else {\n      document.addEventListener('DOMSubtreeModified', this.refresh);\n      this.mutationEventsAdded_ = true;\n    }\n\n    this.connected_ = true;\n  };\n  /**\r\n   * Removes DOM listeners.\r\n   *\r\n   * @private\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.disconnect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already removed.\n    if (!isBrowser || !this.connected_) {\n      return;\n    }\n\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\n    window.removeEventListener('resize', this.refresh);\n\n    if (this.mutationsObserver_) {\n      this.mutationsObserver_.disconnect();\n    }\n\n    if (this.mutationEventsAdded_) {\n      document.removeEventListener('DOMSubtreeModified', this.refresh);\n    }\n\n    this.mutationsObserver_ = null;\n    this.mutationEventsAdded_ = false;\n    this.connected_ = false;\n  };\n  /**\r\n   * \"Transitionend\" event handler.\r\n   *\r\n   * @private\r\n   * @param {TransitionEvent} event\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\n    var _b = _a.propertyName,\n        propertyName = _b === void 0 ? '' : _b; // Detect whether transition may affect dimensions of an element.\n\n    var isReflowProperty = transitionKeys.some(function (key) {\n      return !!~propertyName.indexOf(key);\n    });\n\n    if (isReflowProperty) {\n      this.refresh();\n    }\n  };\n  /**\r\n   * Returns instance of the ResizeObserverController.\r\n   *\r\n   * @returns {ResizeObserverController}\r\n   */\n\n\n  ResizeObserverController.getInstance = function () {\n    if (!this.instance_) {\n      this.instance_ = new ResizeObserverController();\n    }\n\n    return this.instance_;\n  };\n  /**\r\n   * Holds reference to the controller's instance.\r\n   *\r\n   * @private {ResizeObserverController}\r\n   */\n\n\n  ResizeObserverController.instance_ = null;\n  return ResizeObserverController;\n}();\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\n\n\nvar defineConfigurable = function defineConfigurable(target, props) {\n  for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\n    var key = _a[_i];\n    Object.defineProperty(target, key, {\n      value: props[key],\n      enumerable: false,\n      writable: false,\n      configurable: true\n    });\n  }\n\n  return target;\n};\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\n\n\nvar getWindowOf = function getWindowOf(target) {\n  // Assume that the element is an instance of Node, which means that it\n  // has the \"ownerDocument\" property from which we can retrieve a\n  // corresponding global object.\n  var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView; // Return the local global object if it's not possible extract one from\n  // provided element.\n\n  return ownerGlobal || global$1;\n}; // Placeholder of an empty content rectangle.\n\n\nvar emptyRect = createRectInit(0, 0, 0, 0);\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\n\nfunction toFloat(value) {\n  return parseFloat(value) || 0;\n}\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\n\n\nfunction getBordersSize(styles) {\n  var positions = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    positions[_i - 1] = arguments[_i];\n  }\n\n  return positions.reduce(function (size, position) {\n    var value = styles['border-' + position + '-width'];\n    return size + toFloat(value);\n  }, 0);\n}\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\n\n\nfunction getPaddings(styles) {\n  var positions = ['top', 'right', 'bottom', 'left'];\n  var paddings = {};\n\n  for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\n    var position = positions_1[_i];\n    var value = styles['padding-' + position];\n    paddings[position] = toFloat(value);\n  }\n\n  return paddings;\n}\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction getSVGContentRect(target) {\n  var bbox = target.getBBox();\n  return createRectInit(0, 0, bbox.width, bbox.height);\n}\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction getHTMLElementContentRect(target) {\n  // Client width & height properties can't be\n  // used exclusively as they provide rounded values.\n  var clientWidth = target.clientWidth,\n      clientHeight = target.clientHeight; // By this condition we can catch all non-replaced inline, hidden and\n  // detached elements. Though elements with width & height properties less\n  // than 0.5 will be discarded as well.\n  //\n  // Without it we would need to implement separate methods for each of\n  // those cases and it's not possible to perform a precise and performance\n  // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n  // gives wrong results for elements with width & height less than 0.5.\n\n  if (!clientWidth && !clientHeight) {\n    return emptyRect;\n  }\n\n  var styles = getWindowOf(target).getComputedStyle(target);\n  var paddings = getPaddings(styles);\n  var horizPad = paddings.left + paddings.right;\n  var vertPad = paddings.top + paddings.bottom; // Computed styles of width & height are being used because they are the\n  // only dimensions available to JS that contain non-rounded values. It could\n  // be possible to utilize the getBoundingClientRect if only it's data wasn't\n  // affected by CSS transformations let alone paddings, borders and scroll bars.\n\n  var width = toFloat(styles.width),\n      height = toFloat(styles.height); // Width & height include paddings and borders when the 'border-box' box\n  // model is applied (except for IE).\n\n  if (styles.boxSizing === 'border-box') {\n    // Following conditions are required to handle Internet Explorer which\n    // doesn't include paddings and borders to computed CSS dimensions.\n    //\n    // We can say that if CSS dimensions + paddings are equal to the \"client\"\n    // properties then it's either IE, and thus we don't need to subtract\n    // anything, or an element merely doesn't have paddings/borders styles.\n    if (Math.round(width + horizPad) !== clientWidth) {\n      width -= getBordersSize(styles, 'left', 'right') + horizPad;\n    }\n\n    if (Math.round(height + vertPad) !== clientHeight) {\n      height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n    }\n  } // Following steps can't be applied to the document's root element as its\n  // client[Width/Height] properties represent viewport area of the window.\n  // Besides, it's as well not necessary as the <html> itself neither has\n  // rendered scroll bars nor it can be clipped.\n\n\n  if (!isDocumentElement(target)) {\n    // In some browsers (only in Firefox, actually) CSS width & height\n    // include scroll bars size which can be removed at this step as scroll\n    // bars are the only difference between rounded dimensions + paddings\n    // and \"client\" properties, though that is not always true in Chrome.\n    var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n    var horizScrollbar = Math.round(height + vertPad) - clientHeight; // Chrome has a rather weird rounding of \"client\" properties.\n    // E.g. for an element with content width of 314.2px it sometimes gives\n    // the client width of 315px and for the width of 314.7px it may give\n    // 314px. And it doesn't happen all the time. So just ignore this delta\n    // as a non-relevant.\n\n    if (Math.abs(vertScrollbar) !== 1) {\n      width -= vertScrollbar;\n    }\n\n    if (Math.abs(horizScrollbar) !== 1) {\n      height -= horizScrollbar;\n    }\n  }\n\n  return createRectInit(paddings.left, paddings.top, width, height);\n}\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\n\n\nvar isSVGGraphicsElement = function () {\n  // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n  // interface.\n  if (typeof SVGGraphicsElement !== 'undefined') {\n    return function (target) {\n      return target instanceof getWindowOf(target).SVGGraphicsElement;\n    };\n  } // If it's so, then check that element is at least an instance of the\n  // SVGElement and that it has the \"getBBox\" method.\n  // eslint-disable-next-line no-extra-parens\n\n\n  return function (target) {\n    return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function';\n  };\n}();\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\n\n\nfunction isDocumentElement(target) {\n  return target === getWindowOf(target).document.documentElement;\n}\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction getContentRect(target) {\n  if (!isBrowser) {\n    return emptyRect;\n  }\n\n  if (isSVGGraphicsElement(target)) {\n    return getSVGContentRect(target);\n  }\n\n  return getHTMLElementContentRect(target);\n}\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\n\n\nfunction createReadOnlyRect(_a) {\n  var x = _a.x,\n      y = _a.y,\n      width = _a.width,\n      height = _a.height; // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n\n  var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\n  var rect = Object.create(Constr.prototype); // Rectangle's properties are not writable and non-enumerable.\n\n  defineConfigurable(rect, {\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    top: y,\n    right: x + width,\n    bottom: height + y,\n    left: x\n  });\n  return rect;\n}\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction createRectInit(x, y, width, height) {\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height\n  };\n}\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\n\n\nvar ResizeObservation =\n/** @class */\nfunction () {\n  /**\r\n   * Creates an instance of ResizeObservation.\r\n   *\r\n   * @param {Element} target - Element to be observed.\r\n   */\n  function ResizeObservation(target) {\n    /**\r\n     * Broadcasted width of content rectangle.\r\n     *\r\n     * @type {number}\r\n     */\n    this.broadcastWidth = 0;\n    /**\r\n     * Broadcasted height of content rectangle.\r\n     *\r\n     * @type {number}\r\n     */\n\n    this.broadcastHeight = 0;\n    /**\r\n     * Reference to the last observed content rectangle.\r\n     *\r\n     * @private {DOMRectInit}\r\n     */\n\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\n    this.target = target;\n  }\n  /**\r\n   * Updates content rectangle and tells whether it's width or height properties\r\n   * have changed since the last broadcast.\r\n   *\r\n   * @returns {boolean}\r\n   */\n\n\n  ResizeObservation.prototype.isActive = function () {\n    var rect = getContentRect(this.target);\n    this.contentRect_ = rect;\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n  };\n  /**\r\n   * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n   * from the corresponding properties of the last observed content rectangle.\r\n   *\r\n   * @returns {DOMRectInit} Last observed content rectangle.\r\n   */\n\n\n  ResizeObservation.prototype.broadcastRect = function () {\n    var rect = this.contentRect_;\n    this.broadcastWidth = rect.width;\n    this.broadcastHeight = rect.height;\n    return rect;\n  };\n\n  return ResizeObservation;\n}();\n\nvar ResizeObserverEntry =\n/** @class */\nfunction () {\n  /**\r\n   * Creates an instance of ResizeObserverEntry.\r\n   *\r\n   * @param {Element} target - Element that is being observed.\r\n   * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n   */\n  function ResizeObserverEntry(target, rectInit) {\n    var contentRect = createReadOnlyRect(rectInit); // According to the specification following properties are not writable\n    // and are also not enumerable in the native implementation.\n    //\n    // Property accessors are not being used as they'd require to define a\n    // private WeakMap storage which may cause memory leaks in browsers that\n    // don't support this type of collections.\n\n    defineConfigurable(this, {\n      target: target,\n      contentRect: contentRect\n    });\n  }\n\n  return ResizeObserverEntry;\n}();\n\nvar ResizeObserverSPI =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new instance of ResizeObserver.\r\n   *\r\n   * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n   *      when one of the observed elements changes it's content dimensions.\r\n   * @param {ResizeObserverController} controller - Controller instance which\r\n   *      is responsible for the updates of observer.\r\n   * @param {ResizeObserver} callbackCtx - Reference to the public\r\n   *      ResizeObserver instance which will be passed to callback function.\r\n   */\n  function ResizeObserverSPI(callback, controller, callbackCtx) {\n    /**\r\n     * Collection of resize observations that have detected changes in dimensions\r\n     * of elements.\r\n     *\r\n     * @private {Array<ResizeObservation>}\r\n     */\n    this.activeObservations_ = [];\n    /**\r\n     * Registry of the ResizeObservation instances.\r\n     *\r\n     * @private {Map<Element, ResizeObservation>}\r\n     */\n\n    this.observations_ = new MapShim();\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('The callback provided as parameter 1 is not a function.');\n    }\n\n    this.callback_ = callback;\n    this.controller_ = controller;\n    this.callbackCtx_ = callbackCtx;\n  }\n  /**\r\n   * Starts observing provided element.\r\n   *\r\n   * @param {Element} target - Element to be observed.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.observe = function (target) {\n    if (!arguments.length) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    } // Do nothing if current environment doesn't have the Element interface.\n\n\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n      return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n      throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_; // Do nothing if element is already being observed.\n\n    if (observations.has(target)) {\n      return;\n    }\n\n    observations.set(target, new ResizeObservation(target));\n    this.controller_.addObserver(this); // Force the update of observations.\n\n    this.controller_.refresh();\n  };\n  /**\r\n   * Stops observing provided element.\r\n   *\r\n   * @param {Element} target - Element to stop observing.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.unobserve = function (target) {\n    if (!arguments.length) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    } // Do nothing if current environment doesn't have the Element interface.\n\n\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n      return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n      throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_; // Do nothing if element is not being observed.\n\n    if (!observations.has(target)) {\n      return;\n    }\n\n    observations.delete(target);\n\n    if (!observations.size) {\n      this.controller_.removeObserver(this);\n    }\n  };\n  /**\r\n   * Stops observing all elements.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.disconnect = function () {\n    this.clearActive();\n    this.observations_.clear();\n    this.controller_.removeObserver(this);\n  };\n  /**\r\n   * Collects observation instances the associated element of which has changed\r\n   * it's content rectangle.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.gatherActive = function () {\n    var _this = this;\n\n    this.clearActive();\n    this.observations_.forEach(function (observation) {\n      if (observation.isActive()) {\n        _this.activeObservations_.push(observation);\n      }\n    });\n  };\n  /**\r\n   * Invokes initial callback function with a list of ResizeObserverEntry\r\n   * instances collected from active resize observations.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.broadcastActive = function () {\n    // Do nothing if observer doesn't have active observations.\n    if (!this.hasActive()) {\n      return;\n    }\n\n    var ctx = this.callbackCtx_; // Create ResizeObserverEntry instance for every active observation.\n\n    var entries = this.activeObservations_.map(function (observation) {\n      return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n    });\n    this.callback_.call(ctx, entries, ctx);\n    this.clearActive();\n  };\n  /**\r\n   * Clears the collection of active observations.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.clearActive = function () {\n    this.activeObservations_.splice(0);\n  };\n  /**\r\n   * Tells whether observer has active observations.\r\n   *\r\n   * @returns {boolean}\r\n   */\n\n\n  ResizeObserverSPI.prototype.hasActive = function () {\n    return this.activeObservations_.length > 0;\n  };\n\n  return ResizeObserverSPI;\n}(); // Registry of internal observers. If WeakMap is not available use current shim\n// for the Map collection as it has all required methods and because WeakMap\n// can't be fully polyfilled anyway.\n\n\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\n\nvar ResizeObserver =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new instance of ResizeObserver.\r\n   *\r\n   * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n   *      dimensions of the observed elements change.\r\n   */\n  function ResizeObserver(callback) {\n    if (!(this instanceof ResizeObserver)) {\n      throw new TypeError('Cannot call a class as a function.');\n    }\n\n    if (!arguments.length) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    var controller = ResizeObserverController.getInstance();\n    var observer = new ResizeObserverSPI(callback, controller, this);\n    observers.set(this, observer);\n  }\n\n  return ResizeObserver;\n}(); // Expose public methods of ResizeObserver.\n\n\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\n  ResizeObserver.prototype[method] = function () {\n    var _a;\n\n    return (_a = observers.get(this))[method].apply(_a, arguments);\n  };\n});\n\nvar index = function () {\n  // Export existing implementation if available.\n  if (typeof global$1.ResizeObserver !== 'undefined') {\n    return global$1.ResizeObserver;\n  }\n\n  return ResizeObserver;\n}();\n\nexport default index;","/*!\n * Zdog v1.1.2\n * Round, flat, designer-friendly pseudo-3D engine\n * Licensed MIT\n * https://zzz.dog\n * Copyright 2020 Metafizzy\n */\n\n/**\n * Boilerplate & utils\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    root.Zdog = factory();\n  }\n})(this, function factory() {\n  var Zdog = {};\n  Zdog.TAU = Math.PI * 2;\n\n  Zdog.extend = function (a, b) {\n    for (var prop in b) {\n      a[prop] = b[prop];\n    }\n\n    return a;\n  };\n\n  Zdog.lerp = function (a, b, alpha) {\n    return (b - a) * alpha + a;\n  };\n\n  Zdog.modulo = function (num, div) {\n    return (num % div + div) % div;\n  };\n\n  var powerMultipliers = {\n    2: function _(a) {\n      return a * a;\n    },\n    3: function _(a) {\n      return a * a * a;\n    },\n    4: function _(a) {\n      return a * a * a * a;\n    },\n    5: function _(a) {\n      return a * a * a * a * a;\n    }\n  };\n\n  Zdog.easeInOut = function (alpha, power) {\n    if (power == 1) {\n      return alpha;\n    }\n\n    alpha = Math.max(0, Math.min(1, alpha));\n    var isFirstHalf = alpha < 0.5;\n    var slope = isFirstHalf ? alpha : 1 - alpha;\n    slope /= 0.5; // make easing steeper with more multiples\n\n    var powerMultiplier = powerMultipliers[power] || powerMultipliers[2];\n    var curve = powerMultiplier(slope);\n    curve /= 2;\n    return isFirstHalf ? curve : 1 - curve;\n  };\n\n  return Zdog;\n});","/**\n * Anchor\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./boilerplate'), require('./vector'), require('./canvas-renderer'), require('./svg-renderer'));\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Anchor = factory(Zdog, Zdog.Vector, Zdog.CanvasRenderer, Zdog.SvgRenderer);\n  }\n})(this, function factory(utils, Vector, CanvasRenderer, SvgRenderer) {\n  var TAU = utils.TAU;\n  var onePoint = {\n    x: 1,\n    y: 1,\n    z: 1\n  };\n\n  function Anchor(options) {\n    this.create(options || {});\n  }\n\n  Anchor.prototype.create = function (options) {\n    this.children = []; // set defaults & options\n\n    utils.extend(this, this.constructor.defaults);\n    this.setOptions(options); // transform\n\n    this.translate = new Vector(options.translate);\n    this.rotate = new Vector(options.rotate);\n    this.scale = new Vector(onePoint).multiply(this.scale); // origin\n\n    this.origin = new Vector();\n    this.renderOrigin = new Vector();\n\n    if (this.addTo) {\n      this.addTo.addChild(this);\n    }\n  };\n\n  Anchor.defaults = {};\n  Anchor.optionKeys = Object.keys(Anchor.defaults).concat(['rotate', 'translate', 'scale', 'addTo']);\n\n  Anchor.prototype.setOptions = function (options) {\n    var optionKeys = this.constructor.optionKeys;\n\n    for (var key in options) {\n      if (optionKeys.indexOf(key) != -1) {\n        this[key] = options[key];\n      }\n    }\n  };\n\n  Anchor.prototype.addChild = function (shape) {\n    if (this.children.indexOf(shape) != -1) {\n      return;\n    }\n\n    shape.remove(); // remove previous parent\n\n    shape.addTo = this; // keep parent reference\n\n    this.children.push(shape);\n  };\n\n  Anchor.prototype.removeChild = function (shape) {\n    var index = this.children.indexOf(shape);\n\n    if (index != -1) {\n      this.children.splice(index, 1);\n    }\n  };\n\n  Anchor.prototype.remove = function () {\n    if (this.addTo) {\n      this.addTo.removeChild(this);\n    }\n  }; // ----- update ----- //\n\n\n  Anchor.prototype.update = function () {\n    // update self\n    this.reset(); // update children\n\n    this.children.forEach(function (child) {\n      child.update();\n    });\n    this.transform(this.translate, this.rotate, this.scale);\n  };\n\n  Anchor.prototype.reset = function () {\n    this.renderOrigin.set(this.origin);\n  };\n\n  Anchor.prototype.transform = function (translation, rotation, scale) {\n    this.renderOrigin.transform(translation, rotation, scale); // transform children\n\n    this.children.forEach(function (child) {\n      child.transform(translation, rotation, scale);\n    });\n  };\n\n  Anchor.prototype.updateGraph = function () {\n    this.update();\n    this.updateFlatGraph();\n    this.flatGraph.forEach(function (item) {\n      item.updateSortValue();\n    }); // z-sort\n\n    this.flatGraph.sort(Anchor.shapeSorter);\n  };\n\n  Anchor.shapeSorter = function (a, b) {\n    return a.sortValue - b.sortValue;\n  }; // custom getter to check for flatGraph before using it\n\n\n  Object.defineProperty(Anchor.prototype, 'flatGraph', {\n    get: function get() {\n      if (!this._flatGraph) {\n        this.updateFlatGraph();\n      }\n\n      return this._flatGraph;\n    },\n    set: function set(graph) {\n      this._flatGraph = graph;\n    }\n  });\n\n  Anchor.prototype.updateFlatGraph = function () {\n    this.flatGraph = this.getFlatGraph();\n  }; // return Array of self & all child graph items\n\n\n  Anchor.prototype.getFlatGraph = function () {\n    var flatGraph = [this];\n    return this.addChildFlatGraph(flatGraph);\n  };\n\n  Anchor.prototype.addChildFlatGraph = function (flatGraph) {\n    this.children.forEach(function (child) {\n      var childFlatGraph = child.getFlatGraph();\n      Array.prototype.push.apply(flatGraph, childFlatGraph);\n    });\n    return flatGraph;\n  };\n\n  Anchor.prototype.updateSortValue = function () {\n    this.sortValue = this.renderOrigin.z;\n  }; // ----- render ----- //\n\n\n  Anchor.prototype.render = function () {}; // TODO refactor out CanvasRenderer so its not a dependency within anchor.js\n\n\n  Anchor.prototype.renderGraphCanvas = function (ctx) {\n    if (!ctx) {\n      throw new Error('ctx is ' + ctx + '. ' + 'Canvas context required for render. Check .renderGraphCanvas( ctx ).');\n    }\n\n    this.flatGraph.forEach(function (item) {\n      item.render(ctx, CanvasRenderer);\n    });\n  };\n\n  Anchor.prototype.renderGraphSvg = function (svg) {\n    if (!svg) {\n      throw new Error('svg is ' + svg + '. ' + 'SVG required for render. Check .renderGraphSvg( svg ).');\n    }\n\n    this.flatGraph.forEach(function (item) {\n      item.render(svg, SvgRenderer);\n    });\n  }; // ----- misc ----- //\n\n\n  Anchor.prototype.copy = function (options) {\n    // copy options\n    var itemOptions = {};\n    var optionKeys = this.constructor.optionKeys;\n    optionKeys.forEach(function (key) {\n      itemOptions[key] = this[key];\n    }, this); // add set options\n\n    utils.extend(itemOptions, options);\n    var ItemClass = this.constructor;\n    return new ItemClass(itemOptions);\n  };\n\n  Anchor.prototype.copyGraph = function (options) {\n    var clone = this.copy(options);\n    this.children.forEach(function (child) {\n      child.copyGraph({\n        addTo: clone\n      });\n    });\n    return clone;\n  };\n\n  Anchor.prototype.normalizeRotate = function () {\n    this.rotate.x = utils.modulo(this.rotate.x, TAU);\n    this.rotate.y = utils.modulo(this.rotate.y, TAU);\n    this.rotate.z = utils.modulo(this.rotate.z, TAU);\n  }; // ----- subclass ----- //\n\n\n  function getSubclass(Super) {\n    return function (defaults) {\n      // create constructor\n      function Item(options) {\n        this.create(options || {});\n      }\n\n      Item.prototype = Object.create(Super.prototype);\n      Item.prototype.constructor = Item;\n      Item.defaults = utils.extend({}, Super.defaults);\n      utils.extend(Item.defaults, defaults); // create optionKeys\n\n      Item.optionKeys = Super.optionKeys.slice(0); // add defaults keys to optionKeys, dedupe\n\n      Object.keys(Item.defaults).forEach(function (key) {\n        if (!Item.optionKeys.indexOf(key) != 1) {\n          Item.optionKeys.push(key);\n        }\n      });\n      Item.subclass = getSubclass(Item);\n      return Item;\n    };\n  }\n\n  Anchor.subclass = getSubclass(Anchor);\n  return Anchor;\n});","/**\n * Shape\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./boilerplate'), require('./vector'), require('./path-command'), require('./anchor'));\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Shape = factory(Zdog, Zdog.Vector, Zdog.PathCommand, Zdog.Anchor);\n  }\n})(this, function factory(utils, Vector, PathCommand, Anchor) {\n  var Shape = Anchor.subclass({\n    stroke: 1,\n    fill: false,\n    color: '#333',\n    closed: true,\n    visible: true,\n    path: [{}],\n    front: {\n      z: 1\n    },\n    backface: true\n  });\n\n  Shape.prototype.create = function (options) {\n    Anchor.prototype.create.call(this, options);\n    this.updatePath(); // front\n\n    this.front = new Vector(options.front || this.front);\n    this.renderFront = new Vector(this.front);\n    this.renderNormal = new Vector();\n  };\n\n  var actionNames = ['move', 'line', 'bezier', 'arc'];\n\n  Shape.prototype.updatePath = function () {\n    this.setPath();\n    this.updatePathCommands();\n  }; // place holder for Ellipse, Rect, etc.\n\n\n  Shape.prototype.setPath = function () {}; // parse path into PathCommands\n\n\n  Shape.prototype.updatePathCommands = function () {\n    var previousPoint;\n    this.pathCommands = this.path.map(function (pathPart, i) {\n      // pathPart can be just vector coordinates -> { x, y, z }\n      // or path instruction -> { arc: [ {x0,y0,z0}, {x1,y1,z1} ] }\n      var keys = Object.keys(pathPart);\n      var method = keys[0];\n      var points = pathPart[method]; // default to line if no instruction\n\n      var isInstruction = keys.length == 1 && actionNames.indexOf(method) != -1;\n\n      if (!isInstruction) {\n        method = 'line';\n        points = pathPart;\n      } // munge single-point methods like line & move without arrays\n\n\n      var isLineOrMove = method == 'line' || method == 'move';\n      var isPointsArray = Array.isArray(points);\n\n      if (isLineOrMove && !isPointsArray) {\n        points = [points];\n      } // first action is always move\n\n\n      method = i === 0 ? 'move' : method; // arcs require previous last point\n\n      var command = new PathCommand(method, points, previousPoint); // update previousLastPoint\n\n      previousPoint = command.endRenderPoint;\n      return command;\n    });\n  }; // ----- update ----- //\n\n\n  Shape.prototype.reset = function () {\n    this.renderOrigin.set(this.origin);\n    this.renderFront.set(this.front); // reset command render points\n\n    this.pathCommands.forEach(function (command) {\n      command.reset();\n    });\n  };\n\n  Shape.prototype.transform = function (translation, rotation, scale) {\n    // calculate render points backface visibility & cone/hemisphere shapes\n    this.renderOrigin.transform(translation, rotation, scale);\n    this.renderFront.transform(translation, rotation, scale);\n    this.renderNormal.set(this.renderOrigin).subtract(this.renderFront); // transform points\n\n    this.pathCommands.forEach(function (command) {\n      command.transform(translation, rotation, scale);\n    }); // transform children\n\n    this.children.forEach(function (child) {\n      child.transform(translation, rotation, scale);\n    });\n  };\n\n  Shape.prototype.updateSortValue = function () {\n    // sort by average z of all points\n    // def not geometrically correct, but works for me\n    var pointCount = this.pathCommands.length;\n    var firstPoint = this.pathCommands[0].endRenderPoint;\n    var lastPoint = this.pathCommands[pointCount - 1].endRenderPoint; // ignore the final point if self closing shape\n\n    var isSelfClosing = pointCount > 2 && firstPoint.isSame(lastPoint);\n\n    if (isSelfClosing) {\n      pointCount -= 1;\n    }\n\n    var sortValueTotal = 0;\n\n    for (var i = 0; i < pointCount; i++) {\n      sortValueTotal += this.pathCommands[i].endRenderPoint.z;\n    }\n\n    this.sortValue = sortValueTotal / pointCount;\n  }; // ----- render ----- //\n\n\n  Shape.prototype.render = function (ctx, renderer) {\n    var length = this.pathCommands.length;\n\n    if (!this.visible || !length) {\n      return;\n    } // do not render if hiding backface\n\n\n    this.isFacingBack = this.renderNormal.z > 0;\n\n    if (!this.backface && this.isFacingBack) {\n      return;\n    }\n\n    if (!renderer) {\n      throw new Error('Zdog renderer required. Set to ' + renderer);\n    } // render dot or path\n\n\n    var isDot = length == 1;\n\n    if (renderer.isCanvas && isDot) {\n      this.renderCanvasDot(ctx, renderer);\n    } else {\n      this.renderPath(ctx, renderer);\n    }\n  };\n\n  var TAU = utils.TAU; // Safari does not render lines with no size, have to render circle instead\n\n  Shape.prototype.renderCanvasDot = function (ctx) {\n    var lineWidth = this.getLineWidth();\n\n    if (!lineWidth) {\n      return;\n    }\n\n    ctx.fillStyle = this.getRenderColor();\n    var point = this.pathCommands[0].endRenderPoint;\n    ctx.beginPath();\n    var radius = lineWidth / 2;\n    ctx.arc(point.x, point.y, radius, 0, TAU);\n    ctx.fill();\n  };\n\n  Shape.prototype.getLineWidth = function () {\n    if (!this.stroke) {\n      return 0;\n    }\n\n    if (this.stroke == true) {\n      return 1;\n    }\n\n    return this.stroke;\n  };\n\n  Shape.prototype.getRenderColor = function () {\n    // use backface color if applicable\n    var isBackfaceColor = typeof this.backface == 'string' && this.isFacingBack;\n    var color = isBackfaceColor ? this.backface : this.color;\n    return color;\n  };\n\n  Shape.prototype.renderPath = function (ctx, renderer) {\n    var elem = this.getRenderElement(ctx, renderer);\n    var isTwoPoints = this.pathCommands.length == 2 && this.pathCommands[1].method == 'line';\n    var isClosed = !isTwoPoints && this.closed;\n    var color = this.getRenderColor();\n    renderer.renderPath(ctx, elem, this.pathCommands, isClosed);\n    renderer.stroke(ctx, elem, this.stroke, color, this.getLineWidth());\n    renderer.fill(ctx, elem, this.fill, color);\n    renderer.end(ctx, elem);\n  };\n\n  var svgURI = 'http://www.w3.org/2000/svg';\n\n  Shape.prototype.getRenderElement = function (ctx, renderer) {\n    if (!renderer.isSvg) {\n      return;\n    }\n\n    if (!this.svgElement) {\n      // create svgElement\n      this.svgElement = document.createElementNS(svgURI, 'path');\n      this.svgElement.setAttribute('stroke-linecap', 'round');\n      this.svgElement.setAttribute('stroke-linejoin', 'round');\n    }\n\n    return this.svgElement;\n  };\n\n  return Shape;\n});","/**\n * Vector\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./boilerplate'));\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Vector = factory(Zdog);\n  }\n})(this, function factory(utils) {\n  function Vector(position) {\n    this.set(position);\n  }\n\n  var TAU = utils.TAU; // 'pos' = 'position'\n\n  Vector.prototype.set = function (pos) {\n    this.x = pos && pos.x || 0;\n    this.y = pos && pos.y || 0;\n    this.z = pos && pos.z || 0;\n    return this;\n  }; // set coordinates without sanitizing\n  // vec.write({ y: 2 }) only sets y coord\n\n\n  Vector.prototype.write = function (pos) {\n    if (!pos) {\n      return this;\n    }\n\n    this.x = pos.x != undefined ? pos.x : this.x;\n    this.y = pos.y != undefined ? pos.y : this.y;\n    this.z = pos.z != undefined ? pos.z : this.z;\n    return this;\n  };\n\n  Vector.prototype.rotate = function (rotation) {\n    if (!rotation) {\n      return;\n    }\n\n    this.rotateZ(rotation.z);\n    this.rotateY(rotation.y);\n    this.rotateX(rotation.x);\n    return this;\n  };\n\n  Vector.prototype.rotateZ = function (angle) {\n    rotateProperty(this, angle, 'x', 'y');\n  };\n\n  Vector.prototype.rotateX = function (angle) {\n    rotateProperty(this, angle, 'y', 'z');\n  };\n\n  Vector.prototype.rotateY = function (angle) {\n    rotateProperty(this, angle, 'x', 'z');\n  };\n\n  function rotateProperty(vec, angle, propA, propB) {\n    if (!angle || angle % TAU === 0) {\n      return;\n    }\n\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var a = vec[propA];\n    var b = vec[propB];\n    vec[propA] = a * cos - b * sin;\n    vec[propB] = b * cos + a * sin;\n  }\n\n  Vector.prototype.isSame = function (pos) {\n    if (!pos) {\n      return false;\n    }\n\n    return this.x === pos.x && this.y === pos.y && this.z === pos.z;\n  };\n\n  Vector.prototype.add = function (pos) {\n    if (!pos) {\n      return this;\n    }\n\n    this.x += pos.x || 0;\n    this.y += pos.y || 0;\n    this.z += pos.z || 0;\n    return this;\n  };\n\n  Vector.prototype.subtract = function (pos) {\n    if (!pos) {\n      return this;\n    }\n\n    this.x -= pos.x || 0;\n    this.y -= pos.y || 0;\n    this.z -= pos.z || 0;\n    return this;\n  };\n\n  Vector.prototype.multiply = function (pos) {\n    if (pos == undefined) {\n      return this;\n    } // multiple all values by same number\n\n\n    if (typeof pos == 'number') {\n      this.x *= pos;\n      this.y *= pos;\n      this.z *= pos;\n    } else {\n      // multiply object\n      this.x *= pos.x != undefined ? pos.x : 1;\n      this.y *= pos.y != undefined ? pos.y : 1;\n      this.z *= pos.z != undefined ? pos.z : 1;\n    }\n\n    return this;\n  };\n\n  Vector.prototype.transform = function (translation, rotation, scale) {\n    this.multiply(scale);\n    this.rotate(rotation);\n    this.add(translation);\n    return this;\n  };\n\n  Vector.prototype.lerp = function (pos, alpha) {\n    this.x = utils.lerp(this.x, pos.x || 0, alpha);\n    this.y = utils.lerp(this.y, pos.y || 0, alpha);\n    this.z = utils.lerp(this.z, pos.z || 0, alpha);\n    return this;\n  };\n\n  Vector.prototype.magnitude = function () {\n    var sum = this.x * this.x + this.y * this.y + this.z * this.z;\n    return getMagnitudeSqrt(sum);\n  };\n\n  function getMagnitudeSqrt(sum) {\n    // PERF: check if sum ~= 1 and skip sqrt\n    if (Math.abs(sum - 1) < 0.00000001) {\n      return 1;\n    }\n\n    return Math.sqrt(sum);\n  }\n\n  Vector.prototype.magnitude2d = function () {\n    var sum = this.x * this.x + this.y * this.y;\n    return getMagnitudeSqrt(sum);\n  };\n\n  Vector.prototype.copy = function () {\n    return new Vector(this);\n  };\n\n  return Vector;\n});","/**\n * PathCommand\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./vector'));\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.PathCommand = factory(Zdog.Vector);\n  }\n})(this, function factory(Vector) {\n  function PathCommand(method, points, previousPoint) {\n    this.method = method;\n    this.points = points.map(mapVectorPoint);\n    this.renderPoints = points.map(mapNewVector);\n    this.previousPoint = previousPoint;\n    this.endRenderPoint = this.renderPoints[this.renderPoints.length - 1]; // arc actions come with previous point & corner point\n    // but require bezier control points\n\n    if (method == 'arc') {\n      this.controlPoints = [new Vector(), new Vector()];\n    }\n  }\n\n  function mapVectorPoint(point) {\n    if (point instanceof Vector) {\n      return point;\n    } else {\n      return new Vector(point);\n    }\n  }\n\n  function mapNewVector(point) {\n    return new Vector(point);\n  }\n\n  PathCommand.prototype.reset = function () {\n    // reset renderPoints back to orignal points position\n    var points = this.points;\n    this.renderPoints.forEach(function (renderPoint, i) {\n      var point = points[i];\n      renderPoint.set(point);\n    });\n  };\n\n  PathCommand.prototype.transform = function (translation, rotation, scale) {\n    this.renderPoints.forEach(function (renderPoint) {\n      renderPoint.transform(translation, rotation, scale);\n    });\n  };\n\n  PathCommand.prototype.render = function (ctx, elem, renderer) {\n    return this[this.method](ctx, elem, renderer);\n  };\n\n  PathCommand.prototype.move = function (ctx, elem, renderer) {\n    return renderer.move(ctx, elem, this.renderPoints[0]);\n  };\n\n  PathCommand.prototype.line = function (ctx, elem, renderer) {\n    return renderer.line(ctx, elem, this.renderPoints[0]);\n  };\n\n  PathCommand.prototype.bezier = function (ctx, elem, renderer) {\n    var cp0 = this.renderPoints[0];\n    var cp1 = this.renderPoints[1];\n    var end = this.renderPoints[2];\n    return renderer.bezier(ctx, elem, cp0, cp1, end);\n  };\n\n  var arcHandleLength = 9 / 16;\n\n  PathCommand.prototype.arc = function (ctx, elem, renderer) {\n    var prev = this.previousPoint;\n    var corner = this.renderPoints[0];\n    var end = this.renderPoints[1];\n    var cp0 = this.controlPoints[0];\n    var cp1 = this.controlPoints[1];\n    cp0.set(prev).lerp(corner, arcHandleLength);\n    cp1.set(end).lerp(corner, arcHandleLength);\n    return renderer.bezier(ctx, elem, cp0, cp1, end);\n  };\n\n  return PathCommand;\n});","/**\n * Ellipse\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./shape'));\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Ellipse = factory(Zdog.Shape);\n  }\n})(this, function factory(Shape) {\n  var Ellipse = Shape.subclass({\n    diameter: 1,\n    width: undefined,\n    height: undefined,\n    quarters: 4,\n    closed: false\n  });\n\n  Ellipse.prototype.setPath = function () {\n    var width = this.width != undefined ? this.width : this.diameter;\n    var height = this.height != undefined ? this.height : this.diameter;\n    var x = width / 2;\n    var y = height / 2;\n    this.path = [{\n      x: 0,\n      y: -y\n    }, {\n      arc: [// top right\n      {\n        x: x,\n        y: -y\n      }, {\n        x: x,\n        y: 0\n      }]\n    }]; // bottom right\n\n    if (this.quarters > 1) {\n      this.path.push({\n        arc: [{\n          x: x,\n          y: y\n        }, {\n          x: 0,\n          y: y\n        }]\n      });\n    } // bottom left\n\n\n    if (this.quarters > 2) {\n      this.path.push({\n        arc: [{\n          x: -x,\n          y: y\n        }, {\n          x: -x,\n          y: 0\n        }]\n      });\n    } // top left\n\n\n    if (this.quarters > 3) {\n      this.path.push({\n        arc: [{\n          x: -x,\n          y: -y\n        }, {\n          x: 0,\n          y: -y\n        }]\n      });\n    }\n  };\n\n  return Ellipse;\n});","/**\n * CanvasRenderer\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    root.Zdog.CanvasRenderer = factory();\n  }\n})(this, function factory() {\n  var CanvasRenderer = {\n    isCanvas: true\n  };\n\n  CanvasRenderer.begin = function (ctx) {\n    ctx.beginPath();\n  };\n\n  CanvasRenderer.move = function (ctx, elem, point) {\n    ctx.moveTo(point.x, point.y);\n  };\n\n  CanvasRenderer.line = function (ctx, elem, point) {\n    ctx.lineTo(point.x, point.y);\n  };\n\n  CanvasRenderer.bezier = function (ctx, elem, cp0, cp1, end) {\n    ctx.bezierCurveTo(cp0.x, cp0.y, cp1.x, cp1.y, end.x, end.y);\n  };\n\n  CanvasRenderer.closePath = function (ctx) {\n    ctx.closePath();\n  };\n\n  CanvasRenderer.setPath = function () {};\n\n  CanvasRenderer.renderPath = function (ctx, elem, pathCommands, isClosed) {\n    this.begin(ctx, elem);\n    pathCommands.forEach(function (command) {\n      command.render(ctx, elem, CanvasRenderer);\n    });\n\n    if (isClosed) {\n      this.closePath(ctx, elem);\n    }\n  };\n\n  CanvasRenderer.stroke = function (ctx, elem, isStroke, color, lineWidth) {\n    if (!isStroke) {\n      return;\n    }\n\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.stroke();\n  };\n\n  CanvasRenderer.fill = function (ctx, elem, isFill, color) {\n    if (!isFill) {\n      return;\n    }\n\n    ctx.fillStyle = color;\n    ctx.fill();\n  };\n\n  CanvasRenderer.end = function () {};\n\n  return CanvasRenderer;\n});","/**\n * SvgRenderer\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    root.Zdog.SvgRenderer = factory();\n  }\n})(this, function factory() {\n  var SvgRenderer = {\n    isSvg: true\n  }; // round path coordinates to 3 decimals\n\n  var round = SvgRenderer.round = function (num) {\n    return Math.round(num * 1000) / 1000;\n  };\n\n  function getPointString(point) {\n    return round(point.x) + ',' + round(point.y) + ' ';\n  }\n\n  SvgRenderer.begin = function () {};\n\n  SvgRenderer.move = function (svg, elem, point) {\n    return 'M' + getPointString(point);\n  };\n\n  SvgRenderer.line = function (svg, elem, point) {\n    return 'L' + getPointString(point);\n  };\n\n  SvgRenderer.bezier = function (svg, elem, cp0, cp1, end) {\n    return 'C' + getPointString(cp0) + getPointString(cp1) + getPointString(end);\n  };\n\n  SvgRenderer.closePath = function ()\n  /* elem */\n  {\n    return 'Z';\n  };\n\n  SvgRenderer.setPath = function (svg, elem, pathValue) {\n    elem.setAttribute('d', pathValue);\n  };\n\n  SvgRenderer.renderPath = function (svg, elem, pathCommands, isClosed) {\n    var pathValue = '';\n    pathCommands.forEach(function (command) {\n      pathValue += command.render(svg, elem, SvgRenderer);\n    });\n\n    if (isClosed) {\n      pathValue += this.closePath(svg, elem);\n    }\n\n    this.setPath(svg, elem, pathValue);\n  };\n\n  SvgRenderer.stroke = function (svg, elem, isStroke, color, lineWidth) {\n    if (!isStroke) {\n      return;\n    }\n\n    elem.setAttribute('stroke', color);\n    elem.setAttribute('stroke-width', lineWidth);\n  };\n\n  SvgRenderer.fill = function (svg, elem, isFill, color) {\n    var fillColor = isFill ? color : 'none';\n    elem.setAttribute('fill', fillColor);\n  };\n\n  SvgRenderer.end = function (svg, elem) {\n    svg.appendChild(elem);\n  };\n\n  return SvgRenderer;\n});","/**\n * Dragger\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    root.Zdog.Dragger = factory();\n  }\n})(this, function factory() {\n  // quick & dirty drag event stuff\n  // messes up if multiple pointers/touches\n  // check for browser window #85\n  var hasWindow = typeof window != 'undefined'; // event support, default to mouse events\n\n  var downEvent = 'mousedown';\n  var moveEvent = 'mousemove';\n  var upEvent = 'mouseup';\n\n  if (hasWindow) {\n    if (window.PointerEvent) {\n      // PointerEvent, Chrome\n      downEvent = 'pointerdown';\n      moveEvent = 'pointermove';\n      upEvent = 'pointerup';\n    } else if ('ontouchstart' in window) {\n      // Touch Events, iOS Safari\n      downEvent = 'touchstart';\n      moveEvent = 'touchmove';\n      upEvent = 'touchend';\n    }\n  }\n\n  function noop() {}\n\n  function Dragger(options) {\n    this.create(options || {});\n  }\n\n  Dragger.prototype.create = function (options) {\n    this.onDragStart = options.onDragStart || noop;\n    this.onDragMove = options.onDragMove || noop;\n    this.onDragEnd = options.onDragEnd || noop;\n    this.bindDrag(options.startElement);\n  };\n\n  Dragger.prototype.bindDrag = function (element) {\n    element = this.getQueryElement(element);\n\n    if (!element) {\n      return;\n    } // disable browser gestures #53\n\n\n    element.style.touchAction = 'none';\n    element.addEventListener(downEvent, this);\n  };\n\n  Dragger.prototype.getQueryElement = function (element) {\n    if (typeof element == 'string') {\n      // with string, query selector\n      element = document.querySelector(element);\n    }\n\n    return element;\n  };\n\n  Dragger.prototype.handleEvent = function (event) {\n    var method = this['on' + event.type];\n\n    if (method) {\n      method.call(this, event);\n    }\n  };\n\n  Dragger.prototype.onmousedown = Dragger.prototype.onpointerdown = function (event) {\n    this.dragStart(event, event);\n  };\n\n  Dragger.prototype.ontouchstart = function (event) {\n    this.dragStart(event, event.changedTouches[0]);\n  };\n\n  Dragger.prototype.dragStart = function (event, pointer) {\n    event.preventDefault();\n    this.dragStartX = pointer.pageX;\n    this.dragStartY = pointer.pageY;\n\n    if (hasWindow) {\n      window.addEventListener(moveEvent, this);\n      window.addEventListener(upEvent, this);\n    }\n\n    this.onDragStart(pointer);\n  };\n\n  Dragger.prototype.ontouchmove = function (event) {\n    // HACK, moved touch may not be first\n    this.dragMove(event, event.changedTouches[0]);\n  };\n\n  Dragger.prototype.onmousemove = Dragger.prototype.onpointermove = function (event) {\n    this.dragMove(event, event);\n  };\n\n  Dragger.prototype.dragMove = function (event, pointer) {\n    event.preventDefault();\n    var moveX = pointer.pageX - this.dragStartX;\n    var moveY = pointer.pageY - this.dragStartY;\n    this.onDragMove(pointer, moveX, moveY);\n  };\n\n  Dragger.prototype.onmouseup = Dragger.prototype.onpointerup = Dragger.prototype.ontouchend = Dragger.prototype.dragEnd = function ()\n  /* event */\n  {\n    window.removeEventListener(moveEvent, this);\n    window.removeEventListener(upEvent, this);\n    this.onDragEnd();\n  };\n\n  return Dragger;\n});","/**\n * Group\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./anchor'));\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Group = factory(Zdog.Anchor);\n  }\n})(this, function factory(Anchor) {\n  var Group = Anchor.subclass({\n    updateSort: false,\n    visible: true\n  }); // ----- update ----- //\n\n  Group.prototype.updateSortValue = function () {\n    var sortValueTotal = 0;\n    this.flatGraph.forEach(function (item) {\n      item.updateSortValue();\n      sortValueTotal += item.sortValue;\n    }); // average sort value of all points\n    // def not geometrically correct, but works for me\n\n    this.sortValue = sortValueTotal / this.flatGraph.length;\n\n    if (this.updateSort) {\n      this.flatGraph.sort(Anchor.shapeSorter);\n    }\n  }; // ----- render ----- //\n\n\n  Group.prototype.render = function (ctx, renderer) {\n    if (!this.visible) {\n      return;\n    }\n\n    this.flatGraph.forEach(function (item) {\n      item.render(ctx, renderer);\n    });\n  }; // actual group flatGraph only used inside group\n\n\n  Group.prototype.updateFlatGraph = function () {\n    // do not include self\n    var flatGraph = [];\n    this.flatGraph = this.addChildFlatGraph(flatGraph);\n  }; // do not include children, group handles rendering & sorting internally\n\n\n  Group.prototype.getFlatGraph = function () {\n    return [this];\n  };\n\n  return Group;\n});","/**\n * Rect\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./shape'));\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Rect = factory(Zdog.Shape);\n  }\n})(this, function factory(Shape) {\n  var Rect = Shape.subclass({\n    width: 1,\n    height: 1\n  });\n\n  Rect.prototype.setPath = function () {\n    var x = this.width / 2;\n    var y = this.height / 2;\n    /* eslint key-spacing: \"off\" */\n\n    this.path = [{\n      x: -x,\n      y: -y\n    }, {\n      x: x,\n      y: -y\n    }, {\n      x: x,\n      y: y\n    }, {\n      x: -x,\n      y: y\n    }];\n  };\n\n  return Rect;\n});"],"sourceRoot":""}