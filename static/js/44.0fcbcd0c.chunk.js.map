{"version":3,"sources":["components/Articles/RocDevSurvey/RocDevSurvey.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","components/_ui/Tooltip-old/Tooltip.jsx"],"names":["formatSalary","d","numeral","format","ordinalColors","colorScale","d3","range","domain","datasets","experience","label","data","dataExperience","key","options","isOrdinal","formatOption","concat","management","dataManagement","race","_","map","dataRace","Object","objectSpread2","filteredKeys","disclaimer","remote","dataRemote","size","dataSize","formatOptionLegend","time","dataTime","parsedDatasets","dataset","filter","includes","toConsumableArray","counts","countBy","maxCount","max","values","keys","countsBySalary","fromPairs","groupBy","children","salary","maxCountBySalary","flatMap","means","salaries","group","meanBy","colors","times","length","i","keyColors","zipObject","extent","xScale","bins","thresholds","ticks","buckets","RocDevSurvey","props","_this","classCallCheck","this","_super","call","contents","React","createRef","groups","takeSnapshotsOfContents","elem","current","domToImage","toPng","then","dataUrl","Image","src","link","document","createElement","download","href","click","catch","error","console","takeSnapshots","each","state","classNames","className","_this2","obj","TypeError","_objectDestructuringEmpty","react_default","a","getClassName","Button","onClick","ref","RocDevSurvey_RocDevSurveyGroup","assign","Component","RocDevSurveyGroup","_this$props","objectWithoutProperties","first","bin","x0","option","style","width","left","last","x1","opacity","zIndex","Tooltip","require","_Users_linying_codespace_Lyzzz_s_Blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__","_Users_linying_codespace_Lyzzz_s_Blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_6___default","getStyle","defaultProps"],"mappings":"0hfAiBMA,WAAe,SAAAC,GAAC,OAAIC,IAAQD,GAAGE,OAAO,UAEtCC,EAAgB,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACpHC,EAAaC,gBAAiBC,MAAM,CAAC,UAAW,YAAYC,OAAO,CAAC,EAAG,IACvEC,EAAW,CACfC,WAAY,CACVC,MAAO,sBACPC,KAAMC,EACNC,IAAK,MACLC,QAAS,CAAC,KAAM,MAAO,OAAQ,QAAS,OACxCC,WAAW,EACXC,aAAc,SAAAhB,GAAC,SAAAiB,OAAOjB,EAAP,YAEjBkB,WAAY,CACVR,MAAO,gBACPC,KAAMQ,EACNH,aAAc,SAAAhB,GAAC,MAAS,QAALA,EAAc,aAAe,mBAElDoB,KAAM,CACJV,MAAO,OACPC,KAAMU,IAAEC,IAAIC,EAAU,SAAAvB,GAAC,OAAAwB,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GAClBxB,GADkB,IAGrBoB,KAAgB,6BAAVpB,EAAEoB,KAAsC,4BAA8B,oCAE9EM,aAAc,CAAC,qBACfC,WAAY,iDACZX,aAAc,SAAAhB,GAAC,OAAIA,IAErB4B,OAAQ,CACNlB,MAAO,YACPC,KAAMkB,EACNb,aAAc,SAAAhB,GAAC,MAAS,QAALA,EAAc,SAAW,eAE9C8B,KAAM,CACJpB,MAAO,6BACPC,KAAMoB,EACNlB,IAAK,gBACLC,QAAS,CAAE,IAAK,OAAQ,QAAS,SAAU,UAAW,WAAY,YAAa,YAAa,aAAc,UAC1GC,WAAW,EACXC,aAAc,SAAAhB,GAAC,SAAAiB,OAAOjB,EAAP,eACfgC,mBAAoB,SAAAhC,GAAC,OAAIA,IAE3BiC,KAAM,CACJvB,MAAO,oBACPC,KAAMuB,EACNrB,IAAK,QACLG,aAAc,SAAAhB,GAAC,OAAIA,KAIjBmC,EAAgBd,IAAEC,IAAId,EAAU,SAAC4B,EAASvB,GAC9CA,EAAMuB,EAAQvB,KAAOA,EACrB,IAAMF,EAAOU,IAAEgB,OAAOD,EAAQzB,KAAM,SAAAX,GAAC,OAAKqB,IAAEiB,SAAF,CAAY,MAAZrB,OAAAO,OAAAe,EAAA,EAAAf,CAAsBY,EAAQV,cAAgB,KAAM1B,EAAEa,MAC1F2B,EAASnB,IAAEoB,QAAQ9B,EAAME,GACzB6B,EAAWrB,IAAEsB,IAAItB,IAAEuB,OAAOJ,IAC1B1B,EAAUsB,EAAQtB,SAAWO,IAAEwB,KAAKL,GACpCM,EAAiBzB,IAAE0B,UAAU1B,IAAEC,IAAID,IAAE2B,QAAQrC,EAAM,UAAW,SAACsC,EAAUC,GAAX,MAAsB,CAACA,EAAQ7B,IAAEoB,QAAQQ,EAAUpC,OACjHsC,EAAmB9B,IAAEsB,IAAItB,IAAE+B,QAAQ/B,IAAEuB,OAAOE,GAAiB,SAAA9C,GAAC,OAAIqB,IAAEuB,OAAO5C,MAC3EqD,EAAQhC,IAAE0B,UACd1B,IAAEC,IAAID,IAAE2B,QAAQrC,EAAME,GAAM,SAACyC,EAAUC,GAAX,MAAqB,CAC/CA,EACAlC,IAAEmC,OAAOF,EAAU,cAGjBG,EAASrB,EAAQrB,UACrBM,IAAEqC,MAAM5C,EAAQ6C,OAAQ,SAAAC,GAAC,OAAIxD,EAAWwD,GAAK9C,EAAQ6C,OAAS,MAC9DxD,EACI0D,EAAYxC,IAAEyC,UAAUhD,EAAS2C,GACjCM,EAAS1D,SAAUgB,IAAEC,IAAIX,EAAM,WAC/BqD,EAAS3D,gBAAiBE,OAAOwD,GAIjCE,EAHU5D,QACbE,OAAOwD,GACPG,WAAWF,EAAOG,MAAM,IACdC,CAAQzD,GAErB,OAAOa,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACFY,GADL,IAEEvB,MACAF,OACA6B,SACAa,QACAX,WACAS,mBACAL,iBACAhC,UACA2C,OAAQI,EACRI,WAiBEI,oDACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAA/C,OAAAgD,EAAA,EAAAhD,CAAAiD,KAAAJ,IACjBE,EAAAG,EAAAC,KAAAF,KAAMH,IAKRM,SAAWC,IAAMC,YANEP,EAOnBQ,OAAS1D,IAAE0B,UAAU1B,IAAEC,IAAIa,EAAgB,SAAAC,GAAO,MAAI,CACpDA,EAAQvB,IACRgE,IAAMC,gBATWP,EAmBnBS,wBAA0B,WACxB,IAAMC,EAAOV,EAAKK,SAASM,QAE3BC,IAAWC,MAAMH,GACdI,KAAK,SAAUC,IACF,IAAIC,OACZC,IAAMF,EAEV,IAAMG,EAAOC,SAASC,cAAc,KACpCF,EAAKG,SAAL,yCACAH,EAAKI,KAAOP,EACZG,EAAKK,UAENC,MAAM,SAAUC,GACbC,QAAQD,MAAM,8BAA+BA,MAjClCzB,EAqCnB2B,cAAgB,WACd7E,IAAE8E,KAAK5B,EAAKQ,OAAQ,SAACxB,EAAO1C,GAC1B,GAAK0C,EAAL,CACA,IAAM0B,EAAO1B,EAAM2B,QAAQD,KAAKC,QAEhCC,IAAWC,MAAMH,GACdI,KAAK,SAAUC,IACF,IAAIC,OACZC,IAAMF,EAEV,IAAMG,EAAOC,SAASC,cAAc,KACpCF,EAAKG,SAAL,sCAAA3E,OAAsDJ,EAAtD,SACA4E,EAAKI,KAAOP,EACZG,EAAKK,UAENC,MAAM,SAAUC,GACbC,QAAQD,MAAM,8BAA+BA,SAnDrDzB,EAAK6B,MAAQ,GAFI7B,0GAgBjB,OAAO8B,IAAW,eAAgB5B,KAAKH,MAAMgC,4CA2CtC,IAAAC,EAAA9B,KAGP,OCxLW,SAAA+B,GACf,SAAAA,EAAA,UAAAC,UAAA,gCDoLWC,CACMjC,KAAK2B,OAGhBO,EAAAC,EAAAjB,cAAA,OAAKW,UAAW7B,KAAKoC,gBACnBF,EAAAC,EAAAjB,cAAA,OAAKW,UAAU,iCACbK,EAAAC,EAAAjB,cAAA,MAAIW,UAAU,uBAAd,wBAGAK,EAAAC,EAAAjB,cAACmB,EAAA,EAAD,CAAQR,UAAU,8BAA8BS,QAAStC,KAAKyB,eAA9D,mBAIFS,EAAAC,EAAAjB,cAAA,OAAKW,UAAU,yBAAyBU,IAAKvC,KAAKG,UACjDvD,IAAEC,IAAIa,EAAgB,SAACC,EAASvB,GAAV,OACrB8F,EAAAC,EAAAjB,cAACsB,EAADzF,OAAA0F,OAAA,GACM9E,EADN,CAEE4E,IAAKT,EAAKxB,OAAO3C,EAAQvB,mBA7EVsG,aAyFrBC,GAFS/C,wNAGbY,KAAOJ,IAAMC,mEAEJ,IAAAuC,EAC6K5C,KAAKH,MAAjL5D,EADD2G,EACC3G,MAAOiB,EADR0F,EACQ1F,WAAYsC,EADpBoD,EACoBpD,KAAMnD,EAD1BuG,EAC0BvG,QAAiBuC,GAD3CgE,EACmC5D,OADnC4D,EAC2ChE,OAAOb,EADlD6E,EACkD7E,OAAQE,EAD1D2E,EAC0D3E,SAAUS,EADpEkE,EACoElE,iBAAkBL,EADtFuE,EACsFvE,eAAgB9B,EADtGqG,EACsGrG,aAAcgB,EADpHqF,EACoHrF,mBADpHqF,EACwItG,UADxIsG,EACmJ3F,aADnJF,OAAA8F,EAAA,EAAA9F,CAAA6F,EAAA,iLAEP,OACEV,EAAAC,EAAAjB,cAAA,OAAKW,UAAU,oBAAoBU,IAAKvC,KAAKQ,MAC3C0B,EAAAC,EAAAjB,cAAA,MAAIW,UAAU,4BACV5F,GAGAiG,EAAAC,EAAAjB,cAAA,OAAKW,UAAU,6BACbK,EAAAC,EAAAjB,cAAA,OAAKW,UAAU,8BACbK,EAAAC,EAAAjB,cAAA,OAAKW,UAAU,2BACbK,EAAAC,EAAAjB,cAAA,OAAKW,UAAU,iCACbK,EAAAC,EAAAjB,cAAA,OAAKW,UAAU,uCACbK,EAAAC,EAAAjB,cAAA,OAAKW,UAAU,+CAEfK,EAAAC,EAAAjB,cAAA,OAAKW,UAAU,6CACbK,EAAAC,EAAAjB,cAAA,OAAKW,UAAU,uCADjB,WAQNK,EAAAC,EAAAjB,cAAA,OAAKW,UAAU,iCACXK,EAAAC,EAAAjB,cAAA,OAAKW,UAAU,gCACZjF,IAAEC,IAAID,IAAEkG,MAAMpF,GAAgB8B,KAAM,SAACuD,GAAD,OACnCb,EAAAC,EAAAjB,cAAA,OAAKW,UAAU,qCAAqCzF,IAAK2G,EAAIC,IAC3Dd,EAAAC,EAAAjB,cAAA,OAAKW,UAAU,4CACbK,EAAAC,EAAAjB,cAAA,QAAMW,UAAU,oCAAhB,MA/NPtG,EA+NiFwH,EAAIC,GAAK,IA/NrFxH,IAAQD,GAAGE,OAAO,QA8NlB,MA9NL,IAAAF,QAwOb2G,EAAAC,EAAAjB,cAAA,OAAKW,UAAU,8BACbK,EAAAC,EAAAjB,cAAA,OAAKW,UAAU,2BACZjF,IAAEC,IAAIR,EAAS,SAAA4G,GAAM,OACpBf,EAAAC,EAAAjB,cAAA,OAAKW,UAAU,gCAAgCzF,IAAK6G,GAClDf,EAAAC,EAAAjB,cAAA,OAAKW,UAAU,uCACbK,EAAAC,EAAAjB,cAAA,OAAKW,UAAU,8CACXtE,EAAqBA,EAAmB0F,GAAU1G,EAAa0G,IAEnEf,EAAAC,EAAAjB,cAAA,OAAKW,UAAU,6CACXvG,EAAasD,EAAMqE,MAGzBf,EAAAC,EAAAjB,cAAA,OAAKW,UAAU,qCAAqCqB,MAAO,CACzDC,MAAK,GAAA3G,OAAuB,IAAjBuB,EAAOkF,GAAiBhF,EAA9B,YAObiE,EAAAC,EAAAjB,cAAA,OAAKW,UAAU,iCACZjF,IAAEC,IAAIR,EAAS,SAAC4G,EAAQ9D,GAAT,OACd+C,EAAAC,EAAAjB,cAAA,OAAKW,UAAU,+BAA+BzF,IAAK6G,GAI/Cf,EAAAC,EAAAjB,cAAA,OAAKW,UAAU,qCACbqB,MAAO,CACLE,KAAI,GAAA5G,OAA2C,KAApCoC,EAAMqE,GAAUrG,IAAEkG,MAAMtD,GAAMwD,KAAepG,IAAEyG,KAAK7D,GAAM8D,GAAK,IAAS1G,IAAEkG,MAAMtD,GAAMwD,IAA7F,QAGTpG,IAAEC,IAAI2C,EAAM,SAACuD,GAAD,OACXb,EAAAC,EAAAjB,cAAA,OAAKW,UAAU,qCAAqCzF,IAAK2G,EAAIC,IAC3Dd,EAAAC,EAAAjB,cAAA,OAAKW,UAAU,0CAA0CqB,MAAO,CAG9DK,UAAWlF,EAAe0E,EAAIC,KAAO,IAAIC,IAAU,GAAKvE,EACxD8E,OAAQ9E,IAAqBL,EAAe0E,EAAIC,KAAO,IAAIC,IAAU,MAGvEf,EAAAC,EAAAjB,cAACuC,EAAA,EAAD,CAAS5B,UAAU,+CACftF,EAAa0G,GADjB,KAC8B3H,EAAayH,EAAIC,IAD/C,MACyD3E,EAAe0E,EAAIC,KAAO,IAAIC,IAAU,EADjG,aA4BT/F,GACCgF,EAAAC,EAAAjB,cAAA,OAAKW,UAAU,iCACX3E,WA9GgBwF,sIE9MhCgB,EAAQ,SAEFD,+KAQF,OAAO7B,IACL,UAAW5B,KAAKH,MAAMgC,8CAIf,IACDqB,EAAUlD,KAAKH,MAAfqD,MACR,OAAOnG,OAAA4G,EAAA,EAAA5G,CAAA,GACFmG,oCAIE,IAAAN,EAC+B5C,KAAKH,MAAfA,GADrB+C,EACCM,MADDN,EACQpE,SADRzB,OAAA6G,EAAA,EAAA7G,CAAA6F,EAAA,uBAGP,OACEiB,EAAA1B,EAAAjB,cAAA,MAAAnE,OAAA0F,OAAA,GAAS5C,EAAT,CAAgBgC,UAAW7B,KAAKoC,eAAgBc,MAAOlD,KAAK8D,aAC1DD,EAAA1B,EAAAjB,cAAA,OAAKW,UAAU,qBACZ7B,KAAKH,MAAMrB,kBA1BAkE,aAAhBe,EAIGM,aAAe,GA6BTN","file":"static/js/44.0fcbcd0c.chunk.js","sourcesContent":["import React, {Component} from \"react\"\nimport PropTypes from \"prop-types\"\nimport numeral from \"numeral\"\nimport domToImage from \"dom-to-image\"\nimport * as d3 from \"d3\"\nimport classNames from \"classnames\"\nimport _ from \"lodash\"\nimport Tooltip from \"components/_ui/Tooltip-old/Tooltip\"\nimport Button from \"components/_ui/Button/Button\"\nimport dataExperience from \"./experience.json\"\nimport dataManagement from \"./management.json\"\nimport dataRace from \"./race.json\"\nimport dataRemote from \"./remote.json\"\nimport dataSize from \"./size.json\"\nimport dataTime from \"./time.json\"\nimport 'components/Articles/RocDevSurvey/RocDevSurvey.scss';\n\nconst formatSalary = d => numeral(d).format(\"$0,0\")\nconst formatNumber = d => numeral(d).format(\"0,0\")\nconst ordinalColors = [\"#c7ecee\", \"#778beb\", \"#f7d794\", \"#63cdda\", \"#cf6a87\", \"#e77f67\", \"#786fa6\", \"#FDA7DF\", \"#4b7bec\", \"#778ca3\"];\nconst colorScale = d3.scaleLinear().range([\"#c7ecee\", \"#686de0\"]).domain([0, 1])\nconst datasets = {\n  experience: {\n    label: \"Years of Experience\",\n    data: dataExperience,\n    key: \"yoe\",\n    options: [\"<2\", \"3-5\", \"6-10\", \"11-15\", \"16+\", ],\n    isOrdinal: true,\n    formatOption: d => `${d} years`,\n  },\n  management: {\n    label: \"Is Management\",\n    data: dataManagement,\n    formatOption: d => d == \"true\" ? \"Management\" : \"Not management\",\n  },\n  race: {\n    label: \"Race\",\n    data: _.map(dataRace, d => ({\n      ...d,\n      // race: _.includes(d.race, \", \") ? \"Mixed\" : d.race,\n      race: d.race == \"White or European descent\" ? \"White or European descent\" : \"Not White or European descent\",\n    })),\n    filteredKeys: [\"Prefer not to say\"],\n    disclaimer: \"Non-white races bucketed to preserve anonymity\",\n    formatOption: d => d,\n  },\n  remote: {\n    label: \"Is Remote\",\n    data: dataRemote,\n    formatOption: d => d == \"true\" ? \"Remote\" : \"Not remote\",\n  },\n  size: {\n    label: \"Company Size (# Employees)\",\n    data: dataSize,\n    key: \"num_employees\",\n    options: [ \"1\", \"2-10\", \"11-50\", \"51-200\", \"201-500\", \"501-1000\", \"1001-2000\", \"2001-5000\", \"5001-10000\", \"10001+\", ],\n    isOrdinal: true,\n    formatOption: d => `${d} employees`,\n    formatOptionLegend: d => d,\n  },\n  time: {\n    label: \"Employment Status\",\n    data: dataTime,\n    key: \"ftcon\",\n    formatOption: d => d,\n  },\n}\n\nconst parsedDatasets =_.map(datasets, (dataset, key) => {\n  key = dataset.key || key\n  const data = _.filter(dataset.data, d => !_.includes([null, ...(dataset.filteredKeys || [])], d[key]))\n  const counts = _.countBy(data, key)\n  const maxCount = _.max(_.values(counts))\n  const options = dataset.options || _.keys(counts)\n  const countsBySalary = _.fromPairs(_.map(_.groupBy(data, \"salary\"), (children, salary) => [salary, _.countBy(children, key)]))\n  const maxCountBySalary = _.max(_.flatMap(_.values(countsBySalary), d => _.values(d)))\n  const means = _.fromPairs(\n    _.map(_.groupBy(data, key), (salaries, group) => [\n      group,\n      _.meanBy(salaries, \"salary\"),\n    ])\n  )\n  const colors = dataset.isOrdinal ?\n    _.times(options.length, i => colorScale(i / (options.length - 1))) :\n    ordinalColors\n  const keyColors = _.zipObject(options, colors)\n  const extent = d3.extent(_.map(data, \"salary\"))\n  const xScale = d3.scaleLinear().domain(extent);\n  const buckets = d3.bin()\n    .domain(extent)\n    .thresholds(xScale.ticks(10))\n  const bins = buckets(data);\n\n  return {\n    ...dataset,\n    key,\n    data,\n    counts,\n    means,\n    maxCount,\n    maxCountBySalary,\n    countsBySalary,\n    options,\n    colors: keyColors,\n    bins,\n  }\n})\n// console.log({parsedDatasets})\n\n\n// const parsedData = _.map(data, (info, name) => _.extend({}, info, {\n//   name,\n//   date: new Date(_.get(info, \"Date\")),\n//   job: _.get(info,\"Job\").split(\", \"),\n// }))\n// console.table(_.first(parsedData))\n// const jobs = _.sortBy(_.filter(_.toPairs(_.countBy(_.map(_.flatMap(parsedData, \"job\"), job => job.replace(\" / \", \"/\")))), \"0\"), d => -_.get(d, 1))\n// console.log(jobs)\n// const total = parsedData.length;\n// const genders = _.sortBy(_.filter(_.toPairs(_.countBy(parsedData, \"Gender\")), \"0\"), d => -_.get(d, 1))\n\nclass RocDevSurvey extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n    }\n  }\n\n  contents = React.createRef()\n  groups = _.fromPairs(_.map(parsedDatasets, dataset => [\n    dataset.key,\n    React.createRef(),\n  ]))\n\n  componentDidMount() {\n  }\n\n  getClassName() {\n    return classNames(\"RocDevSurvey\", this.props.className)\n  }\n\n  takeSnapshotsOfContents = () => {\n    const elem = this.contents.current\n\n    domToImage.toPng(elem)\n      .then(function (dataUrl) {\n        const img = new Image()\n        img.src = dataUrl\n\n        const link = document.createElement('a');\n        link.download = `2018-rocdev-salary-survey-results.jpeg`;\n        link.href = dataUrl;\n        link.click();\n      })\n      .catch(function (error) {\n          console.error('oops, something went wrong!', error)\n      })\n  }\n\n  takeSnapshots = () => {\n    _.each(this.groups, (group, key) => {\n      if (!group) return\n      const elem = group.current.elem.current\n\n      domToImage.toPng(elem)\n        .then(function (dataUrl) {\n          const img = new Image()\n          img.src = dataUrl\n\n          const link = document.createElement('a');\n          link.download = `2018-rocdev-salary-survey-results--${key}.jpeg`;\n          link.href = dataUrl;\n          link.click();\n        })\n        .catch(function (error) {\n            console.error('oops, something went wrong!', error)\n        })\n    })\n  }\n\n\n  render() {\n    const {  } = this.state\n\n    return (\n      <div className={this.getClassName()}>\n        <div className=\"RocDevSurvey__title-container\">\n          <h2 className=\"RocDevSurvey__title\">\n            RocDev Salary Survey\n          </h2>\n          <Button className=\"RocDevSurvey__title__button\" onClick={this.takeSnapshots}>\n            Take snapshots\n          </Button>\n        </div>\n        <div className=\"RocDevSurvey__contents\" ref={this.contents}>\n        {_.map(parsedDatasets, (dataset, key) => (\n          <RocDevSurveyGroup\n            {...dataset}\n            ref={this.groups[dataset.key]}\n          />\n        ))}\n\n      </div>\n    </div>\n    )\n  }\n}\n\nexport default RocDevSurvey\n\nclass RocDevSurveyGroup extends Component {\n  elem = React.createRef()\n\n  render() {\n    const { label, disclaimer, bins, options, colors, means, counts, maxCount, maxCountBySalary, countsBySalary, formatOption, formatOptionLegend, isOrdinal, filteredKeys,...props } = this.props\n    return (\n      <div className=\"RocDevSurveyGroup\" ref={this.elem}>\n        <h3 className=\"RocDevSurveyGroup__label\">\n          { label }\n        </h3>\n\n            <div className=\"RocDevSurveyGroup__legend\">\n              <div className=\"RocDevSurveyGroup__content\">\n                <div className=\"RocDevSurveyGroup__bars\">\n                  <div className=\"RocDevSurveyGroup__bars__item\">\n                    <div className=\"RocDevSurveyGroup__bars__item__text\">\n                      <div className=\"RocDevSurveyGroup__bars__item__text__label\">\n                      </div>\n                      <div className=\"RocDevSurveyGroup__bars__item__text__mean\">\n                        <div className=\"RocDevSurveyGroup__histogram__mean\" />\n                          Mean\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"RocDevSurveyGroup__histograms\">\n                    <div className=\"RocDevSurveyGroup__histogram\">\n                      {_.map(_.first(parsedDatasets).bins, (bin) => (\n                        <div className=\"RocDevSurveyGroup__histogram__item\" key={bin.x0}>\n                          <div className=\"RocDevSurveyGroup__histogram__item__text\">\n                            <span className=\"RocDevSurveyGroup__number-prefix\">$</span>{ formatNumber(bin.x0 / 1000) }k\n                          </div>\n                        </div>\n                      ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n        <div className=\"RocDevSurveyGroup__content\">\n          <div className=\"RocDevSurveyGroup__bars\">\n            {_.map(options, option => (\n              <div className=\"RocDevSurveyGroup__bars__item\" key={option}>\n                <div className=\"RocDevSurveyGroup__bars__item__text\">\n                  <div className=\"RocDevSurveyGroup__bars__item__text__label\">\n                    { formatOptionLegend ? formatOptionLegend(option) : formatOption(option) }\n                  </div>\n                  <div className=\"RocDevSurveyGroup__bars__item__text__mean\">\n                    { formatSalary(means[option]) }\n                  </div>\n                </div>\n                <div className=\"RocDevSurveyGroup__bars__item__bar\" style={{\n                  width: `${(counts[option] * 100) / maxCount}%`,\n                  // background: colors[option],\n                }} />\n              </div>\n            ))}\n          </div>\n\n          <div className=\"RocDevSurveyGroup__histograms\">\n            {_.map(options, (option, i) => (\n              <div className=\"RocDevSurveyGroup__histogram\" key={option}>\n              {/* <div className=\"RocDevSurveyGroup__histogram__item__legend\">\n              { formatSalary(bin.x0 / 1000) }k\n            </div> */}\n                  <div className=\"RocDevSurveyGroup__histogram__mean\"\n                    style={{\n                      left: `${((means[option] - _.first(bins).x0) * 100) / ((_.last(bins).x1 + 10000) - _.first(bins).x0)}%`,\n                    }}\n                  />\n                {_.map(bins, (bin) => (\n                  <div className=\"RocDevSurveyGroup__histogram__item\" key={bin.x0}>\n                    <div className=\"RocDevSurveyGroup__histogram__item__bar\" style={{\n                      // height: `${(((countsBySalary[bin.x0] || {})[option] ||0) * 100) / maxCountBySalary}%`,\n                      // background: colors[option],\n                      opacity: ((countsBySalary[bin.x0] || {})[option] ||0) / maxCountBySalary,\n                      zIndex: maxCountBySalary - ((countsBySalary[bin.x0] || {})[option] ||0),\n                    }}>\n                    </div>\n                    <Tooltip className=\"RocDevSurveyGroup__histogram__item__tooltip\">\n                      { formatOption(option) }: { formatSalary(bin.x0) } ({ (countsBySalary[bin.x0] || {})[option] ||0 })\n                    </Tooltip>\n                  </div>\n                ))}\n              </div>\n            ))}\n          </div>\n\n        {/*  <div className=\"RocDevSurvey__histogram\">\n            {_.map(bins, (bin) => (\n              <div className=\"RocDevSurvey__histogram__item\" key={bin.x0}>\n                <div className=\"RocDevSurvey__histogram__item__legend\">\n                  { formatSalary(bin.x0 / 1000) }k\n                </div>\n                {_.map(options, (option, i) => (\n                  <Tooltip className=\"RocDevSurvey__histogram__item__bar\" key={option} style={{\n                    height: `${(((countsBySalary[bin.x0] || {})[option] ||0) * 100) / maxCountBySalary}%`,\n                    background: colors[option],\n                    zIndex: maxCountBySalary - ((countsBySalary[bin.x0] || {})[option] ||0),\n                  }}>\n                    { option }: { formatSalary(bin.x0) } ({ (countsBySalary[bin.x0] || {})[option] ||0 })\n                  </Tooltip>\n                ))}\n              </div>\n            ))}\n          </div> */}\n        </div>\n          {disclaimer && (\n            <div className=\"RocDevSurveyGroup__disclaimer\">\n              { disclaimer }\n            </div>\n          )}\n\n      </div>\n    )\n  }\n}","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import React, {Component} from \"react\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\n\nrequire('./Tooltip.scss')\n\nclass Tooltip extends Component {\n  static propTypes = {\n  };\n\n  static defaultProps = {\n  };\n\n  getClassName() {\n    return classNames(\n      \"Tooltip\", this.props.className\n    )\n  }\n\n  getStyle() {\n    const { style } = this.props\n    return {\n      ...style,\n    }\n  }\n\n  render() {\n    const { style, children, ...props } = this.props\n\n    return (\n      <div {...props} className={this.getClassName()} style={this.getStyle()}>\n        <div className=\"Tooltip__contents\">\n          {this.props.children}\n        </div>\n      </div>\n      )\n  }\n}\n\nexport default Tooltip\n"],"sourceRoot":""}